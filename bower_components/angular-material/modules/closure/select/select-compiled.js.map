{"version":3,"sources":["select.js"],"names":[],"mappings":"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","file":"select-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.select');\ngoog.require('ngmaterial.components.backdrop');\ngoog.require('ngmaterial.core');\n/**\n * @ngdoc module\n * @name material.components.select\n */\n\n/***************************************************\n\n ### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service\n\n ***************************************************/\n\nSelectDirective['$inject'] = [\"$mdSelect\", \"$mdUtil\", \"$mdConstant\", \"$mdTheming\", \"$mdAria\", \"$parse\", \"$sce\", \"$injector\"];\nSelectMenuDirective['$inject'] = [\"$parse\", \"$mdUtil\", \"$mdConstant\", \"$mdTheming\"];\nOptionDirective['$inject'] = [\"$mdButtonInkRipple\", \"$mdUtil\"];\nSelectProvider['$inject'] = [\"$$interimElementProvider\"];\nvar SELECT_EDGE_MARGIN = 8;\nvar selectNextId = 0;\nvar CHECKBOX_SELECTION_INDICATOR =\n  angular.element('<div class=\"md-container\"><div class=\"md-icon\"></div></div>');\n\nangular.module('material.components.select', [\n    'material.core',\n    'material.components.backdrop'\n  ])\n  .directive('mdSelect', SelectDirective)\n  .directive('mdSelectMenu', SelectMenuDirective)\n  .directive('mdOption', OptionDirective)\n  .directive('mdOptgroup', OptgroupDirective)\n  .directive('mdSelectHeader', SelectHeaderDirective)\n  .provider('$mdSelect', SelectProvider);\n\n/**\n * @ngdoc directive\n * @name mdSelect\n * @restrict E\n * @module material.components.select\n *\n * @description Displays a select box, bound to an ng-model.\n *\n * When the select is required and uses a floating label, then the label will automatically contain\n * an asterisk (`*`). This behavior can be disabled by using the `md-no-asterisk` attribute.\n *\n * By default, the select will display with an underline to match other form elements. This can be\n * disabled by applying the `md-no-underline` CSS class.\n *\n * ### Option Params\n *\n * When applied, `md-option-empty` will mark the option as \"empty\" allowing the option to  clear the\n * select and put it back in it's default state. You may supply this attribute on any option you\n * wish, however, it is automatically applied to an option whose `value` or `ng-value` are not\n * defined.\n *\n * **Automatically Applied**\n *\n *  - `<md-option>`\n *  - `<md-option value>`\n *  - `<md-option value=\"\">`\n *  - `<md-option ng-value>`\n *  - `<md-option ng-value=\"\">`\n *\n * **NOT Automatically Applied**\n *\n *  - `<md-option ng-value=\"1\">`\n *  - `<md-option ng-value=\"''\">`\n *  - `<md-option ng-value=\"undefined\">`\n *  - `<md-option value=\"undefined\">` (this evaluates to the string `\"undefined\"`)\n *  - <code ng-non-bindable>&lt;md-option ng-value=\"{{someValueThatMightBeUndefined}}\"&gt;</code>\n *\n * **Note:** A value of `undefined` ***is considered a valid value*** (and does not auto-apply this\n * attribute) since you may wish this to be your \"Not Available\" or \"None\" option.\n *\n * **Note:** Using the `value` attribute (as opposed to `ng-value`) always evaluates to a string, so\n * `value=\"null\"` will require the test `ng-if=\"myValue != 'null'\"` rather than `ng-if=\"!myValue\"`.\n *\n * @param {expression} ng-model The model!\n * @param {boolean=} multiple Whether it's multiple.\n * @param {expression=} md-on-close Expression to be evaluated when the select is closed.\n * @param {expression=} md-on-open Expression to be evaluated when opening the select.\n * Will hide the select options and show a spinner until the evaluated promise resolves.\n * @param {expression=} md-selected-text Expression to be evaluated that will return a string\n * to be displayed as a placeholder in the select input box when it is closed. The value\n * will be treated as *text* (not html).\n * @param {expression=} md-selected-html Expression to be evaluated that will return a string\n * to be displayed as a placeholder in the select input box when it is closed. The value\n * will be treated as *html*. The value must either be explicitly marked as trustedHtml or\n * the ngSanitize module must be loaded.\n * @param {string=} placeholder Placeholder hint text.\n * @param md-no-asterisk {boolean=} When set to true, an asterisk will not be appended to the\n * floating label. **Note:** This attribute is only evaluated once; it is not watched.\n * @param {string=} aria-label Optional label for accessibility. Only necessary if no placeholder or\n * explicit label is present.\n * @param {string=} md-container-class Class list to get applied to the `.md-select-menu-container`\n * element (for custom styling).\n *\n * @usage\n * With a placeholder (label and aria-label are added dynamically)\n * <hljs lang=\"html\">\n *   <md-input-container>\n *     <md-select\n *       ng-model=\"someModel\"\n *       placeholder=\"Select a state\">\n *       <md-option ng-value=\"opt\" ng-repeat=\"opt in neighborhoods2\">{{ opt }}</md-option>\n *     </md-select>\n *   </md-input-container>\n * </hljs>\n *\n * With an explicit label\n * <hljs lang=\"html\">\n *   <md-input-container>\n *     <label>State</label>\n *     <md-select\n *       ng-model=\"someModel\">\n *       <md-option ng-value=\"opt\" ng-repeat=\"opt in neighborhoods2\">{{ opt }}</md-option>\n *     </md-select>\n *   </md-input-container>\n * </hljs>\n *\n * With a select-header\n *\n * When a developer needs to put more than just a text label in the\n * md-select-menu, they should use the md-select-header.\n * The user can put custom HTML inside of the header and style it to their liking.\n * One common use case of this would be a sticky search bar.\n *\n * When using the md-select-header the labels that would previously be added to the\n * OptGroupDirective are ignored.\n *\n * <hljs lang=\"html\">\n *   <md-input-container>\n *     <md-select ng-model=\"someModel\">\n *       <md-select-header>\n *         <span> Neighborhoods - </span>\n *       </md-select-header>\n *       <md-option ng-value=\"opt\" ng-repeat=\"opt in neighborhoods2\">{{ opt }}</md-option>\n *     </md-select>\n *   </md-input-container>\n * </hljs>\n *\n * ## Selects and object equality\n * When using a `md-select` to pick from a list of objects, it is important to realize how javascript handles\n * equality. Consider the following example:\n * <hljs lang=\"js\">\n * angular.controller('MyCtrl', function($scope) {\n *   $scope.users = [\n *     { id: 1, name: 'Bob' },\n *     { id: 2, name: 'Alice' },\n *     { id: 3, name: 'Steve' }\n *   ];\n *   $scope.selectedUser = { id: 1, name: 'Bob' };\n * });\n * </hljs>\n * <hljs lang=\"html\">\n * <div ng-controller=\"MyCtrl\">\n *   <md-select ng-model=\"selectedUser\">\n *     <md-option ng-value=\"user\" ng-repeat=\"user in users\">{{ user.name }}</md-option>\n *   </md-select>\n * </div>\n * </hljs>\n *\n * At first one might expect that the select should be populated with \"Bob\" as the selected user. However,\n * this is not true. To determine whether something is selected,\n * `ngModelController` is looking at whether `$scope.selectedUser == (any user in $scope.users);`;\n *\n * Javascript's `==` operator does not check for deep equality (ie. that all properties\n * on the object are the same), but instead whether the objects are *the same object in memory*.\n * In this case, we have two instances of identical objects, but they exist in memory as unique\n * entities. Because of this, the select will have no value populated for a selected user.\n *\n * To get around this, `ngModelController` provides a `track by` option that allows us to specify a different\n * expression which will be used for the equality operator. As such, we can update our `html` to\n * make use of this by specifying the `ng-model-options=\"{trackBy: '$value.id'}\"` on the `md-select`\n * element. This converts our equality expression to be\n * `$scope.selectedUser.id == (any id in $scope.users.map(function(u) { return u.id; }));`\n * which results in Bob being selected as desired.\n *\n * Working HTML:\n * <hljs lang=\"html\">\n * <div ng-controller=\"MyCtrl\">\n *   <md-select ng-model=\"selectedUser\" ng-model-options=\"{trackBy: '$value.id'}\">\n *     <md-option ng-value=\"user\" ng-repeat=\"user in users\">{{ user.name }}</md-option>\n *   </md-select>\n * </div>\n * </hljs>\n */\nfunction SelectDirective($mdSelect, $mdUtil, $mdConstant, $mdTheming, $mdAria, $parse, $sce,\n    $injector) {\n  var keyCodes = $mdConstant.KEY_CODE;\n  var NAVIGATION_KEYS = [keyCodes.SPACE, keyCodes.ENTER, keyCodes.UP_ARROW, keyCodes.DOWN_ARROW];\n\n  return {\n    restrict: 'E',\n    require: ['^?mdInputContainer', 'mdSelect', 'ngModel', '?^form'],\n    compile: compile,\n    controller: function() {\n    } // empty placeholder controller to be initialized in link\n  };\n\n  function compile(element, attr) {\n    // add the select value that will hold our placeholder or selected option value\n    var valueEl = angular.element('<md-select-value><span></span></md-select-value>');\n    valueEl.append('<span class=\"md-select-icon\" aria-hidden=\"true\"></span>');\n    valueEl.addClass('md-select-value');\n    if (!valueEl[0].hasAttribute('id')) {\n      valueEl.attr('id', 'select_value_label_' + $mdUtil.nextUid());\n    }\n\n    // There's got to be an md-content inside. If there's not one, let's add it.\n    if (!element.find('md-content').length) {\n      element.append(angular.element('<md-content>').append(element.contents()));\n    }\n\n\n    // Add progress spinner for md-options-loading\n    if (attr.mdOnOpen) {\n\n      // Show progress indicator while loading async\n      // Use ng-hide for `display:none` so the indicator does not interfere with the options list\n      element\n        .find('md-content')\n        .prepend(angular.element(\n          '<div>' +\n          ' <md-progress-circular md-mode=\"indeterminate\" ng-if=\"$$loadingAsyncDone === false\" md-diameter=\"25px\"></md-progress-circular>' +\n          '</div>'\n        ));\n\n      // Hide list [of item options] while loading async\n      element\n        .find('md-option')\n        .attr('ng-show', '$$loadingAsyncDone');\n    }\n\n    if (attr.name) {\n      var autofillClone = angular.element('<select class=\"md-visually-hidden\">');\n      autofillClone.attr({\n        'name': attr.name,\n        'aria-hidden': 'true',\n        'tabindex': '-1'\n      });\n      var opts = element.find('md-option');\n      angular.forEach(opts, function(el) {\n        var newEl = angular.element('<option>' + el.innerHTML + '</option>');\n        if (el.hasAttribute('ng-value')) newEl.attr('ng-value', el.getAttribute('ng-value'));\n        else if (el.hasAttribute('value')) newEl.attr('value', el.getAttribute('value'));\n        autofillClone.append(newEl);\n      });\n\n      // Adds an extra option that will hold the selected value for the\n      // cases where the select is a part of a non-angular form. This can be done with a ng-model,\n      // however if the `md-option` is being `ng-repeat`-ed, Angular seems to insert a similar\n      // `option` node, but with a value of `? string: <value> ?` which would then get submitted.\n      // This also goes around having to prepend a dot to the name attribute.\n      autofillClone.append(\n        '<option ng-value=\"' + attr.ngModel + '\" selected></option>'\n      );\n\n      element.parent().append(autofillClone);\n    }\n\n    var isMultiple = $mdUtil.parseAttributeBoolean(attr.multiple);\n\n    // Use everything that's left inside element.contents() as the contents of the menu\n    var multipleContent = isMultiple ? 'multiple' : '';\n    var selectTemplate = '' +\n      '<div class=\"md-select-menu-container\" aria-hidden=\"true\">' +\n      '<md-select-menu {0}>{1}</md-select-menu>' +\n      '</div>';\n\n    selectTemplate = $mdUtil.supplant(selectTemplate, [multipleContent, element.html()]);\n    element.empty().append(valueEl);\n    element.append(selectTemplate);\n\n    if(!attr.tabindex){\n      attr.$set('tabindex', 0);\n    }\n\n    return function postLink(scope, element, attr, ctrls) {\n      var untouched = true;\n      var isDisabled, ariaLabelBase;\n\n      var containerCtrl = ctrls[0];\n      var mdSelectCtrl = ctrls[1];\n      var ngModelCtrl = ctrls[2];\n      var formCtrl = ctrls[3];\n      // grab a reference to the select menu value label\n      var valueEl = element.find('md-select-value');\n      var isReadonly = angular.isDefined(attr.readonly);\n      var disableAsterisk = $mdUtil.parseAttributeBoolean(attr.mdNoAsterisk);\n\n      if (disableAsterisk) {\n        element.addClass('md-no-asterisk');\n      }\n\n      if (containerCtrl) {\n        var isErrorGetter = containerCtrl.isErrorGetter || function() {\n          return ngModelCtrl.$invalid && (ngModelCtrl.$touched || (formCtrl && formCtrl.$submitted));\n        };\n\n        if (containerCtrl.input) {\n          // We ignore inputs that are in the md-select-header (one\n          // case where this might be useful would be adding as searchbox)\n          if (element.find('md-select-header').find('input')[0] !== containerCtrl.input[0]) {\n            throw new Error(\"<md-input-container> can only have *one* child <input>, <textarea> or <select> element!\");\n          }\n        }\n\n        containerCtrl.input = element;\n        if (!containerCtrl.label) {\n          $mdAria.expect(element, 'aria-label', element.attr('placeholder'));\n        }\n\n        scope.$watch(isErrorGetter, containerCtrl.setInvalid);\n      }\n\n      var selectContainer, selectScope, selectMenuCtrl;\n\n      findSelectContainer();\n      $mdTheming(element);\n\n      if (formCtrl && angular.isDefined(attr.multiple)) {\n        $mdUtil.nextTick(function() {\n          var hasModelValue = ngModelCtrl.$modelValue || ngModelCtrl.$viewValue;\n          if (hasModelValue) {\n            formCtrl.$setPristine();\n          }\n        });\n      }\n\n      var originalRender = ngModelCtrl.$render;\n      ngModelCtrl.$render = function() {\n        originalRender();\n        syncLabelText();\n        syncAriaLabel();\n        inputCheckValue();\n      };\n\n      attr.$observe('placeholder', ngModelCtrl.$render);\n\n      if (containerCtrl && containerCtrl.label) {\n        attr.$observe('required', function (value) {\n          // Toggle the md-required class on the input containers label, because the input container is automatically\n          // applying the asterisk indicator on the label.\n          containerCtrl.label.toggleClass('md-required', value && !disableAsterisk);\n        });\n      }\n\n      mdSelectCtrl.setLabelText = function(text) {\n        mdSelectCtrl.setIsPlaceholder(!text);\n\n        // Whether the select label has been given via user content rather than the internal\n        // template of <md-option>\n        var isSelectLabelFromUser = false;\n\n        if (attr.mdSelectedText && attr.mdSelectedHtml) {\n          throw Error('md-select cannot have both `md-selected-text` and `md-selected-html`');\n        }\n\n        if (attr.mdSelectedText || attr.mdSelectedHtml) {\n          text = $parse(attr.mdSelectedText || attr.mdSelectedHtml)(scope);\n          isSelectLabelFromUser = true;\n        } else if (!text) {\n          // Use placeholder attribute, otherwise fallback to the md-input-container label\n          var tmpPlaceholder = attr.placeholder ||\n              (containerCtrl && containerCtrl.label ? containerCtrl.label.text() : '');\n\n          text = tmpPlaceholder || '';\n          isSelectLabelFromUser = true;\n        }\n\n        var target = valueEl.children().eq(0);\n\n        if (attr.mdSelectedHtml) {\n            // Using getTrustedHtml will run the content through $sanitize if it is not already\n            // explicitly trusted. If the ngSanitize module is not loaded, this will\n            // *correctly* throw an sce error.\n            target.html($sce.getTrustedHtml(text));\n        } else if (isSelectLabelFromUser) {\n          target.text(text);\n        } else {\n          // If we've reached this point, the text is not user-provided.\n          target.html(text);\n        }\n      };\n\n      mdSelectCtrl.setIsPlaceholder = function(isPlaceholder) {\n        if (isPlaceholder) {\n          valueEl.addClass('md-select-placeholder');\n          if (containerCtrl && containerCtrl.label) {\n            containerCtrl.label.addClass('md-placeholder');\n          }\n        } else {\n          valueEl.removeClass('md-select-placeholder');\n          if (containerCtrl && containerCtrl.label) {\n            containerCtrl.label.removeClass('md-placeholder');\n          }\n        }\n      };\n\n      if (!isReadonly) {\n        element\n          .on('focus', function(ev) {\n            // Always focus the container (if we have one) so floating labels and other styles are\n            // applied properly\n            containerCtrl && containerCtrl.setFocused(true);\n          });\n\n        // Attach before ngModel's blur listener to stop propagation of blur event\n        // to prevent from setting $touched.\n        element.on('blur', function(event) {\n          if (untouched) {\n            untouched = false;\n            if (selectScope._mdSelectIsOpen) {\n              event.stopImmediatePropagation();\n            }\n          }\n\n          if (selectScope._mdSelectIsOpen) return;\n          containerCtrl && containerCtrl.setFocused(false);\n          inputCheckValue();\n        });\n      }\n\n      mdSelectCtrl.triggerClose = function() {\n        $parse(attr.mdOnClose)(scope);\n      };\n\n      scope.$$postDigest(function() {\n        initAriaLabel();\n        syncLabelText();\n        syncAriaLabel();\n      });\n\n      function initAriaLabel() {\n        var labelText = element.attr('aria-label') || element.attr('placeholder');\n        if (!labelText && containerCtrl && containerCtrl.label) {\n          labelText = containerCtrl.label.text();\n        }\n        ariaLabelBase = labelText;\n        $mdAria.expect(element, 'aria-label', labelText);\n      }\n\n      scope.$watch(function() {\n        return selectMenuCtrl.selectedLabels();\n      }, syncLabelText);\n\n      function syncLabelText() {\n        if (selectContainer) {\n          selectMenuCtrl = selectMenuCtrl || selectContainer.find('md-select-menu').controller('mdSelectMenu');\n          mdSelectCtrl.setLabelText(selectMenuCtrl.selectedLabels());\n        }\n      }\n\n      function syncAriaLabel() {\n        if (!ariaLabelBase) return;\n        var ariaLabels = selectMenuCtrl.selectedLabels({mode: 'aria'});\n        element.attr('aria-label', ariaLabels.length ? ariaLabelBase + ': ' + ariaLabels : ariaLabelBase);\n      }\n\n      var deregisterWatcher;\n      attr.$observe('ngMultiple', function(val) {\n        if (deregisterWatcher) deregisterWatcher();\n        var parser = $parse(val);\n        deregisterWatcher = scope.$watch(function() {\n          return parser(scope);\n        }, function(multiple, prevVal) {\n          if (multiple === undefined && prevVal === undefined) return; // assume compiler did a good job\n          if (multiple) {\n            element.attr('multiple', 'multiple');\n          } else {\n            element.removeAttr('multiple');\n          }\n          element.attr('aria-multiselectable', multiple ? 'true' : 'false');\n          if (selectContainer) {\n            selectMenuCtrl.setMultiple(multiple);\n            originalRender = ngModelCtrl.$render;\n            ngModelCtrl.$render = function() {\n              originalRender();\n              syncLabelText();\n              syncAriaLabel();\n              inputCheckValue();\n            };\n            ngModelCtrl.$render();\n          }\n        });\n      });\n\n      attr.$observe('disabled', function(disabled) {\n        if (angular.isString(disabled)) {\n          disabled = true;\n        }\n        // Prevent click event being registered twice\n        if (isDisabled !== undefined && isDisabled === disabled) {\n          return;\n        }\n        isDisabled = disabled;\n        if (disabled) {\n          element\n            .attr({'aria-disabled': 'true'})\n            .removeAttr('tabindex')\n            .off('click', openSelect)\n            .off('keydown', handleKeypress);\n        } else {\n          element\n            .attr({'tabindex': attr.tabindex, 'aria-disabled': 'false'})\n            .on('click', openSelect)\n            .on('keydown', handleKeypress);\n        }\n      });\n\n      if (!attr.hasOwnProperty('disabled') && !attr.hasOwnProperty('ngDisabled')) {\n        element.attr({'aria-disabled': 'false'});\n        element.on('click', openSelect);\n        element.on('keydown', handleKeypress);\n      }\n\n      var ariaAttrs = {\n        role: 'listbox',\n        'aria-expanded': 'false',\n        'aria-multiselectable': isMultiple && !attr.ngMultiple ? 'true' : 'false'\n      };\n\n      if (!element[0].hasAttribute('id')) {\n        ariaAttrs.id = 'select_' + $mdUtil.nextUid();\n      }\n\n      var containerId = 'select_container_' + $mdUtil.nextUid();\n      selectContainer.attr('id', containerId);\n      ariaAttrs['aria-owns'] = containerId;\n      element.attr(ariaAttrs);\n\n      scope.$on('$destroy', function() {\n        $mdSelect\n          .destroy()\n          .finally(function() {\n            if (containerCtrl) {\n              containerCtrl.setFocused(false);\n              containerCtrl.setHasValue(false);\n              containerCtrl.input = null;\n            }\n            ngModelCtrl.$setTouched();\n          });\n      });\n\n\n\n      function inputCheckValue() {\n        // The select counts as having a value if one or more options are selected,\n        // or if the input's validity state says it has bad input (eg string in a number input)\n        containerCtrl && containerCtrl.setHasValue(selectMenuCtrl.selectedLabels().length > 0 || (element[0].validity || {}).badInput);\n      }\n\n      function findSelectContainer() {\n        selectContainer = angular.element(\n          element[0].querySelector('.md-select-menu-container')\n        );\n        selectScope = scope;\n        if (attr.mdContainerClass) {\n          var value = selectContainer[0].getAttribute('class') + ' ' + attr.mdContainerClass;\n          selectContainer[0].setAttribute('class', value);\n        }\n        selectMenuCtrl = selectContainer.find('md-select-menu').controller('mdSelectMenu');\n        selectMenuCtrl.init(ngModelCtrl, attr.ngModel);\n        element.on('$destroy', function() {\n          selectContainer.remove();\n        });\n      }\n\n      function handleKeypress(e) {\n        if ($mdConstant.isNavigationKey(e)) {\n          // prevent page scrolling on interaction\n          e.preventDefault();\n          openSelect(e);\n        } else {\n          if ($mdConstant.isInputKey(e) || $mdConstant.isNumPadKey(e)) {\n            e.preventDefault();\n\n            var node = selectMenuCtrl.optNodeForKeyboardSearch(e);\n            if (!node || node.hasAttribute('disabled')) return;\n            var optionCtrl = angular.element(node).controller('mdOption');\n            if (!selectMenuCtrl.isMultiple) {\n              selectMenuCtrl.deselect(Object.keys(selectMenuCtrl.selected)[0]);\n            }\n            selectMenuCtrl.select(optionCtrl.hashKey, optionCtrl.value);\n            selectMenuCtrl.refreshViewValue();\n          }\n        }\n      }\n\n      function openSelect() {\n        selectScope._mdSelectIsOpen = true;\n        element.attr('aria-expanded', 'true');\n\n        $mdSelect.show({\n          scope: selectScope,\n          preserveScope: true,\n          skipCompile: true,\n          element: selectContainer,\n          target: element[0],\n          selectCtrl: mdSelectCtrl,\n          preserveElement: true,\n          hasBackdrop: true,\n          loadingAsync: attr.mdOnOpen ? scope.$eval(attr.mdOnOpen) || true : false\n        }).finally(function() {\n          selectScope._mdSelectIsOpen = false;\n          element.focus();\n          element.attr('aria-expanded', 'false');\n          ngModelCtrl.$setTouched();\n        });\n      }\n\n    };\n  }\n}\n\nfunction SelectMenuDirective($parse, $mdUtil, $mdConstant, $mdTheming) {\n  // We want the scope to be set to 'false' so an isolated scope is not created\n  // which would interfere with the md-select-header's access to the\n  // parent scope.\n  SelectMenuController['$inject'] = [\"$scope\", \"$attrs\", \"$element\"];\n  return {\n    restrict: 'E',\n    require: ['mdSelectMenu'],\n    scope: false,\n    controller: SelectMenuController,\n    link: {pre: preLink}\n  };\n\n  // We use preLink instead of postLink to ensure that the select is initialized before\n  // its child options run postLink.\n  function preLink(scope, element, attr, ctrls) {\n    var selectCtrl = ctrls[0];\n\n    element.addClass('_md');     // private md component indicator for styling\n\n    $mdTheming(element);\n    element.on('click', clickListener);\n    element.on('keypress', keyListener);\n\n    function keyListener(e) {\n      if (e.keyCode == 13 || e.keyCode == 32) {\n        clickListener(e);\n      }\n    }\n\n    function clickListener(ev) {\n      var option = $mdUtil.getClosest(ev.target, 'md-option');\n      var optionCtrl = option && angular.element(option).data('$mdOptionController');\n      if (!option || !optionCtrl) return;\n      if (option.hasAttribute('disabled')) {\n        ev.stopImmediatePropagation();\n        return false;\n      }\n\n      var optionHashKey = selectCtrl.hashGetter(optionCtrl.value);\n      var isSelected = angular.isDefined(selectCtrl.selected[optionHashKey]);\n\n      scope.$apply(function() {\n        if (selectCtrl.isMultiple) {\n          if (isSelected) {\n            selectCtrl.deselect(optionHashKey);\n          } else {\n            selectCtrl.select(optionHashKey, optionCtrl.value);\n          }\n        } else {\n          if (!isSelected) {\n            selectCtrl.deselect(Object.keys(selectCtrl.selected)[0]);\n            selectCtrl.select(optionHashKey, optionCtrl.value);\n          }\n        }\n        selectCtrl.refreshViewValue();\n      });\n    }\n  }\n\n  function SelectMenuController($scope, $attrs, $element) {\n    var self = this;\n    self.isMultiple = angular.isDefined($attrs.multiple);\n    // selected is an object with keys matching all of the selected options' hashed values\n    self.selected = {};\n    // options is an object with keys matching every option's hash value,\n    // and values matching every option's controller.\n    self.options = {};\n\n    $scope.$watchCollection(function() {\n      return self.options;\n    }, function() {\n      self.ngModel.$render();\n    });\n\n    var deregisterCollectionWatch;\n    var defaultIsEmpty;\n    self.setMultiple = function(isMultiple) {\n      var ngModel = self.ngModel;\n      defaultIsEmpty = defaultIsEmpty || ngModel.$isEmpty;\n\n      self.isMultiple = isMultiple;\n      if (deregisterCollectionWatch) deregisterCollectionWatch();\n\n      if (self.isMultiple) {\n        ngModel.$validators['md-multiple'] = validateArray;\n        ngModel.$render = renderMultiple;\n\n        // watchCollection on the model because by default ngModel only watches the model's\n        // reference. This allowed the developer to also push and pop from their array.\n        $scope.$watchCollection(self.modelBinding, function(value) {\n          if (validateArray(value)) renderMultiple(value);\n          self.ngModel.$setPristine();\n        });\n\n        ngModel.$isEmpty = function(value) {\n          return !value || value.length === 0;\n        };\n      } else {\n        delete ngModel.$validators['md-multiple'];\n        ngModel.$render = renderSingular;\n      }\n\n      function validateArray(modelValue, viewValue) {\n        // If a value is truthy but not an array, reject it.\n        // If value is undefined/falsy, accept that it's an empty array.\n        return angular.isArray(modelValue || viewValue || []);\n      }\n    };\n\n    var searchStr = '';\n    var clearSearchTimeout, optNodes, optText;\n    var CLEAR_SEARCH_AFTER = 300;\n\n    self.optNodeForKeyboardSearch = function(e) {\n      clearSearchTimeout && clearTimeout(clearSearchTimeout);\n      clearSearchTimeout = setTimeout(function() {\n        clearSearchTimeout = undefined;\n        searchStr = '';\n        optText = undefined;\n        optNodes = undefined;\n      }, CLEAR_SEARCH_AFTER);\n\n      // Support 1-9 on numpad\n      var keyCode = e.keyCode - ($mdConstant.isNumPadKey(e) ? 48 : 0);\n\n      searchStr += String.fromCharCode(keyCode);\n      var search = new RegExp('^' + searchStr, 'i');\n      if (!optNodes) {\n        optNodes = $element.find('md-option');\n        optText = new Array(optNodes.length);\n        angular.forEach(optNodes, function(el, i) {\n          optText[i] = el.textContent.trim();\n        });\n      }\n      for (var i = 0; i < optText.length; ++i) {\n        if (search.test(optText[i])) {\n          return optNodes[i];\n        }\n      }\n    };\n\n    self.init = function(ngModel, binding) {\n      self.ngModel = ngModel;\n      self.modelBinding = binding;\n\n      // Setup a more robust version of isEmpty to ensure value is a valid option\n      self.ngModel.$isEmpty = function($viewValue) {\n        // We have to transform the viewValue into the hashKey, because otherwise the\n        // OptionCtrl may not exist. Developers may have specified a trackBy function.\n        return !self.options[self.hashGetter($viewValue)];\n      };\n\n      // Allow users to provide `ng-model=\"foo\" ng-model-options=\"{trackBy: 'foo.id'}\"` so\n      // that we can properly compare objects set on the model to the available options\n      var trackByOption = $mdUtil.getModelOption(ngModel, 'trackBy');\n\n      if (trackByOption) {\n        var trackByLocals = {};\n        var trackByParsed = $parse(trackByOption);\n        self.hashGetter = function(value, valueScope) {\n          trackByLocals.$value = value;\n          return trackByParsed(valueScope || $scope, trackByLocals);\n        };\n        // If the user doesn't provide a trackBy, we automatically generate an id for every\n        // value passed in\n      } else {\n        self.hashGetter = function getHashValue(value) {\n          if (angular.isObject(value)) {\n            return 'object_' + (value.$$mdSelectId || (value.$$mdSelectId = ++selectNextId));\n          }\n          return value;\n        };\n      }\n      self.setMultiple(self.isMultiple);\n    };\n\n    self.selectedLabels = function(opts) {\n      opts = opts || {};\n      var mode = opts.mode || 'html';\n      var selectedOptionEls = $mdUtil.nodesToArray($element[0].querySelectorAll('md-option[selected]'));\n      if (selectedOptionEls.length) {\n        var mapFn;\n\n        if (mode == 'html') {\n          // Map the given element to its innerHTML string. If the element has a child ripple\n          // container remove it from the HTML string, before returning the string.\n          mapFn = function(el) {\n            // If we do not have a `value` or `ng-value`, assume it is an empty option which clears the select\n            if (el.hasAttribute('md-option-empty')) {\n              return '';\n            }\n\n            var html = el.innerHTML;\n\n            // Remove the ripple container from the selected option, copying it would cause a CSP violation.\n            var rippleContainer = el.querySelector('.md-ripple-container');\n            if (rippleContainer) {\n              html = html.replace(rippleContainer.outerHTML, '');\n            }\n\n            // Remove the checkbox container, because it will cause the label to wrap inside of the placeholder.\n            // It should be not displayed inside of the label element.\n            var checkboxContainer = el.querySelector('.md-container');\n            if (checkboxContainer) {\n              html = html.replace(checkboxContainer.outerHTML, '');\n            }\n\n            return html;\n          };\n        } else if (mode == 'aria') {\n          mapFn = function(el) { return el.hasAttribute('aria-label') ? el.getAttribute('aria-label') : el.textContent; };\n        }\n\n        // Ensure there are no duplicates; see https://github.com/angular/material/issues/9442\n        return $mdUtil.uniq(selectedOptionEls.map(mapFn)).join(', ');\n      } else {\n        return '';\n      }\n    };\n\n    self.select = function(hashKey, hashedValue) {\n      var option = self.options[hashKey];\n      option && option.setSelected(true);\n      self.selected[hashKey] = hashedValue;\n    };\n    self.deselect = function(hashKey) {\n      var option = self.options[hashKey];\n      option && option.setSelected(false);\n      delete self.selected[hashKey];\n    };\n\n    self.addOption = function(hashKey, optionCtrl) {\n      if (angular.isDefined(self.options[hashKey])) {\n        throw new Error('Duplicate md-option values are not allowed in a select. ' +\n          'Duplicate value \"' + optionCtrl.value + '\" found.');\n      }\n\n      self.options[hashKey] = optionCtrl;\n\n      // If this option's value was already in our ngModel, go ahead and select it.\n      if (angular.isDefined(self.selected[hashKey])) {\n        self.select(hashKey, optionCtrl.value);\n\n        // When the current $modelValue of the ngModel Controller is using the same hash as\n        // the current option, which will be added, then we can be sure, that the validation\n        // of the option has occurred before the option was added properly.\n        // This means, that we have to manually trigger a new validation of the current option.\n        if (angular.isDefined(self.ngModel.$modelValue) && self.hashGetter(self.ngModel.$modelValue) === hashKey) {\n          self.ngModel.$validate();\n        }\n\n        self.refreshViewValue();\n      }\n    };\n    self.removeOption = function(hashKey) {\n      delete self.options[hashKey];\n      // Don't deselect an option when it's removed - the user's ngModel should be allowed\n      // to have values that do not match a currently available option.\n    };\n\n    self.refreshViewValue = function() {\n      var values = [];\n      var option;\n      for (var hashKey in self.selected) {\n        // If this hashKey has an associated option, push that option's value to the model.\n        if ((option = self.options[hashKey])) {\n          values.push(option.value);\n        } else {\n          // Otherwise, the given hashKey has no associated option, and we got it\n          // from an ngModel value at an earlier time. Push the unhashed value of\n          // this hashKey to the model.\n          // This allows the developer to put a value in the model that doesn't yet have\n          // an associated option.\n          values.push(self.selected[hashKey]);\n        }\n      }\n      var usingTrackBy = $mdUtil.getModelOption(self.ngModel, 'trackBy');\n\n      var newVal = self.isMultiple ? values : values[0];\n      var prevVal = self.ngModel.$modelValue;\n\n      if (usingTrackBy ? !angular.equals(prevVal, newVal) : prevVal != newVal) {\n        self.ngModel.$setViewValue(newVal);\n        self.ngModel.$render();\n      }\n    };\n\n    function renderMultiple() {\n      var newSelectedValues = self.ngModel.$modelValue || self.ngModel.$viewValue || [];\n      if (!angular.isArray(newSelectedValues)) return;\n\n      var oldSelected = Object.keys(self.selected);\n\n      var newSelectedHashes = newSelectedValues.map(self.hashGetter);\n      var deselected = oldSelected.filter(function(hash) {\n        return newSelectedHashes.indexOf(hash) === -1;\n      });\n\n      deselected.forEach(self.deselect);\n      newSelectedHashes.forEach(function(hashKey, i) {\n        self.select(hashKey, newSelectedValues[i]);\n      });\n    }\n\n    function renderSingular() {\n      var value = self.ngModel.$viewValue || self.ngModel.$modelValue;\n      Object.keys(self.selected).forEach(self.deselect);\n      self.select(self.hashGetter(value), value);\n    }\n  }\n\n}\n\nfunction OptionDirective($mdButtonInkRipple, $mdUtil) {\n\n  OptionController['$inject'] = [\"$element\"];\n  return {\n    restrict: 'E',\n    require: ['mdOption', '^^mdSelectMenu'],\n    controller: OptionController,\n    compile: compile\n  };\n\n  function compile(element, attr) {\n    // Manual transclusion to avoid the extra inner <span> that ng-transclude generates\n    element.append(angular.element('<div class=\"md-text\">').append(element.contents()));\n\n    element.attr('tabindex', attr.tabindex || '0');\n\n    if (!hasDefinedValue(attr)) {\n      element.attr('md-option-empty', '');\n    }\n\n    return postLink;\n  }\n\n  function hasDefinedValue(attr) {\n    var value = attr.value;\n    var ngValue = attr.ngValue;\n\n    return value || ngValue;\n  }\n\n  function postLink(scope, element, attr, ctrls) {\n    var optionCtrl = ctrls[0];\n    var selectCtrl = ctrls[1];\n\n    if (selectCtrl.isMultiple) {\n      element.addClass('md-checkbox-enabled');\n      element.prepend(CHECKBOX_SELECTION_INDICATOR.clone());\n    }\n\n    if (angular.isDefined(attr.ngValue)) {\n      scope.$watch(attr.ngValue, setOptionValue);\n    } else if (angular.isDefined(attr.value)) {\n      setOptionValue(attr.value);\n    } else {\n      scope.$watch(function() {\n        return element.text().trim();\n      }, setOptionValue);\n    }\n\n    attr.$observe('disabled', function(disabled) {\n      if (disabled) {\n        element.attr('tabindex', '-1');\n      } else {\n        element.attr('tabindex', '0');\n      }\n    });\n\n    scope.$$postDigest(function() {\n      attr.$observe('selected', function(selected) {\n        if (!angular.isDefined(selected)) return;\n        if (typeof selected == 'string') selected = true;\n        if (selected) {\n          if (!selectCtrl.isMultiple) {\n            selectCtrl.deselect(Object.keys(selectCtrl.selected)[0]);\n          }\n          selectCtrl.select(optionCtrl.hashKey, optionCtrl.value);\n        } else {\n          selectCtrl.deselect(optionCtrl.hashKey);\n        }\n        selectCtrl.refreshViewValue();\n      });\n    });\n\n    $mdButtonInkRipple.attach(scope, element);\n    configureAria();\n\n    function setOptionValue(newValue, oldValue, prevAttempt) {\n      if (!selectCtrl.hashGetter) {\n        if (!prevAttempt) {\n          scope.$$postDigest(function() {\n            setOptionValue(newValue, oldValue, true);\n          });\n        }\n        return;\n      }\n      var oldHashKey = selectCtrl.hashGetter(oldValue, scope);\n      var newHashKey = selectCtrl.hashGetter(newValue, scope);\n\n      optionCtrl.hashKey = newHashKey;\n      optionCtrl.value = newValue;\n\n      selectCtrl.removeOption(oldHashKey, optionCtrl);\n      selectCtrl.addOption(newHashKey, optionCtrl);\n    }\n\n    scope.$on('$destroy', function() {\n      selectCtrl.removeOption(optionCtrl.hashKey, optionCtrl);\n    });\n\n    function configureAria() {\n      var ariaAttrs = {\n        'role': 'option',\n        'aria-selected': 'false'\n      };\n\n      if (!element[0].hasAttribute('id')) {\n        ariaAttrs.id = 'select_option_' + $mdUtil.nextUid();\n      }\n      element.attr(ariaAttrs);\n    }\n  }\n\n  function OptionController($element) {\n    this.selected = false;\n    this.setSelected = function(isSelected) {\n      if (isSelected && !this.selected) {\n        $element.attr({\n          'selected': 'selected',\n          'aria-selected': 'true'\n        });\n      } else if (!isSelected && this.selected) {\n        $element.removeAttr('selected');\n        $element.attr('aria-selected', 'false');\n      }\n      this.selected = isSelected;\n    };\n  }\n\n}\n\nfunction OptgroupDirective() {\n  return {\n    restrict: 'E',\n    compile: compile\n  };\n  function compile(el, attrs) {\n    // If we have a select header element, we don't want to add the normal label\n    // header.\n    if (!hasSelectHeader()) {\n      setupLabelElement();\n    }\n\n    function hasSelectHeader() {\n      return el.parent().find('md-select-header').length;\n    }\n\n    function setupLabelElement() {\n      var labelElement = el.find('label');\n      if (!labelElement.length) {\n        labelElement = angular.element('<label>');\n        el.prepend(labelElement);\n      }\n      labelElement.addClass('md-container-ignore');\n      if (attrs.label) labelElement.text(attrs.label);\n    }\n  }\n}\n\nfunction SelectHeaderDirective() {\n  return {\n    restrict: 'E',\n  };\n}\n\nfunction SelectProvider($$interimElementProvider) {\n  selectDefaultOptions['$inject'] = [\"$mdSelect\", \"$mdConstant\", \"$mdUtil\", \"$window\", \"$q\", \"$$rAF\", \"$animateCss\", \"$animate\", \"$document\"];\n  return $$interimElementProvider('$mdSelect')\n    .setDefaults({\n      methods: ['target'],\n      options: selectDefaultOptions\n    });\n\n  /* ngInject */\n  function selectDefaultOptions($mdSelect, $mdConstant, $mdUtil, $window, $q, $$rAF, $animateCss, $animate, $document) {\n    var ERROR_TARGET_EXPECTED = \"$mdSelect.show() expected a target element in options.target but got '{0}'!\";\n    var animator = $mdUtil.dom.animator;\n    var keyCodes = $mdConstant.KEY_CODE;\n\n    return {\n      parent: 'body',\n      themable: true,\n      onShow: onShow,\n      onRemove: onRemove,\n      hasBackdrop: true,\n      disableParentScroll: true\n    };\n\n    /**\n     * Interim-element onRemove logic....\n     */\n    function onRemove(scope, element, opts) {\n      opts = opts || { };\n      opts.cleanupInteraction();\n      opts.cleanupResizing();\n      opts.hideBackdrop();\n\n      // For navigation $destroy events, do a quick, non-animated removal,\n      // but for normal closes (from clicks, etc) animate the removal\n\n      return  (opts.$destroy === true) ? cleanElement() : animateRemoval().then( cleanElement );\n\n      /**\n       * For normal closes (eg clicks), animate the removal.\n       * For forced closes (like $destroy events from navigation),\n       * skip the animations\n       */\n      function animateRemoval() {\n        return $animateCss(element, {addClass: 'md-leave'}).start();\n      }\n\n      /**\n       * Restore the element to a closed state\n       */\n      function cleanElement() {\n\n        element.removeClass('md-active');\n        element.attr('aria-hidden', 'true');\n        element[0].style.display = 'none';\n\n        announceClosed(opts);\n\n        if (!opts.$destroy && opts.restoreFocus) {\n          opts.target.focus();\n        }\n      }\n\n    }\n\n    /**\n     * Interim-element onShow logic....\n     */\n    function onShow(scope, element, opts) {\n\n      watchAsyncLoad();\n      sanitizeAndConfigure(scope, opts);\n\n      opts.hideBackdrop = showBackdrop(scope, element, opts);\n\n      return showDropDown(scope, element, opts)\n        .then(function(response) {\n          element.attr('aria-hidden', 'false');\n          opts.alreadyOpen = true;\n          opts.cleanupInteraction = activateInteraction();\n          opts.cleanupResizing = activateResizing();\n\n          return response;\n        }, opts.hideBackdrop);\n\n      // ************************************\n      // Closure Functions\n      // ************************************\n\n      /**\n       *  Attach the select DOM element(s) and animate to the correct positions\n       *  and scalings...\n       */\n      function showDropDown(scope, element, opts) {\n        opts.parent.append(element);\n\n        return $q(function(resolve, reject) {\n\n          try {\n\n            $animateCss(element, {removeClass: 'md-leave', duration: 0})\n              .start()\n              .then(positionAndFocusMenu)\n              .then(resolve);\n\n          } catch (e) {\n            reject(e);\n          }\n\n        });\n      }\n\n      /**\n       * Initialize container and dropDown menu positions/scale, then animate\n       * to show... and autoFocus.\n       */\n      function positionAndFocusMenu() {\n        return $q(function(resolve) {\n          if (opts.isRemoved) return $q.reject(false);\n\n          var info = calculateMenuPositions(scope, element, opts);\n\n          info.container.element.css(animator.toCss(info.container.styles));\n          info.dropDown.element.css(animator.toCss(info.dropDown.styles));\n\n          $$rAF(function() {\n            element.addClass('md-active');\n            info.dropDown.element.css(animator.toCss({transform: ''}));\n\n            autoFocus(opts.focusedNode);\n            resolve();\n          });\n\n        });\n      }\n\n      /**\n       * Show modal backdrop element...\n       */\n      function showBackdrop(scope, element, options) {\n\n        // If we are not within a dialog...\n        if (options.disableParentScroll && !$mdUtil.getClosest(options.target, 'MD-DIALOG')) {\n          // !! DO this before creating the backdrop; since disableScrollAround()\n          //    configures the scroll offset; which is used by mdBackDrop postLink()\n          options.restoreScroll = $mdUtil.disableScrollAround(options.element, options.parent);\n        } else {\n          options.disableParentScroll = false;\n        }\n\n        if (options.hasBackdrop) {\n          // Override duration to immediately show invisible backdrop\n          options.backdrop = $mdUtil.createBackdrop(scope, \"md-select-backdrop md-click-catcher\");\n          $animate.enter(options.backdrop, $document[0].body, null, {duration: 0});\n        }\n\n        /**\n         * Hide modal backdrop element...\n         */\n        return function hideBackdrop() {\n          if (options.backdrop) options.backdrop.remove();\n          if (options.disableParentScroll) options.restoreScroll();\n\n          delete options.restoreScroll;\n        };\n      }\n\n      /**\n       *\n       */\n      function autoFocus(focusedNode) {\n        if (focusedNode && !focusedNode.hasAttribute('disabled')) {\n          focusedNode.focus();\n        }\n      }\n\n      /**\n       * Check for valid opts and set some sane defaults\n       */\n      function sanitizeAndConfigure(scope, options) {\n        var selectEl = element.find('md-select-menu');\n\n        if (!options.target) {\n          throw new Error($mdUtil.supplant(ERROR_TARGET_EXPECTED, [options.target]));\n        }\n\n        angular.extend(options, {\n          isRemoved: false,\n          target: angular.element(options.target), //make sure it's not a naked dom node\n          parent: angular.element(options.parent),\n          selectEl: selectEl,\n          contentEl: element.find('md-content'),\n          optionNodes: selectEl[0].getElementsByTagName('md-option')\n        });\n      }\n\n      /**\n       * Configure various resize listeners for screen changes\n       */\n      function activateResizing() {\n        var debouncedOnResize = (function(scope, target, options) {\n\n          return function() {\n            if (options.isRemoved) return;\n\n            var updates = calculateMenuPositions(scope, target, options);\n            var container = updates.container;\n            var dropDown = updates.dropDown;\n\n            container.element.css(animator.toCss(container.styles));\n            dropDown.element.css(animator.toCss(dropDown.styles));\n          };\n\n        })(scope, element, opts);\n\n        var window = angular.element($window);\n        window.on('resize', debouncedOnResize);\n        window.on('orientationchange', debouncedOnResize);\n\n        // Publish deactivation closure...\n        return function deactivateResizing() {\n\n          // Disable resizing handlers\n          window.off('resize', debouncedOnResize);\n          window.off('orientationchange', debouncedOnResize);\n        };\n      }\n\n      /**\n       *  If asynchronously loading, watch and update internal\n       *  '$$loadingAsyncDone' flag\n       */\n      function watchAsyncLoad() {\n        if (opts.loadingAsync && !opts.isRemoved) {\n          scope.$$loadingAsyncDone = false;\n\n          $q.when(opts.loadingAsync)\n            .then(function() {\n              scope.$$loadingAsyncDone = true;\n              delete opts.loadingAsync;\n            }).then(function() {\n              $$rAF(positionAndFocusMenu);\n            });\n        }\n      }\n\n      /**\n       *\n       */\n      function activateInteraction() {\n        if (opts.isRemoved) return;\n\n        var dropDown = opts.selectEl;\n        var selectCtrl = dropDown.controller('mdSelectMenu') || {};\n\n        element.addClass('md-clickable');\n\n        // Close on backdrop click\n        opts.backdrop && opts.backdrop.on('click', onBackdropClick);\n\n        // Escape to close\n        // Cycling of options, and closing on enter\n        dropDown.on('keydown', onMenuKeyDown);\n        dropDown.on('click', checkCloseMenu);\n\n        return function cleanupInteraction() {\n          opts.backdrop && opts.backdrop.off('click', onBackdropClick);\n          dropDown.off('keydown', onMenuKeyDown);\n          dropDown.off('click', checkCloseMenu);\n\n          element.removeClass('md-clickable');\n          opts.isRemoved = true;\n        };\n\n        // ************************************\n        // Closure Functions\n        // ************************************\n\n        function onBackdropClick(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          opts.restoreFocus = false;\n          $mdUtil.nextTick($mdSelect.hide, true);\n        }\n\n        function onMenuKeyDown(ev) {\n          ev.preventDefault();\n          ev.stopPropagation();\n\n          switch (ev.keyCode) {\n            case keyCodes.UP_ARROW:\n              return focusPrevOption();\n            case keyCodes.DOWN_ARROW:\n              return focusNextOption();\n            case keyCodes.SPACE:\n            case keyCodes.ENTER:\n              var option = $mdUtil.getClosest(ev.target, 'md-option');\n              if (option) {\n                dropDown.triggerHandler({\n                  type: 'click',\n                  target: option\n                });\n                ev.preventDefault();\n              }\n              checkCloseMenu(ev);\n              break;\n            case keyCodes.TAB:\n            case keyCodes.ESCAPE:\n              ev.stopPropagation();\n              ev.preventDefault();\n              opts.restoreFocus = true;\n              $mdUtil.nextTick($mdSelect.hide, true);\n              break;\n            default:\n              if ($mdConstant.isInputKey(ev) || $mdConstant.isNumPadKey(ev)) {\n                var optNode = dropDown.controller('mdSelectMenu').optNodeForKeyboardSearch(ev);\n                opts.focusedNode = optNode || opts.focusedNode;\n                optNode && optNode.focus();\n              }\n          }\n        }\n\n        function focusOption(direction) {\n          var optionsArray = $mdUtil.nodesToArray(opts.optionNodes);\n          var index = optionsArray.indexOf(opts.focusedNode);\n\n          var newOption;\n\n          do {\n            if (index === -1) {\n              // We lost the previously focused element, reset to first option\n              index = 0;\n            } else if (direction === 'next' && index < optionsArray.length - 1) {\n              index++;\n            } else if (direction === 'prev' && index > 0) {\n              index--;\n            }\n            newOption = optionsArray[index];\n            if (newOption.hasAttribute('disabled')) newOption = undefined;\n          } while (!newOption && index < optionsArray.length - 1 && index > 0);\n\n          newOption && newOption.focus();\n          opts.focusedNode = newOption;\n        }\n\n        function focusNextOption() {\n          focusOption('next');\n        }\n\n        function focusPrevOption() {\n          focusOption('prev');\n        }\n\n        function checkCloseMenu(ev) {\n          if (ev && ( ev.type == 'click') && (ev.currentTarget != dropDown[0])) return;\n          if ( mouseOnScrollbar() ) return;\n\n          var option = $mdUtil.getClosest(ev.target, 'md-option');\n          if (option && option.hasAttribute && !option.hasAttribute('disabled')) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            if (!selectCtrl.isMultiple) {\n              opts.restoreFocus = true;\n\n              $mdUtil.nextTick(function () {\n                $mdSelect.hide(selectCtrl.ngModel.$viewValue);\n              }, true);\n            }\n          }\n          /**\n           * check if the mouseup event was on a scrollbar\n           */\n          function mouseOnScrollbar() {\n            var clickOnScrollbar = false;\n            if (ev && (ev.currentTarget.children.length > 0)) {\n              var child = ev.currentTarget.children[0];\n              var hasScrollbar = child.scrollHeight > child.clientHeight;\n              if (hasScrollbar && child.children.length > 0) {\n                var relPosX = ev.pageX - ev.currentTarget.getBoundingClientRect().left;\n                if (relPosX > child.querySelector('md-option').offsetWidth)\n                  clickOnScrollbar = true;\n              }\n            }\n            return clickOnScrollbar;\n          }\n        }\n      }\n\n    }\n\n    /**\n     * To notify listeners that the Select menu has closed,\n     * trigger the [optional] user-defined expression\n     */\n    function announceClosed(opts) {\n      var mdSelect = opts.selectCtrl;\n      if (mdSelect) {\n        var menuController = opts.selectEl.controller('mdSelectMenu');\n        mdSelect.setLabelText(menuController ? menuController.selectedLabels() : '');\n        mdSelect.triggerClose();\n      }\n    }\n\n\n    /**\n     * Calculate the\n     */\n    function calculateMenuPositions(scope, element, opts) {\n      var\n        containerNode = element[0],\n        targetNode = opts.target[0].children[0], // target the label\n        parentNode = $document[0].body,\n        selectNode = opts.selectEl[0],\n        contentNode = opts.contentEl[0],\n        parentRect = parentNode.getBoundingClientRect(),\n        targetRect = targetNode.getBoundingClientRect(),\n        shouldOpenAroundTarget = false,\n        bounds = {\n          left: parentRect.left + SELECT_EDGE_MARGIN,\n          top: SELECT_EDGE_MARGIN,\n          bottom: parentRect.height - SELECT_EDGE_MARGIN,\n          right: parentRect.width - SELECT_EDGE_MARGIN - ($mdUtil.floatingScrollbars() ? 16 : 0)\n        },\n        spaceAvailable = {\n          top: targetRect.top - bounds.top,\n          left: targetRect.left - bounds.left,\n          right: bounds.right - (targetRect.left + targetRect.width),\n          bottom: bounds.bottom - (targetRect.top + targetRect.height)\n        },\n        maxWidth = parentRect.width - SELECT_EDGE_MARGIN * 2,\n        selectedNode = selectNode.querySelector('md-option[selected]'),\n        optionNodes = selectNode.getElementsByTagName('md-option'),\n        optgroupNodes = selectNode.getElementsByTagName('md-optgroup'),\n        isScrollable = calculateScrollable(element, contentNode),\n        centeredNode;\n\n      var loading = isPromiseLike(opts.loadingAsync);\n      if (!loading) {\n        // If a selected node, center around that\n        if (selectedNode) {\n          centeredNode = selectedNode;\n          // If there are option groups, center around the first option group\n        } else if (optgroupNodes.length) {\n          centeredNode = optgroupNodes[0];\n          // Otherwise - if we are not loading async - center around the first optionNode\n        } else if (optionNodes.length) {\n          centeredNode = optionNodes[0];\n          // In case there are no options, center on whatever's in there... (eg progress indicator)\n        } else {\n          centeredNode = contentNode.firstElementChild || contentNode;\n        }\n      } else {\n        // If loading, center on progress indicator\n        centeredNode = contentNode.firstElementChild || contentNode;\n      }\n\n      if (contentNode.offsetWidth > maxWidth) {\n        contentNode.style['max-width'] = maxWidth + 'px';\n      } else {\n        contentNode.style.maxWidth = null;\n      }\n      if (shouldOpenAroundTarget) {\n        contentNode.style['min-width'] = targetRect.width + 'px';\n      }\n\n      // Remove padding before we compute the position of the menu\n      if (isScrollable) {\n        selectNode.classList.add('md-overflow');\n      }\n\n      var focusedNode = centeredNode;\n      if ((focusedNode.tagName || '').toUpperCase() === 'MD-OPTGROUP') {\n        focusedNode = optionNodes[0] || contentNode.firstElementChild || contentNode;\n        centeredNode = focusedNode;\n      }\n      // Cache for autoFocus()\n      opts.focusedNode = focusedNode;\n\n      // Get the selectMenuRect *after* max-width is possibly set above\n      containerNode.style.display = 'block';\n      var selectMenuRect = selectNode.getBoundingClientRect();\n      var centeredRect = getOffsetRect(centeredNode);\n\n      if (centeredNode) {\n        var centeredStyle = $window.getComputedStyle(centeredNode);\n        centeredRect.paddingLeft = parseInt(centeredStyle.paddingLeft, 10) || 0;\n        centeredRect.paddingRight = parseInt(centeredStyle.paddingRight, 10) || 0;\n      }\n\n      if (isScrollable) {\n        var scrollBuffer = contentNode.offsetHeight / 2;\n        contentNode.scrollTop = centeredRect.top + centeredRect.height / 2 - scrollBuffer;\n\n        if (spaceAvailable.top < scrollBuffer) {\n          contentNode.scrollTop = Math.min(\n            centeredRect.top,\n            contentNode.scrollTop + scrollBuffer - spaceAvailable.top\n          );\n        } else if (spaceAvailable.bottom < scrollBuffer) {\n          contentNode.scrollTop = Math.max(\n            centeredRect.top + centeredRect.height - selectMenuRect.height,\n            contentNode.scrollTop - scrollBuffer + spaceAvailable.bottom\n          );\n        }\n      }\n\n      var left, top, transformOrigin, minWidth, fontSize;\n      if (shouldOpenAroundTarget) {\n        left = targetRect.left;\n        top = targetRect.top + targetRect.height;\n        transformOrigin = '50% 0';\n        if (top + selectMenuRect.height > bounds.bottom) {\n          top = targetRect.top - selectMenuRect.height;\n          transformOrigin = '50% 100%';\n        }\n      } else {\n        left = (targetRect.left + centeredRect.left - centeredRect.paddingLeft) + 2;\n        top = Math.floor(targetRect.top + targetRect.height / 2 - centeredRect.height / 2 -\n            centeredRect.top + contentNode.scrollTop) + 2;\n\n        transformOrigin = (centeredRect.left + targetRect.width / 2) + 'px ' +\n          (centeredRect.top + centeredRect.height / 2 - contentNode.scrollTop) + 'px 0px';\n\n        minWidth = Math.min(targetRect.width + centeredRect.paddingLeft + centeredRect.paddingRight, maxWidth);\n\n        fontSize = window.getComputedStyle(targetNode)['font-size'];\n      }\n\n      // Keep left and top within the window\n      var containerRect = containerNode.getBoundingClientRect();\n      var scaleX = Math.round(100 * Math.min(targetRect.width / selectMenuRect.width, 1.0)) / 100;\n      var scaleY = Math.round(100 * Math.min(targetRect.height / selectMenuRect.height, 1.0)) / 100;\n\n      return {\n        container: {\n          element: angular.element(containerNode),\n          styles: {\n            left: Math.floor(clamp(bounds.left, left, bounds.right - containerRect.width)),\n            top: Math.floor(clamp(bounds.top, top, bounds.bottom - containerRect.height)),\n            'min-width': minWidth,\n            'font-size': fontSize\n          }\n        },\n        dropDown: {\n          element: angular.element(selectNode),\n          styles: {\n            transformOrigin: transformOrigin,\n            transform: !opts.alreadyOpen ? $mdUtil.supplant('scale({0},{1})', [scaleX, scaleY]) : \"\"\n          }\n        }\n      };\n\n    }\n\n  }\n\n  function isPromiseLike(obj) {\n    return obj && angular.isFunction(obj.then);\n  }\n\n  function clamp(min, n, max) {\n    return Math.max(min, Math.min(n, max));\n  }\n\n  function getOffsetRect(node) {\n    return node ? {\n      left: node.offsetLeft,\n      top: node.offsetTop,\n      width: node.offsetWidth,\n      height: node.offsetHeight\n    } : {left: 0, top: 0, width: 0, height: 0};\n  }\n\n  function calculateScrollable(element, contentNode) {\n    var isScrollable = false;\n\n    try {\n      var oldDisplay = element[0].style.display;\n\n      // Set the element's display to block so that this calculation is correct\n      element[0].style.display = 'block';\n\n      isScrollable = contentNode.scrollHeight > contentNode.offsetHeight;\n\n      // Reset it back afterwards\n      element[0].style.display = oldDisplay;\n    } finally {\n      // Nothing to do\n    }\n    return isScrollable;\n  }\n}\n\nngmaterial.components.select = angular.module(\"material.components.select\");"]}