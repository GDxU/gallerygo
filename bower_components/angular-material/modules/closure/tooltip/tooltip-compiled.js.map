{"version":3,"sources":["tooltip.js"],"names":[],"mappings":"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","file":"tooltip-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.tooltip');\ngoog.require('ngmaterial.components.panel');\ngoog.require('ngmaterial.core');\n/**\n * @ngdoc module\n * @name material.components.tooltip\n */\nMdTooltipDirective['$inject'] = [\"$timeout\", \"$window\", \"$$rAF\", \"$document\", \"$interpolate\", \"$mdUtil\", \"$mdPanel\", \"$$mdTooltipRegistry\"];\nangular\n    .module('material.components.tooltip', [\n      'material.core',\n      'material.components.panel'\n    ])\n    .directive('mdTooltip', MdTooltipDirective)\n    .service('$$mdTooltipRegistry', MdTooltipRegistry);\n\n\n/**\n * @ngdoc directive\n * @name mdTooltip\n * @module material.components.tooltip\n * @description\n * Tooltips are used to describe elements that are interactive and primarily\n * graphical (not textual).\n *\n * Place a `<md-tooltip>` as a child of the element it describes.\n *\n * A tooltip will activate when the user hovers over, focuses, or touches the\n * parent element.\n *\n * @usage\n * <hljs lang=\"html\">\n *   <md-button class=\"md-fab md-accent\" aria-label=\"Play\">\n *     <md-tooltip>Play Music</md-tooltip>\n *     <md-icon md-svg-src=\"img/icons/ic_play_arrow_24px.svg\"></md-icon>\n *   </md-button>\n * </hljs>\n *\n * @param {number=} md-z-index The visual level that the tooltip will appear\n *     in comparison with the rest of the elements of the application.\n * @param {expression=} md-visible Boolean bound to whether the tooltip is\n *     currently visible.\n * @param {number=} md-delay How many milliseconds to wait to show the tooltip\n *     after the user hovers over, focuses, or touches the parent element.\n *     Defaults to 0ms on non-touch devices and 75ms on touch.\n * @param {boolean=} md-autohide If present or provided with a boolean value,\n *     the tooltip will hide on mouse leave, regardless of focus.\n * @param {string=} md-direction The direction that the tooltip is shown,\n *     relative to the parent element. Supports top, right, bottom, and left.\n *     Defaults to bottom.\n */\nfunction MdTooltipDirective($timeout, $window, $$rAF, $document, $interpolate,\n    $mdUtil, $mdPanel, $$mdTooltipRegistry) {\n\n  var ENTER_EVENTS = 'focus touchstart mouseenter';\n  var LEAVE_EVENTS = 'blur touchcancel mouseleave';\n  var TOOLTIP_DEFAULT_Z_INDEX = 100;\n  var TOOLTIP_DEFAULT_SHOW_DELAY = 0;\n  var TOOLTIP_DEFAULT_DIRECTION = 'bottom';\n  var TOOLTIP_DIRECTIONS = {\n    top: { x: $mdPanel.xPosition.CENTER, y: $mdPanel.yPosition.ABOVE },\n    right: { x: $mdPanel.xPosition.OFFSET_END, y: $mdPanel.yPosition.CENTER },\n    bottom: { x: $mdPanel.xPosition.CENTER, y: $mdPanel.yPosition.BELOW },\n    left: { x: $mdPanel.xPosition.OFFSET_START, y: $mdPanel.yPosition.CENTER }\n  };\n\n  return {\n    restrict: 'E',\n    priority: 210, // Before ngAria\n    scope: {\n      mdZIndex: '=?mdZIndex',\n      mdDelay: '=?mdDelay',\n      mdVisible: '=?mdVisible',\n      mdAutohide: '=?mdAutohide',\n      mdDirection: '@?mdDirection' // Do not expect expressions.\n    },\n    link: linkFunc\n  };\n\n  function linkFunc(scope, element, attr) {\n    // Set constants.\n    var parent = $mdUtil.getParentWithPointerEvents(element);\n    var debouncedOnResize = $$rAF.throttle(updatePosition);\n    var mouseActive = false;\n    var origin, position, panelPosition, panelRef, autohide, showTimeout,\n        elementFocusedOnWindowBlur = null;\n\n    // Set defaults\n    setDefaults();\n\n    // Set parent aria-label.\n    addAriaLabel();\n\n    // Remove the element from its current DOM position.\n    element.detach();\n    element.attr('role', 'tooltip');\n\n    updatePosition();\n    bindEvents();\n    configureWatchers();\n\n    function setDefaults() {\n      scope.mdZIndex = scope.mdZIndex || TOOLTIP_DEFAULT_Z_INDEX;\n      scope.mdDelay = scope.mdDelay || TOOLTIP_DEFAULT_SHOW_DELAY;\n      if (!TOOLTIP_DIRECTIONS[scope.mdDirection]) {\n        scope.mdDirection = TOOLTIP_DEFAULT_DIRECTION;\n      }\n    }\n\n    function addAriaLabel(override) {\n      if (override || !parent.attr('aria-label')) {\n        var rawText = override || element.text().trim();\n        var interpolatedText = $interpolate(rawText)(parent.scope());\n        parent.attr('aria-label', interpolatedText);\n      }\n    }\n\n    function updatePosition() {\n      setDefaults();\n\n      // If the panel has already been created, remove the current origin\n      // class from the panel element.\n      if (panelRef && panelRef.panelEl) {\n        panelRef.panelEl.removeClass(origin);\n      }\n\n      // Set the panel element origin class based off of the current\n      // mdDirection.\n      origin = 'md-origin-' + scope.mdDirection;\n\n      // Create the position of the panel based off of the mdDirection.\n      position = TOOLTIP_DIRECTIONS[scope.mdDirection];\n\n      // Using the newly created position object, use the MdPanel\n      // panelPosition API to build the panel's position.\n      panelPosition = $mdPanel.newPanelPosition()\n          .relativeTo(parent)\n          .addPanelPosition(position.x, position.y);\n\n      // If the panel has already been created, add the new origin class to\n      // the panel element and update it's position with the panelPosition.\n      if (panelRef && panelRef.panelEl) {\n        panelRef.panelEl.addClass(origin);\n        panelRef.updatePosition(panelPosition);\n      }\n    }\n\n    function bindEvents() {\n      // Add a mutationObserver where there is support for it and the need\n      // for it in the form of viable host(parent[0]).\n      if (parent[0] && 'MutationObserver' in $window) {\n        // Use a mutationObserver to tackle #2602.\n        var attributeObserver = new MutationObserver(function(mutations) {\n          if (isDisabledMutation(mutations)) {\n            $mdUtil.nextTick(function() {\n              setVisible(false);\n            });\n          }\n        });\n\n        attributeObserver.observe(parent[0], {\n          attributes: true\n        });\n      }\n\n      elementFocusedOnWindowBlur = false;\n\n      $$mdTooltipRegistry.register('scroll', windowScrollEventHandler, true);\n      $$mdTooltipRegistry.register('blur', windowBlurEventHandler);\n      $$mdTooltipRegistry.register('resize', debouncedOnResize);\n\n      scope.$on('$destroy', onDestroy);\n\n      // To avoid 'synthetic clicks', we listen to mousedown instead of\n      // 'click'.\n      parent.on('mousedown', mousedownEventHandler);\n      parent.on(ENTER_EVENTS, enterEventHandler);\n\n      function isDisabledMutation(mutations) {\n        mutations.some(function(mutation) {\n          return mutation.attributeName === 'disabled' && parent[0].disabled;\n        });\n        return false;\n      }\n\n      function windowScrollEventHandler() {\n        setVisible(false);\n      }\n\n      function windowBlurEventHandler() {\n        elementFocusedOnWindowBlur = document.activeElement === parent[0];\n      }\n\n      function enterEventHandler($event) {\n        // Prevent the tooltip from showing when the window is receiving\n        // focus.\n        if ($event.type === 'focus' && elementFocusedOnWindowBlur) {\n          elementFocusedOnWindowBlur = false;\n        } else if (!scope.mdVisible) {\n          parent.on(LEAVE_EVENTS, leaveEventHandler);\n          setVisible(true);\n\n          // If the user is on a touch device, we should bind the tap away\n          // after the 'touched' in order to prevent the tooltip being\n          // removed immediately.\n          if ($event.type === 'touchstart') {\n            parent.one('touchend', function() {\n              $mdUtil.nextTick(function() {\n                $document.one('touchend', leaveEventHandler);\n              }, false);\n            });\n          }\n        }\n      }\n\n      function leaveEventHandler() {\n        autohide = scope.hasOwnProperty('mdAutohide') ?\n            scope.mdAutohide :\n            attr.hasOwnProperty('mdAutohide');\n\n        if (autohide || mouseActive ||\n            $document[0].activeElement !== parent[0]) {\n          // When a show timeout is currently in progress, then we have\n          // to cancel it, otherwise the tooltip will remain showing\n          // without focus or hover.\n          if (showTimeout) {\n            $timeout.cancel(showTimeout);\n            setVisible.queued = false;\n            showTimeout = null;\n          }\n\n          parent.off(LEAVE_EVENTS, leaveEventHandler);\n          parent.triggerHandler('blur');\n          setVisible(false);\n        }\n        mouseActive = false;\n      }\n\n      function mousedownEventHandler() {\n        mouseActive = true;\n      }\n\n      function onDestroy() {\n        $$mdTooltipRegistry.deregister('scroll', windowScrollEventHandler, true);\n        $$mdTooltipRegistry.deregister('blur', windowBlurEventHandler);\n        $$mdTooltipRegistry.deregister('resize', debouncedOnResize);\n\n        parent\n            .off(ENTER_EVENTS, enterEventHandler)\n            .off(LEAVE_EVENTS, leaveEventHandler)\n            .off('mousedown', mousedownEventHandler);\n\n        // Trigger the handler in case any of the tooltips are\n        // still visible.\n        leaveEventHandler();\n        attributeObserver && attributeObserver.disconnect();\n      }\n    }\n\n    function configureWatchers() {\n      if (element[0] && 'MutationObserver' in $window) {\n        var attributeObserver = new MutationObserver(function(mutations) {\n          mutations.forEach(function(mutation) {\n            if (mutation.attributeName === 'md-visible' &&\n                !scope.visibleWatcher ) {\n              scope.visibleWatcher = scope.$watch('mdVisible',\n                  onVisibleChanged);\n            }\n          });\n        });\n\n        attributeObserver.observe(element[0], {\n          attributes: true\n        });\n\n        // Build watcher only if mdVisible is being used.\n        if (attr.hasOwnProperty('mdVisible')) {\n          scope.visibleWatcher = scope.$watch('mdVisible',\n              onVisibleChanged);\n        }\n      } else {\n        // MutationObserver not supported\n        scope.visibleWatcher = scope.$watch('mdVisible', onVisibleChanged);\n      }\n\n      // Direction watcher\n      scope.$watch('mdDirection', updatePosition);\n\n      // Clean up if the element or parent was removed via jqLite's .remove.\n      // A couple of notes:\n      //   - In these cases the scope might not have been destroyed, which\n      //     is why we destroy it manually. An example of this can be having\n      //     `md-visible=\"false\"` and adding tooltips while they're\n      //     invisible. If `md-visible` becomes true, at some point, you'd\n      //     usually get a lot of tooltips.\n      //   - We use `.one`, not `.on`, because this only needs to fire once.\n      //     If we were using `.on`, it would get thrown into an infinite\n      //     loop.\n      //   - This kicks off the scope's `$destroy` event which finishes the\n      //     cleanup.\n      element.one('$destroy', onElementDestroy);\n      parent.one('$destroy', onElementDestroy);\n      scope.$on('$destroy', function() {\n        setVisible(false);\n        element.remove();\n        attributeObserver && attributeObserver.disconnect();\n      });\n\n      // Updates the aria-label when the element text changes. This watch\n      // doesn't need to be set up if the element doesn't have any data\n      // bindings.\n      if (element.text().indexOf($interpolate.startSymbol()) > -1) {\n        scope.$watch(function() {\n          return element.text().trim();\n        }, addAriaLabel);\n      }\n\n      function onElementDestroy() {\n        scope.$destroy();\n      }\n    }\n\n    function setVisible(value) {\n      // Break if passed value is already in queue or there is no queue and\n      // passed value is current in the controller.\n      if (setVisible.queued && setVisible.value === !!value ||\n          !setVisible.queued && scope.mdVisible === !!value) {\n        return;\n      }\n      setVisible.value = !!value;\n\n      if (!setVisible.queued) {\n        if (value) {\n          setVisible.queued = true;\n          showTimeout = $timeout(function() {\n            scope.mdVisible = setVisible.value;\n            setVisible.queued = false;\n            showTimeout = null;\n            if (!scope.visibleWatcher) {\n              onVisibleChanged(scope.mdVisible);\n            }\n          }, scope.mdDelay);\n        } else {\n          $mdUtil.nextTick(function() {\n            scope.mdVisible = false;\n            if (!scope.visibleWatcher) {\n              onVisibleChanged(false);\n            }\n          });\n        }\n      }\n    }\n\n    function onVisibleChanged(isVisible) {\n      isVisible ? showTooltip() : hideTooltip();\n    }\n\n    function showTooltip() {\n      // Do not show the tooltip if the text is empty.\n      if (!element[0].textContent.trim()) {\n        throw new Error('Text for the tooltip has not been provided. ' +\n            'Please include text within the mdTooltip element.');\n      }\n\n      if (!panelRef) {\n        var id = 'tooltip-' + $mdUtil.nextUid();\n        var attachTo = angular.element(document.body);\n        var content = element.html().trim();\n        var panelAnimation = $mdPanel.newPanelAnimation()\n            .openFrom(parent)\n            .closeTo(parent)\n            .withAnimation({\n              open: 'md-show',\n              close: 'md-hide'\n            });\n\n        var panelConfig = {\n          id: id,\n          attachTo: attachTo,\n          template: content,\n          propagateContainerEvents: true,\n          panelClass: 'md-tooltip ' + origin,\n          animation: panelAnimation,\n          position: panelPosition,\n          zIndex: scope.mdZIndex,\n          focusOnOpen: false\n        };\n\n        panelRef = $mdPanel.create(panelConfig);\n      }\n\n      panelRef.open();\n    }\n\n    function hideTooltip() {\n      panelRef && panelRef.close();\n    }\n  }\n\n}\n\n\n/**\n * Service that is used to reduce the amount of listeners that are being\n * registered on the `window` by the tooltip component. Works by collecting\n * the individual event handlers and dispatching them from a global handler.\n *\n * ngInject\n */\nfunction MdTooltipRegistry() {\n  var listeners = {};\n  var ngWindow = angular.element(window);\n\n  return {\n    register: register,\n    deregister: deregister\n  };\n\n  /**\n   * Global event handler that dispatches the registered handlers in the\n   * service.\n   * @param {!Event} event Event object passed in by the browser\n   */\n  function globalEventHandler(event) {\n    if (listeners[event.type]) {\n      listeners[event.type].forEach(function(currentHandler) {\n        currentHandler.call(this, event);\n      }, this);\n    }\n  }\n\n  /**\n   * Registers a new handler with the service.\n   * @param {string} type Type of event to be registered.\n   * @param {!Function} handler Event handler.\n   * @param {boolean} useCapture Whether to use event capturing.\n   */\n  function register(type, handler, useCapture) {\n    var handlers = listeners[type] = listeners[type] || [];\n\n    if (!handlers.length) {\n      useCapture ? window.addEventListener(type, globalEventHandler, true) :\n          ngWindow.on(type, globalEventHandler);\n    }\n\n    if (handlers.indexOf(handler) === -1) {\n      handlers.push(handler);\n    }\n  }\n\n  /**\n   * Removes an event handler from the service.\n   * @param {string} type Type of event handler.\n   * @param {!Function} handler The event handler itself.\n   * @param {boolean} useCapture Whether the event handler used event capturing.\n   */\n  function deregister(type, handler, useCapture) {\n    var handlers = listeners[type];\n    var index = handlers ? handlers.indexOf(handler) : -1;\n\n    if (index > -1) {\n      handlers.splice(index, 1);\n\n      if (handlers.length === 0) {\n        useCapture ? window.removeEventListener(type, globalEventHandler, true) :\n            ngWindow.off(type, globalEventHandler);\n      }\n    }\n  }\n}\n\nngmaterial.components.tooltip = angular.module(\"material.components.tooltip\");"]}