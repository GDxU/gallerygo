{"version":3,"sources":["whiteframe.js"],"names":[],"mappings":";;AAAA;;;;;;AAMA,KAAK,OAAL,CAAa,kCAAb;AACA,KAAK,OAAL,CAAa,iBAAb;AACA;;;;AAIA,sBAAsB,SAAtB,IAAmC,CAAC,MAAD,CAAnC;AACA,QACG,MADH,CACU,gCADV,EAC4C,CAAC,eAAD,CAD5C,EAEG,SAFH,CAEa,cAFb,EAE6B,qBAF7B;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAS,qBAAT,CAA+B,IAA/B,EAAqC;AACnC,MAAI,aAAa,CAAC,CAAlB;AACA,MAAI,SAAS,CAAb;AACA,MAAI,SAAS,EAAb;AACA,MAAI,aAAa,CAAjB;;AAEA,SAAO;AACL,UAAM;AADD,GAAP;;AAIA,WAAS,QAAT,CAAkB,KAAlB,EAAyB,OAAzB,EAAkC,IAAlC,EAAwC;AACtC,QAAI,WAAW,EAAf;;AAEA,SAAK,QAAL,CAAc,cAAd,EAA8B,UAAS,SAAT,EAAoB;AAChD,kBAAY,SAAS,SAAT,EAAoB,EAApB,KAA2B,UAAvC;;AAEA,UAAI,aAAa,UAAb,KAA4B,YAAY,MAAZ,IAAsB,YAAY,MAA9D,CAAJ,EAA2E;AACzE,aAAK,IAAL,CAAU,6EAA6E,MAA7E,GAAsF,OAAtF,GAAgG,MAA1G,EAAkH,QAAQ,CAAR,CAAlH;AACA,oBAAY,UAAZ;AACD;;AAED,UAAI,WAAW,aAAa,UAAb,GAA0B,EAA1B,GAA+B,mBAAmB,SAAnB,GAA+B,IAA7E;AACA,WAAK,YAAL,CAAkB,QAAlB,EAA4B,QAA5B;AACA,iBAAW,QAAX;AACD,KAXD;AAYD;AACF;;AAGD,WAAW,UAAX,CAAsB,UAAtB,GAAmC,QAAQ,MAAR,CAAe,gCAAf,CAAnC","file":"whiteframe-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.whiteframe');\ngoog.require('ngmaterial.core');\n/**\n * @ngdoc module\n * @name material.components.whiteframe\n */\nMdWhiteframeDirective['$inject'] = [\"$log\"];\nangular\n  .module('material.components.whiteframe', ['material.core'])\n  .directive('mdWhiteframe', MdWhiteframeDirective);\n\n/**\n * @ngdoc directive\n * @module material.components.whiteframe\n * @name mdWhiteframe\n *\n * @description\n * The md-whiteframe directive allows you to apply an elevation shadow to an element.\n *\n * The attribute values needs to be a number between 1 and 24 or -1.\n * When set to -1 no style is applied.\n *\n * ### Notes\n * - If there is no value specified it defaults to 4dp.\n * - If the value is not valid it defaults to 4dp.\n\n * @usage\n * <hljs lang=\"html\">\n * <div md-whiteframe=\"3\">\n *   <span>Elevation of 3dp</span>\n * </div>\n * </hljs>\n *\n * <hljs lang=\"html\">\n * <div md-whiteframe=\"-1\">\n *   <span>No elevation shadow applied</span>\n * </div>\n * </hljs>\n *\n * <hljs lang=\"html\">\n * <div ng-init=\"elevation = 5\" md-whiteframe=\"{{elevation}}\">\n *   <span>Elevation of 5dp with an interpolated value</span>\n * </div>\n * </hljs>\n */\nfunction MdWhiteframeDirective($log) {\n  var DISABLE_DP = -1;\n  var MIN_DP = 1;\n  var MAX_DP = 24;\n  var DEFAULT_DP = 4;\n\n  return {\n    link: postLink\n  };\n\n  function postLink(scope, element, attr) {\n    var oldClass = '';\n\n    attr.$observe('mdWhiteframe', function(elevation) {\n      elevation = parseInt(elevation, 10) || DEFAULT_DP;\n\n      if (elevation != DISABLE_DP && (elevation > MAX_DP || elevation < MIN_DP)) {\n        $log.warn('md-whiteframe attribute value is invalid. It should be a number between ' + MIN_DP + ' and ' + MAX_DP, element[0]);\n        elevation = DEFAULT_DP;\n      }\n\n      var newClass = elevation == DISABLE_DP ? '' : 'md-whiteframe-' + elevation + 'dp';\n      attr.$updateClass(newClass, oldClass);\n      oldClass = newClass;\n    });\n  }\n}\n\n\nngmaterial.components.whiteframe = angular.module(\"material.components.whiteframe\");"]}