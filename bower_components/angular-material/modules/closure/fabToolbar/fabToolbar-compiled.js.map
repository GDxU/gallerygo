{"version":3,"sources":["fabToolbar.js"],"names":[],"mappings":"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","file":"fabToolbar-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.fabToolbar');\ngoog.require('ngmaterial.components.fabActions');\ngoog.require('ngmaterial.components.fabShared');\ngoog.require('ngmaterial.core');\n(function() {\n  'use strict';\n\n  /**\n   * @ngdoc module\n   * @name material.components.fabToolbar\n   */\n  angular\n    // Declare our module\n    .module('material.components.fabToolbar', [\n      'material.core',\n      'material.components.fabShared',\n      'material.components.fabActions'\n    ])\n\n    // Register our directive\n    .directive('mdFabToolbar', MdFabToolbarDirective)\n\n    // Register our custom animations\n    .animation('.md-fab-toolbar', MdFabToolbarAnimation)\n\n    // Register a service for the animation so that we can easily inject it into unit tests\n    .service('mdFabToolbarAnimation', MdFabToolbarAnimation);\n\n  /**\n   * @ngdoc directive\n   * @name mdFabToolbar\n   * @module material.components.fabToolbar\n   *\n   * @restrict E\n   *\n   * @description\n   *\n   * The `<md-fab-toolbar>` directive is used to present a toolbar of elements (usually `<md-button>`s)\n   * for quick access to common actions when a floating action button is activated (via click or\n   * keyboard navigation).\n   *\n   * You may also easily position the trigger by applying one one of the following classes to the\n   * `<md-fab-toolbar>` element:\n   *  - `md-fab-top-left`\n   *  - `md-fab-top-right`\n   *  - `md-fab-bottom-left`\n   *  - `md-fab-bottom-right`\n   *\n   * These CSS classes use `position: absolute`, so you need to ensure that the container element\n   * also uses `position: absolute` or `position: relative` in order for them to work.\n   *\n   * @usage\n   *\n   * <hljs lang=\"html\">\n   * <md-fab-toolbar md-direction='left'>\n   *   <md-fab-trigger>\n   *     <md-button aria-label=\"Add...\"><md-icon md-svg-src=\"/img/icons/plus.svg\"></md-icon></md-button>\n   *   </md-fab-trigger>\n   *\n   *   <md-toolbar>\n   *    <md-fab-actions>\n   *      <md-button aria-label=\"Add User\">\n   *        <md-icon md-svg-src=\"/img/icons/user.svg\"></md-icon>\n   *      </md-button>\n   *\n   *      <md-button aria-label=\"Add Group\">\n   *        <md-icon md-svg-src=\"/img/icons/group.svg\"></md-icon>\n   *      </md-button>\n   *    </md-fab-actions>\n   *   </md-toolbar>\n   * </md-fab-toolbar>\n   * </hljs>\n   *\n   * @param {string} md-direction From which direction you would like the toolbar items to appear\n   * relative to the trigger element. Supports `left` and `right` directions.\n   * @param {expression=} md-open Programmatically control whether or not the toolbar is visible.\n   */\n  function MdFabToolbarDirective() {\n    return {\n      restrict: 'E',\n      transclude: true,\n      template: '<div class=\"md-fab-toolbar-wrapper\">' +\n      '  <div class=\"md-fab-toolbar-content\" ng-transclude></div>' +\n      '</div>',\n\n      scope: {\n        direction: '@?mdDirection',\n        isOpen: '=?mdOpen'\n      },\n\n      bindToController: true,\n      controller: 'MdFabController',\n      controllerAs: 'vm',\n\n      link: link\n    };\n\n    function link(scope, element, attributes) {\n      // Add the base class for animations\n      element.addClass('md-fab-toolbar');\n\n      // Prepend the background element to the trigger's button\n      element.find('md-fab-trigger').find('button')\n        .prepend('<div class=\"md-fab-toolbar-background\"></div>');\n    }\n  }\n\n  function MdFabToolbarAnimation() {\n\n    function runAnimation(element, className, done) {\n      // If no className was specified, don't do anything\n      if (!className) {\n        return;\n      }\n\n      var el = element[0];\n      var ctrl = element.controller('mdFabToolbar');\n\n      // Grab the relevant child elements\n      var backgroundElement = el.querySelector('.md-fab-toolbar-background');\n      var triggerElement = el.querySelector('md-fab-trigger button');\n      var toolbarElement = el.querySelector('md-toolbar');\n      var iconElement = el.querySelector('md-fab-trigger button md-icon');\n      var actions = element.find('md-fab-actions').children();\n\n      // If we have both elements, use them to position the new background\n      if (triggerElement && backgroundElement) {\n        // Get our variables\n        var color = window.getComputedStyle(triggerElement).getPropertyValue('background-color');\n        var width = el.offsetWidth;\n        var height = el.offsetHeight;\n\n        // Make it twice as big as it should be since we scale from the center\n        var scale = 2 * (width / triggerElement.offsetWidth);\n\n        // Set some basic styles no matter what animation we're doing\n        backgroundElement.style.backgroundColor = color;\n        backgroundElement.style.borderRadius = width + 'px';\n\n        // If we're open\n        if (ctrl.isOpen) {\n          // Turn on toolbar pointer events when closed\n          toolbarElement.style.pointerEvents = 'inherit';\n\n          backgroundElement.style.width = triggerElement.offsetWidth + 'px';\n          backgroundElement.style.height = triggerElement.offsetHeight + 'px';\n          backgroundElement.style.transform = 'scale(' + scale + ')';\n\n          // Set the next close animation to have the proper delays\n          backgroundElement.style.transitionDelay = '0ms';\n          iconElement && (iconElement.style.transitionDelay = '.3s');\n\n          // Apply a transition delay to actions\n          angular.forEach(actions, function(action, index) {\n            action.style.transitionDelay = (actions.length - index) * 25 + 'ms';\n          });\n        } else {\n          // Turn off toolbar pointer events when closed\n          toolbarElement.style.pointerEvents = 'none';\n\n          // Scale it back down to the trigger's size\n          backgroundElement.style.transform = 'scale(1)';\n\n          // Reset the position\n          backgroundElement.style.top = '0';\n\n          if (element.hasClass('md-right')) {\n            backgroundElement.style.left = '0';\n            backgroundElement.style.right = null;\n          }\n\n          if (element.hasClass('md-left')) {\n            backgroundElement.style.right = '0';\n            backgroundElement.style.left = null;\n          }\n\n          // Set the next open animation to have the proper delays\n          backgroundElement.style.transitionDelay = '200ms';\n          iconElement && (iconElement.style.transitionDelay = '0ms');\n\n          // Apply a transition delay to actions\n          angular.forEach(actions, function(action, index) {\n            action.style.transitionDelay = 200 + (index * 25) + 'ms';\n          });\n        }\n      }\n    }\n\n    return {\n      addClass: function(element, className, done) {\n        runAnimation(element, className, done);\n        done();\n      },\n\n      removeClass: function(element, className, done) {\n        runAnimation(element, className, done);\n        done();\n      }\n    };\n  }\n})();\n\nngmaterial.components.fabToolbar = angular.module(\"material.components.fabToolbar\");"]}