{"version":3,"sources":["fabSpeedDial.js"],"names":[],"mappings":";;AAAA;;;;;;AAMA,KAAK,OAAL,CAAa,iCAAb;AACA,KAAK,OAAL,CAAa,iBAAb;AACA,CAAC,YAAW;AACV;;AAEA,kBAAgB,SAAhB,IAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,aAA9C,EAA6D,UAA7D,CAA7B;AACA,UAAQ,MAAR,CAAe,+BAAf,EAAgD,CAAC,eAAD,CAAhD,EACG,UADH,CACc,iBADd,EACiC,eADjC;;AAGA,WAAS,eAAT,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C,QAA3C,EAAqD,OAArD,EAA8D,WAA9D,EAA2E,QAA3E,EAAqF;AACnF,QAAI,KAAK,IAAT;AACA,QAAI,2BAA2B,CAA/B;;AAEA;;AAEA,OAAG,IAAH,GAAU,YAAW;AACnB,aAAO,UAAP,CAAkB,kBAAlB;AACD,KAFD;;AAIA,OAAG,KAAH,GAAW,YAAW;AACpB;AACA,aAAO,UAAP,CAAkB,mBAAlB;;AAEA;AACA,eAAS,IAAT,CAAc,gBAAd,EAAgC,CAAhC,EAAmC,KAAnC;AACD,KAND;;AAQA;AACA,OAAG,MAAH,GAAY,YAAW;AACrB,aAAO,UAAP,CAAkB,wBAAlB;AACD,KAFD;;AAIA;;;;AAIA,OAAG,OAAH,GAAa,YAAW;AACtB;AACA;AACA;;AAEA;AACD,KAND;;AAQA;AACA;AACA,QAAI,QAAQ,OAAR,CAAgB,KAAhB,KAA0B,CAA1B,IAA+B,QAAQ,OAAR,CAAgB,KAAhB,IAAyB,CAA5D,EAA+D;AAC7D,WAAK,OAAL;AACD;;AAED,aAAS,aAAT,GAAyB;AACvB;AACA,SAAG,SAAH,GAAe,GAAG,SAAH,IAAgB,MAA/B;;AAEA;AACA,SAAG,MAAH,GAAY,GAAG,MAAH,IAAa,KAAzB;;AAEA;AACA;;AAEA;AACA,eAAS,QAAT,CAAkB,uBAAlB;AACD;;AAED,aAAS,cAAT,GAA0B;AACxB,UAAI,aAAa,CACf,OADe,EACN,SADM,EACK,UADL,CAAjB;;AAIA;AACA,cAAQ,OAAR,CAAgB,UAAhB,EAA4B,UAAS,SAAT,EAAoB;AAC9C,iBAAS,EAAT,CAAY,SAAZ,EAAuB,WAAvB;AACD,OAFD;;AAIA;AACA,aAAO,GAAP,CAAW,UAAX,EAAuB,YAAW;AAChC,gBAAQ,OAAR,CAAgB,UAAhB,EAA4B,UAAS,SAAT,EAAoB;AAC9C,mBAAS,GAAT,CAAa,SAAb,EAAwB,WAAxB;AACD,SAFD;;AAIA;AACA;AACA;AACD,OARD;AASD;;AAED,QAAI,YAAJ;AACA,aAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B;AACA,UAAI,MAAM,IAAN,IAAc,OAAlB,EAA2B;AACzB,wBAAgB,KAAhB;AACD;;AAED;AACA,UAAI,MAAM,IAAN,IAAc,UAAd,IAA4B,CAAC,YAAjC,EAA+C;AAC7C,uBAAe,SAAS,YAAW;AACjC,aAAG,KAAH;AACD,SAFc,EAEZ,GAFY,EAEP,KAFO,CAAf;AAGD;;AAED;AACA,UAAI,MAAM,IAAN,IAAc,SAAd,IAA2B,YAA/B,EAA6C;AAC3C,iBAAS,MAAT,CAAgB,YAAhB;AACA,uBAAe,IAAf;AACD;AACF;;AAED,aAAS,gBAAT,GAA4B;AAC1B,SAAG,kBAAH,GAAwB,CAAC,CAAzB;AACD;;AAED,aAAS,aAAT,GAAyB;AACvB;AACA,aAAO,MAAP,CAAc,cAAd,EAA8B,UAAS,MAAT,EAAiB,MAAjB,EAAyB;AACrD;AACA,iBAAS,WAAT,CAAqB,QAArB,EAA+B,QAAQ,MAAvC;AACA,iBAAS,QAAT,CAAkB,QAAlB,EAA4B,QAAQ,MAApC;;AAEA;AACA;AACD,OAPD;;AASA,UAAI,OAAJ,EAAa,OAAb;;AAEA;AACA,aAAO,MAAP,CAAc,WAAd,EAA2B,UAAS,MAAT,EAAiB;AAC1C;AACA;;AAEA;AACA;AACA,YAAI,CAAC,OAAD,IAAY,CAAC,OAAjB,EAA0B;AACxB,oBAAU,mBAAV;AACA,oBAAU,mBAAV;AACD;;AAED,YAAI,MAAJ,EAAY;AACV;AACD,SAFD,MAEO;AACL;AACD;;AAED,YAAI,QAAQ,SAAS,YAAT,GAAwB,EAApC;AACA,YAAI,WAAW,SAAS,EAAT,GAAc,YAA7B;;AAEA;AACA,gBAAQ,IAAR,CAAa,eAAb,EAA8B,IAA9B;AACA,gBAAQ,IAAR,CAAa,eAAb,EAA8B,MAA9B;AACA,gBAAQ,IAAR,CAAa,aAAb,EAA4B,CAAC,MAA7B;;AAEA;AACA,iBAAS,QAAT,CAAkB,QAAlB,EAA4B,KAA5B,EAAmC,QAAnC;AACD,OA3BD;AA4BD;;AAED,aAAS,qBAAT,GAAiC;AAC/B;AACA,UAAI,SAAS,CAAT,EAAY,YAAZ,GAA2B,CAA/B,EAAkC;AAChC;AACA,iBAAS,QAAT,CAAkB,QAAlB,EAA4B,sBAA5B,EAAoD,IAApD,CAAyD,YAAW;AAClE;AACA,mBAAS,WAAT,CAAqB,uBAArB;AACD,SAHD;AAID;;AAED;AARA,WASK,IAAI,2BAA2B,EAA/B,EAAmC;AACtC,mBAAS,qBAAT,EAAgC,GAAhC;;AAEA;AACA,qCAA2B,2BAA2B,CAAtD;AACD;AACF;;AAED,aAAS,cAAT,GAA0B;AACxB,eAAS,EAAT,CAAY,SAAZ,EAAuB,UAAvB;;AAEA;AACA;AACA,cAAQ,QAAR,CAAiB,YAAW;AAC1B,gBAAQ,OAAR,CAAgB,QAAhB,EAA0B,EAA1B,CAA6B,gBAA7B,EAA+C,oBAA/C;AACD,OAFD;;AAIA;AACA;AACA;AACD;;AAED,aAAS,eAAT,GAA2B;AACzB,eAAS,GAAT,CAAa,SAAb,EAAwB,UAAxB;AACA,cAAQ,OAAR,CAAgB,QAAhB,EAA0B,GAA1B,CAA8B,gBAA9B,EAAgD,oBAAhD;AACD;;AAED,aAAS,oBAAT,CAA8B,KAA9B,EAAqC;AACnC,UAAI,MAAM,MAAV,EAAkB;AAChB,YAAI,iBAAiB,QAAQ,UAAR,CAAmB,MAAM,MAAzB,EAAiC,gBAAjC,CAArB;AACA,YAAI,iBAAiB,QAAQ,UAAR,CAAmB,MAAM,MAAzB,EAAiC,gBAAjC,CAArB;;AAEA,YAAI,CAAC,cAAD,IAAmB,CAAC,cAAxB,EAAwC;AACtC,aAAG,KAAH;AACD;AACF;AACF;;AAED,aAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,cAAQ,MAAM,KAAd;AACE,aAAK,YAAY,QAAZ,CAAqB,MAA1B;AAAkC,aAAG,KAAH,GAAY,MAAM,cAAN,GAAwB,OAAO,KAAP;AACtE,aAAK,YAAY,QAAZ,CAAqB,UAA1B;AAAsC,oBAAU,KAAV,EAAkB,OAAO,KAAP;AACxD,aAAK,YAAY,QAAZ,CAAqB,QAA1B;AAAoC,kBAAQ,KAAR,EAAgB,OAAO,KAAP;AACpD,aAAK,YAAY,QAAZ,CAAqB,WAA1B;AAAuC,qBAAW,KAAX,EAAmB,OAAO,KAAP;AAC1D,aAAK,YAAY,QAAZ,CAAqB,UAA1B;AAAsC,oBAAU,KAAV,EAAkB,OAAO,KAAP;AAL1D;AAOD;;AAED,aAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,kBAAY,KAAZ,EAAmB,CAAC,CAApB;AACD;;AAED,aAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,kBAAY,KAAZ,EAAmB,CAAnB;AACD;;AAED,aAAS,WAAT,CAAqB,KAArB,EAA4B,SAA5B,EAAuC;AACrC,UAAI,UAAU,uBAAd;;AAEA;AACA,SAAG,kBAAH,GAAwB,GAAG,kBAAH,GAAwB,SAAhD;AACA,SAAG,kBAAH,GAAwB,KAAK,GAAL,CAAS,QAAQ,MAAR,GAAiB,CAA1B,EAA6B,GAAG,kBAAhC,CAAxB;AACA,SAAG,kBAAH,GAAwB,KAAK,GAAL,CAAS,CAAT,EAAY,GAAG,kBAAf,CAAxB;;AAEA;AACA,UAAI,eAAgB,QAAQ,OAAR,CAAgB,QAAQ,GAAG,kBAAX,CAAhB,EAAgD,QAAhD,GAA2D,CAA3D,CAApB;AACA,cAAQ,OAAR,CAAgB,YAAhB,EAA8B,IAA9B,CAAmC,UAAnC,EAA+C,CAA/C;AACA,mBAAa,KAAb;;AAEA;AACA,YAAM,cAAN;AACA,YAAM,wBAAN;AACD;;AAED,aAAS,qBAAT,GAAiC;AAC/B;AACA,UAAI,UAAU,oBAAoB,CAApB,EAAuB,gBAAvB,CAAwC,qBAAxC,CAAd;;AAEA;AACA,cAAQ,OAAR,CAAgB,OAAhB,EAAyB,UAAS,MAAT,EAAiB;AACxC,gBAAQ,OAAR,CAAgB,QAAQ,OAAR,CAAgB,MAAhB,EAAwB,QAAxB,GAAmC,CAAnC,CAAhB,EAAuD,IAAvD,CAA4D,UAA5D,EAAwE,CAAC,CAAzE;AACD,OAFD;;AAIA,aAAO,OAAP;AACD;;AAED,aAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,UAAI,GAAG,SAAH,KAAiB,MAArB,EAA6B;AAC3B,qBAAa,KAAb;AACD,OAFD,MAEO;AACL,qBAAa,KAAb;AACD;AACF;;AAED,aAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,UAAI,GAAG,SAAH,KAAiB,MAArB,EAA6B;AAC3B,qBAAa,KAAb;AACD,OAFD,MAEO;AACL,qBAAa,KAAb;AACD;AACF;;AAED,aAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,UAAI,GAAG,SAAH,KAAiB,MAArB,EAA6B;AAC3B,qBAAa,KAAb;AACD,OAFD,MAEO;AACL,qBAAa,KAAb;AACD;AACF;;AAED,aAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,UAAI,GAAG,SAAH,KAAiB,IAArB,EAA2B;AACzB,qBAAa,KAAb;AACD,OAFD,MAEO;AACL,qBAAa,KAAb;AACD;AACF;;AAED,aAAS,SAAT,CAAmB,OAAnB,EAA4B;AAC1B,aAAO,QAAQ,UAAR,CAAmB,OAAnB,EAA4B,gBAA5B,CAAP;AACD;;AAED,aAAS,QAAT,CAAkB,OAAlB,EAA2B;AACzB,aAAO,QAAQ,UAAR,CAAmB,OAAnB,EAA4B,gBAA5B,CAAP;AACD;;AAED,aAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,UAAI,UAAU,MAAM,MAAhB,CAAJ,EAA6B;AAC3B,WAAG,MAAH;AACD;;AAED,UAAI,SAAS,MAAM,MAAf,CAAJ,EAA4B;AAC1B,WAAG,KAAH;AACD;AACF;;AAED,aAAS,iBAAT,GAA6B;AAC3B,aAAO,SAAS,IAAT,CAAc,gBAAd,CAAP;AACD;;AAED,aAAS,iBAAT,GAA6B;AAC3B,aAAO,SAAS,IAAT,CAAc,gBAAd,CAAP;AACD;AACF;AACF,CApTD;;AAsTA,CAAC,YAAW;AACV;;AAEA;;;;;;AAKA,+BAA6B,SAA7B,IAA0C,CAAC,UAAD,CAA1C;AACA,+BAA6B,SAA7B,IAA0C,CAAC,UAAD,CAA1C;AACA,MAAI,uBAAuB,GAA3B;;AAEA;;;;AAIA;AACE;AADF,GAEG,MAFH,CAEU,kCAFV,EAE8C,CAC1C,eAD0C,EAE1C,+BAF0C,EAG1C,gCAH0C,CAF9C;;AAQE;AARF,GASG,SATH,CASa,gBATb,EAS+B,uBAT/B;;AAWE;AAXF,GAYG,SAZH,CAYa,WAZb,EAY0B,4BAZ1B,EAaG,SAbH,CAaa,WAbb,EAa0B,4BAb1B;;AAeE;AAfF,GAgBG,OAhBH,CAgBW,8BAhBX,EAgB2C,4BAhB3C,EAiBG,OAjBH,CAiBW,8BAjBX,EAiB2C,4BAjB3C;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,WAAS,uBAAT,GAAmC;AACjC,WAAO;AACL,gBAAU,GADL;;AAGL,aAAO;AACL,mBAAW,eADN;AAEL,gBAAQ;AAFH,OAHF;;AAQL,wBAAkB,IARb;AASL,kBAAY,iBATP;AAUL,oBAAc,IAVT;;AAYL,YAAM;AAZD,KAAP;;AAeA,aAAS,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC,EAA0C;AACxC;AACA,cAAQ,OAAR,CAAgB,uCAAhB;AACD;AACF;;AAED,WAAS,4BAAT,CAAsC,QAAtC,EAAgD;AAC9C,aAAS,SAAT,CAAmB,IAAnB,EAAyB;AAAE,eAAS,IAAT,EAAe,oBAAf,EAAqC,KAArC;AAA8C;;AAEzE,aAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC7B;AACA,UAAI,QAAQ,QAAR,CAAiB,uBAAjB,KAA6C,CAAC,QAAQ,QAAR,CAAiB,sBAAjB,CAAlD,EAA4F;AAC1F;AACD;;AAED,UAAI,KAAK,QAAQ,CAAR,CAAT;AACA,UAAI,OAAO,QAAQ,UAAR,CAAmB,gBAAnB,CAAX;AACA,UAAI,QAAQ,GAAG,gBAAH,CAAoB,qBAApB,CAAZ;;AAEA;AACA,UAAI,iBAAiB,GAAG,aAAH,CAAiB,gBAAjB,CAArB;;AAEA;AACA,UAAI,mBAAmB,GAAG,aAAH,CAAiB,oBAAjB,CAAvB;;AAEA;AACA,UAAI,cAAc,SAAS,OAAO,gBAAP,CAAwB,gBAAxB,EAA0C,MAAnD,CAAlB;;AAEA;AACA,cAAQ,OAAR,CAAgB,KAAhB,EAAuB,UAAS,IAAT,EAAe,KAAf,EAAsB;AAC3C,YAAI,SAAS,KAAK,KAAlB;;AAEA,eAAO,SAAP,GAAmB,OAAO,eAAP,GAAyB,EAA5C;AACA,eAAO,eAAP,GAAyB,EAAzB;AACA,eAAO,OAAP,GAAiB,CAAjB;;AAEA;AACA,eAAO,MAAP,GAAiB,MAAM,MAAN,GAAe,KAAhB,GAAyB,WAAzC;AACD,OATD;;AAWA;AACA,qBAAe,KAAf,CAAqB,MAArB,GAA8B,cAAc,MAAM,MAApB,GAA6B,CAA3D;;AAEA;AACA,UAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,gBAAQ,OAAR,CAAgB,KAAhB,EAAuB,UAAS,IAAT,EAAe,KAAf,EAAsB;AAC3C,cAAI,WAAJ,EAAiB,IAAjB;AACA,cAAI,SAAS,KAAK,KAAlB;;AAEA;AACA;AACA;AACA,cAAI,0BAA0B,CAAC,eAAe,YAAf,GAA8B,KAAK,YAApC,IAAoD,CAAlF;AACA,cAAI,yBAAyB,CAAC,eAAe,WAAf,GAA6B,KAAK,WAAnC,IAAkD,CAA/E;;AAEA,kBAAQ,KAAK,SAAb;AACE,iBAAK,IAAL;AACE,4BAAe,KAAK,YAAL,IAAqB,QAAQ,CAA7B,IAAkC,uBAAjD;AACA,qBAAO,GAAP;AACA;AACF,iBAAK,MAAL;AACE,4BAAc,EAAE,KAAK,YAAL,IAAqB,QAAQ,CAA7B,IAAkC,uBAApC,CAAd;AACA,qBAAO,GAAP;AACA;AACF,iBAAK,MAAL;AACE,4BAAe,KAAK,WAAL,IAAoB,QAAQ,CAA5B,IAAiC,sBAAhD;AACA,qBAAO,GAAP;AACA;AACF,iBAAK,OAAL;AACE,4BAAc,EAAE,KAAK,WAAL,IAAoB,QAAQ,CAA5B,IAAiC,sBAAnC,CAAd;AACA,qBAAO,GAAP;AACA;AAhBJ;;AAmBA,cAAI,eAAe,cAAc,IAAd,GAAqB,GAArB,GAA2B,WAA3B,GAAyC,KAA5D;;AAEA,iBAAO,SAAP,GAAmB,OAAO,eAAP,GAAyB,YAA5C;AACD,SAhCD;AAiCD;AACF;;AAED,WAAO;AACL,gBAAU,kBAAS,OAAT,EAAkB,SAAlB,EAA6B,IAA7B,EAAmC;AAC3C,YAAI,QAAQ,QAAR,CAAiB,UAAjB,CAAJ,EAAkC;AAChC,uBAAa,OAAb;AACA,oBAAU,IAAV;AACD,SAHD,MAGO;AACL;AACD;AACF,OARI;AASL,mBAAa,qBAAS,OAAT,EAAkB,SAAlB,EAA6B,IAA7B,EAAmC;AAC9C,qBAAa,OAAb;AACA,kBAAU,IAAV;AACD;AAZI,KAAP;AAcD;;AAED,WAAS,4BAAT,CAAsC,QAAtC,EAAgD;AAC9C,aAAS,SAAT,CAAmB,IAAnB,EAAyB;AAAE,eAAS,IAAT,EAAe,oBAAf,EAAqC,KAArC;AAA8C;;AAEzE,QAAI,QAAQ,EAAZ;;AAEA,aAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC7B,UAAI,KAAK,QAAQ,CAAR,CAAT;AACA,UAAI,OAAO,QAAQ,UAAR,CAAmB,gBAAnB,CAAX;AACA,UAAI,QAAQ,GAAG,gBAAH,CAAoB,qBAApB,CAAZ;;AAEA;AACA,UAAI,mBAAmB,GAAG,aAAH,CAAiB,oBAAjB,CAAvB;;AAEA;AACA,UAAI,cAAc,SAAS,OAAO,gBAAP,CAAwB,gBAAxB,EAA0C,MAAnD,CAAlB;;AAEA;AACA,cAAQ,OAAR,CAAgB,KAAhB,EAAuB,UAAS,IAAT,EAAe,KAAf,EAAsB;AAC3C,YAAI,SAAS,KAAK,KAAlB;AAAA,YACE,cAAc,QAAQ,KADxB;;AAGA,eAAO,OAAP,GAAiB,KAAK,MAAL,GAAc,CAAd,GAAkB,CAAnC;AACA,eAAO,SAAP,GAAmB,OAAO,eAAP,GAAyB,KAAK,MAAL,GAAc,UAAd,GAA2B,UAAvE;AACA,eAAO,eAAP,GAAyB,CAAC,KAAK,MAAL,GAAc,WAAd,GAA6B,MAAM,MAAN,GAAe,WAA7C,IAA6D,IAAtF;;AAEA;AACA,eAAO,MAAP,GAAiB,MAAM,MAAN,GAAe,KAAhB,GAAyB,WAAzC;AACD,OAVD;AAWD;;AAED,WAAO;AACL,gBAAU,kBAAS,OAAT,EAAkB,SAAlB,EAA6B,IAA7B,EAAmC;AAC3C,qBAAa,OAAb;AACA,kBAAU,IAAV;AACD,OAJI;;AAML,mBAAa,qBAAS,OAAT,EAAkB,SAAlB,EAA6B,IAA7B,EAAmC;AAC9C,qBAAa,OAAb;AACA,kBAAU,IAAV;AACD;AATI,KAAP;AAWD;AACF,CA9PD;;AAgQA,WAAW,UAAX,CAAsB,SAAtB,GAAkC,QAAQ,MAAR,CAAe,+BAAf,CAAlC","file":"fabSpeedDial-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.fabShared');\ngoog.require('ngmaterial.core');\n(function() {\n  'use strict';\n\n  MdFabController['$inject'] = [\"$scope\", \"$element\", \"$animate\", \"$mdUtil\", \"$mdConstant\", \"$timeout\"];\n  angular.module('material.components.fabShared', ['material.core'])\n    .controller('MdFabController', MdFabController);\n\n  function MdFabController($scope, $element, $animate, $mdUtil, $mdConstant, $timeout) {\n    var vm = this;\n    var initialAnimationAttempts = 0;\n\n    // NOTE: We use async eval(s) below to avoid conflicts with any existing digest loops\n\n    vm.open = function() {\n      $scope.$evalAsync(\"vm.isOpen = true\");\n    };\n\n    vm.close = function() {\n      // Async eval to avoid conflicts with existing digest loops\n      $scope.$evalAsync(\"vm.isOpen = false\");\n\n      // Focus the trigger when the element closes so users can still tab to the next item\n      $element.find('md-fab-trigger')[0].focus();\n    };\n\n    // Toggle the open/close state when the trigger is clicked\n    vm.toggle = function() {\n      $scope.$evalAsync(\"vm.isOpen = !vm.isOpen\");\n    };\n\n    /*\n     * Angular Lifecycle hook for newer Angular versions.\n     * Bindings are not guaranteed to have been assigned in the controller, but they are in the $onInit hook.\n     */\n    vm.$onInit = function() {\n      setupDefaults();\n      setupListeners();\n      setupWatchers();\n\n      fireInitialAnimations();\n    };\n\n    // For Angular 1.4 and older, where there are no lifecycle hooks but bindings are pre-assigned,\n    // manually call the $onInit hook.\n    if (angular.version.major === 1 && angular.version.minor <= 4) {\n      this.$onInit();\n    }\n\n    function setupDefaults() {\n      // Set the default direction to 'down' if none is specified\n      vm.direction = vm.direction || 'down';\n\n      // Set the default to be closed\n      vm.isOpen = vm.isOpen || false;\n\n      // Start the keyboard interaction at the first action\n      resetActionIndex();\n\n      // Add an animations waiting class so we know not to run\n      $element.addClass('md-animations-waiting');\n    }\n\n    function setupListeners() {\n      var eventTypes = [\n        'click', 'focusin', 'focusout'\n      ];\n\n      // Add our listeners\n      angular.forEach(eventTypes, function(eventType) {\n        $element.on(eventType, parseEvents);\n      });\n\n      // Remove our listeners when destroyed\n      $scope.$on('$destroy', function() {\n        angular.forEach(eventTypes, function(eventType) {\n          $element.off(eventType, parseEvents);\n        });\n\n        // remove any attached keyboard handlers in case element is removed while\n        // speed dial is open\n        disableKeyboard();\n      });\n    }\n\n    var closeTimeout;\n    function parseEvents(event) {\n      // If the event is a click, just handle it\n      if (event.type == 'click') {\n        handleItemClick(event);\n      }\n\n      // If we focusout, set a timeout to close the element\n      if (event.type == 'focusout' && !closeTimeout) {\n        closeTimeout = $timeout(function() {\n          vm.close();\n        }, 100, false);\n      }\n\n      // If we see a focusin and there is a timeout about to run, cancel it so we stay open\n      if (event.type == 'focusin' && closeTimeout) {\n        $timeout.cancel(closeTimeout);\n        closeTimeout = null;\n      }\n    }\n\n    function resetActionIndex() {\n      vm.currentActionIndex = -1;\n    }\n\n    function setupWatchers() {\n      // Watch for changes to the direction and update classes/attributes\n      $scope.$watch('vm.direction', function(newDir, oldDir) {\n        // Add the appropriate classes so we can target the direction in the CSS\n        $animate.removeClass($element, 'md-' + oldDir);\n        $animate.addClass($element, 'md-' + newDir);\n\n        // Reset the action index since it may have changed\n        resetActionIndex();\n      });\n\n      var trigger, actions;\n\n      // Watch for changes to md-open\n      $scope.$watch('vm.isOpen', function(isOpen) {\n        // Reset the action index since it may have changed\n        resetActionIndex();\n\n        // We can't get the trigger/actions outside of the watch because the component hasn't been\n        // linked yet, so we wait until the first watch fires to cache them.\n        if (!trigger || !actions) {\n          trigger = getTriggerElement();\n          actions = getActionsElement();\n        }\n\n        if (isOpen) {\n          enableKeyboard();\n        } else {\n          disableKeyboard();\n        }\n\n        var toAdd = isOpen ? 'md-is-open' : '';\n        var toRemove = isOpen ? '' : 'md-is-open';\n\n        // Set the proper ARIA attributes\n        trigger.attr('aria-haspopup', true);\n        trigger.attr('aria-expanded', isOpen);\n        actions.attr('aria-hidden', !isOpen);\n\n        // Animate the CSS classes\n        $animate.setClass($element, toAdd, toRemove);\n      });\n    }\n\n    function fireInitialAnimations() {\n      // If the element is actually visible on the screen\n      if ($element[0].scrollHeight > 0) {\n        // Fire our animation\n        $animate.addClass($element, '_md-animations-ready').then(function() {\n          // Remove the waiting class\n          $element.removeClass('md-animations-waiting');\n        });\n      }\n\n      // Otherwise, try for up to 1 second before giving up\n      else if (initialAnimationAttempts < 10) {\n        $timeout(fireInitialAnimations, 100);\n\n        // Increment our counter\n        initialAnimationAttempts = initialAnimationAttempts + 1;\n      }\n    }\n\n    function enableKeyboard() {\n      $element.on('keydown', keyPressed);\n\n      // On the next tick, setup a check for outside clicks; we do this on the next tick to avoid\n      // clicks/touches that result in the isOpen attribute changing (e.g. a bound radio button)\n      $mdUtil.nextTick(function() {\n        angular.element(document).on('click touchend', checkForOutsideClick);\n      });\n\n      // TODO: On desktop, we should be able to reset the indexes so you cannot tab through, but\n      // this breaks accessibility, especially on mobile, since you have no arrow keys to press\n      //resetActionTabIndexes();\n    }\n\n    function disableKeyboard() {\n      $element.off('keydown', keyPressed);\n      angular.element(document).off('click touchend', checkForOutsideClick);\n    }\n\n    function checkForOutsideClick(event) {\n      if (event.target) {\n        var closestTrigger = $mdUtil.getClosest(event.target, 'md-fab-trigger');\n        var closestActions = $mdUtil.getClosest(event.target, 'md-fab-actions');\n\n        if (!closestTrigger && !closestActions) {\n          vm.close();\n        }\n      }\n    }\n\n    function keyPressed(event) {\n      switch (event.which) {\n        case $mdConstant.KEY_CODE.ESCAPE: vm.close(); event.preventDefault(); return false;\n        case $mdConstant.KEY_CODE.LEFT_ARROW: doKeyLeft(event); return false;\n        case $mdConstant.KEY_CODE.UP_ARROW: doKeyUp(event); return false;\n        case $mdConstant.KEY_CODE.RIGHT_ARROW: doKeyRight(event); return false;\n        case $mdConstant.KEY_CODE.DOWN_ARROW: doKeyDown(event); return false;\n      }\n    }\n\n    function doActionPrev(event) {\n      focusAction(event, -1);\n    }\n\n    function doActionNext(event) {\n      focusAction(event, 1);\n    }\n\n    function focusAction(event, direction) {\n      var actions = resetActionTabIndexes();\n\n      // Increment/decrement the counter with restrictions\n      vm.currentActionIndex = vm.currentActionIndex + direction;\n      vm.currentActionIndex = Math.min(actions.length - 1, vm.currentActionIndex);\n      vm.currentActionIndex = Math.max(0, vm.currentActionIndex);\n\n      // Focus the element\n      var focusElement =  angular.element(actions[vm.currentActionIndex]).children()[0];\n      angular.element(focusElement).attr('tabindex', 0);\n      focusElement.focus();\n\n      // Make sure the event doesn't bubble and cause something else\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n\n    function resetActionTabIndexes() {\n      // Grab all of the actions\n      var actions = getActionsElement()[0].querySelectorAll('.md-fab-action-item');\n\n      // Disable all other actions for tabbing\n      angular.forEach(actions, function(action) {\n        angular.element(angular.element(action).children()[0]).attr('tabindex', -1);\n      });\n\n      return actions;\n    }\n\n    function doKeyLeft(event) {\n      if (vm.direction === 'left') {\n        doActionNext(event);\n      } else {\n        doActionPrev(event);\n      }\n    }\n\n    function doKeyUp(event) {\n      if (vm.direction === 'down') {\n        doActionPrev(event);\n      } else {\n        doActionNext(event);\n      }\n    }\n\n    function doKeyRight(event) {\n      if (vm.direction === 'left') {\n        doActionPrev(event);\n      } else {\n        doActionNext(event);\n      }\n    }\n\n    function doKeyDown(event) {\n      if (vm.direction === 'up') {\n        doActionPrev(event);\n      } else {\n        doActionNext(event);\n      }\n    }\n\n    function isTrigger(element) {\n      return $mdUtil.getClosest(element, 'md-fab-trigger');\n    }\n\n    function isAction(element) {\n      return $mdUtil.getClosest(element, 'md-fab-actions');\n    }\n\n    function handleItemClick(event) {\n      if (isTrigger(event.target)) {\n        vm.toggle();\n      }\n\n      if (isAction(event.target)) {\n        vm.close();\n      }\n    }\n\n    function getTriggerElement() {\n      return $element.find('md-fab-trigger');\n    }\n\n    function getActionsElement() {\n      return $element.find('md-fab-actions');\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * The duration of the CSS animation in milliseconds.\n   *\n   * @type {number}\n   */\n  MdFabSpeedDialFlingAnimation['$inject'] = [\"$timeout\"];\n  MdFabSpeedDialScaleAnimation['$inject'] = [\"$timeout\"];\n  var cssAnimationDuration = 300;\n\n  /**\n   * @ngdoc module\n   * @name material.components.fabSpeedDial\n   */\n  angular\n    // Declare our module\n    .module('material.components.fabSpeedDial', [\n      'material.core',\n      'material.components.fabShared',\n      'material.components.fabActions'\n    ])\n\n    // Register our directive\n    .directive('mdFabSpeedDial', MdFabSpeedDialDirective)\n\n    // Register our custom animations\n    .animation('.md-fling', MdFabSpeedDialFlingAnimation)\n    .animation('.md-scale', MdFabSpeedDialScaleAnimation)\n\n    // Register a service for each animation so that we can easily inject them into unit tests\n    .service('mdFabSpeedDialFlingAnimation', MdFabSpeedDialFlingAnimation)\n    .service('mdFabSpeedDialScaleAnimation', MdFabSpeedDialScaleAnimation);\n\n  /**\n   * @ngdoc directive\n   * @name mdFabSpeedDial\n   * @module material.components.fabSpeedDial\n   *\n   * @restrict E\n   *\n   * @description\n   * The `<md-fab-speed-dial>` directive is used to present a series of popup elements (usually\n   * `<md-button>`s) for quick access to common actions.\n   *\n   * There are currently two animations available by applying one of the following classes to\n   * the component:\n   *\n   *  - `md-fling` - The speed dial items appear from underneath the trigger and move into their\n   *    appropriate positions.\n   *  - `md-scale` - The speed dial items appear in their proper places by scaling from 0% to 100%.\n   *\n   * You may also easily position the trigger by applying one one of the following classes to the\n   * `<md-fab-speed-dial>` element:\n   *  - `md-fab-top-left`\n   *  - `md-fab-top-right`\n   *  - `md-fab-bottom-left`\n   *  - `md-fab-bottom-right`\n   *\n   * These CSS classes use `position: absolute`, so you need to ensure that the container element\n   * also uses `position: absolute` or `position: relative` in order for them to work.\n   *\n   * Additionally, you may use the standard `ng-mouseenter` and `ng-mouseleave` directives to\n   * open or close the speed dial. However, if you wish to allow users to hover over the empty\n   * space where the actions will appear, you must also add the `md-hover-full` class to the speed\n   * dial element. Without this, the hover effect will only occur on top of the trigger.\n   *\n   * See the demos for more information.\n   *\n   * ## Troubleshooting\n   *\n   * If your speed dial shows the closing animation upon launch, you may need to use `ng-cloak` on\n   * the parent container to ensure that it is only visible once ready. We have plans to remove this\n   * necessity in the future.\n   *\n   * @usage\n   * <hljs lang=\"html\">\n   * <md-fab-speed-dial md-direction=\"up\" class=\"md-fling\">\n   *   <md-fab-trigger>\n   *     <md-button aria-label=\"Add...\"><md-icon md-svg-src=\"/img/icons/plus.svg\"></md-icon></md-button>\n   *   </md-fab-trigger>\n   *\n   *   <md-fab-actions>\n   *     <md-button aria-label=\"Add User\">\n   *       <md-icon md-svg-src=\"/img/icons/user.svg\"></md-icon>\n   *     </md-button>\n   *\n   *     <md-button aria-label=\"Add Group\">\n   *       <md-icon md-svg-src=\"/img/icons/group.svg\"></md-icon>\n   *     </md-button>\n   *   </md-fab-actions>\n   * </md-fab-speed-dial>\n   * </hljs>\n   *\n   * @param {string} md-direction From which direction you would like the speed dial to appear\n   * relative to the trigger element.\n   * @param {expression=} md-open Programmatically control whether or not the speed-dial is visible.\n   */\n  function MdFabSpeedDialDirective() {\n    return {\n      restrict: 'E',\n\n      scope: {\n        direction: '@?mdDirection',\n        isOpen: '=?mdOpen'\n      },\n\n      bindToController: true,\n      controller: 'MdFabController',\n      controllerAs: 'vm',\n\n      link: FabSpeedDialLink\n    };\n\n    function FabSpeedDialLink(scope, element) {\n      // Prepend an element to hold our CSS variables so we can use them in the animations below\n      element.prepend('<div class=\"_md-css-variables\"></div>');\n    }\n  }\n\n  function MdFabSpeedDialFlingAnimation($timeout) {\n    function delayDone(done) { $timeout(done, cssAnimationDuration, false); }\n\n    function runAnimation(element) {\n      // Don't run if we are still waiting and we are not ready\n      if (element.hasClass('md-animations-waiting') && !element.hasClass('_md-animations-ready')) {\n        return;\n      }\n\n      var el = element[0];\n      var ctrl = element.controller('mdFabSpeedDial');\n      var items = el.querySelectorAll('.md-fab-action-item');\n\n      // Grab our trigger element\n      var triggerElement = el.querySelector('md-fab-trigger');\n\n      // Grab our element which stores CSS variables\n      var variablesElement = el.querySelector('._md-css-variables');\n\n      // Setup JS variables based on our CSS variables\n      var startZIndex = parseInt(window.getComputedStyle(variablesElement).zIndex);\n\n      // Always reset the items to their natural position/state\n      angular.forEach(items, function(item, index) {\n        var styles = item.style;\n\n        styles.transform = styles.webkitTransform = '';\n        styles.transitionDelay = '';\n        styles.opacity = 1;\n\n        // Make the items closest to the trigger have the highest z-index\n        styles.zIndex = (items.length - index) + startZIndex;\n      });\n\n      // Set the trigger to be above all of the actions so they disappear behind it.\n      triggerElement.style.zIndex = startZIndex + items.length + 1;\n\n      // If the control is closed, hide the items behind the trigger\n      if (!ctrl.isOpen) {\n        angular.forEach(items, function(item, index) {\n          var newPosition, axis;\n          var styles = item.style;\n\n          // Make sure to account for differences in the dimensions of the trigger verses the items\n          // so that we can properly center everything; this helps hide the item's shadows behind\n          // the trigger.\n          var triggerItemHeightOffset = (triggerElement.clientHeight - item.clientHeight) / 2;\n          var triggerItemWidthOffset = (triggerElement.clientWidth - item.clientWidth) / 2;\n\n          switch (ctrl.direction) {\n            case 'up':\n              newPosition = (item.scrollHeight * (index + 1) + triggerItemHeightOffset);\n              axis = 'Y';\n              break;\n            case 'down':\n              newPosition = -(item.scrollHeight * (index + 1) + triggerItemHeightOffset);\n              axis = 'Y';\n              break;\n            case 'left':\n              newPosition = (item.scrollWidth * (index + 1) + triggerItemWidthOffset);\n              axis = 'X';\n              break;\n            case 'right':\n              newPosition = -(item.scrollWidth * (index + 1) + triggerItemWidthOffset);\n              axis = 'X';\n              break;\n          }\n\n          var newTranslate = 'translate' + axis + '(' + newPosition + 'px)';\n\n          styles.transform = styles.webkitTransform = newTranslate;\n        });\n      }\n    }\n\n    return {\n      addClass: function(element, className, done) {\n        if (element.hasClass('md-fling')) {\n          runAnimation(element);\n          delayDone(done);\n        } else {\n          done();\n        }\n      },\n      removeClass: function(element, className, done) {\n        runAnimation(element);\n        delayDone(done);\n      }\n    };\n  }\n\n  function MdFabSpeedDialScaleAnimation($timeout) {\n    function delayDone(done) { $timeout(done, cssAnimationDuration, false); }\n\n    var delay = 65;\n\n    function runAnimation(element) {\n      var el = element[0];\n      var ctrl = element.controller('mdFabSpeedDial');\n      var items = el.querySelectorAll('.md-fab-action-item');\n\n      // Grab our element which stores CSS variables\n      var variablesElement = el.querySelector('._md-css-variables');\n\n      // Setup JS variables based on our CSS variables\n      var startZIndex = parseInt(window.getComputedStyle(variablesElement).zIndex);\n\n      // Always reset the items to their natural position/state\n      angular.forEach(items, function(item, index) {\n        var styles = item.style,\n          offsetDelay = index * delay;\n\n        styles.opacity = ctrl.isOpen ? 1 : 0;\n        styles.transform = styles.webkitTransform = ctrl.isOpen ? 'scale(1)' : 'scale(0)';\n        styles.transitionDelay = (ctrl.isOpen ? offsetDelay : (items.length - offsetDelay)) + 'ms';\n\n        // Make the items closest to the trigger have the highest z-index\n        styles.zIndex = (items.length - index) + startZIndex;\n      });\n    }\n\n    return {\n      addClass: function(element, className, done) {\n        runAnimation(element);\n        delayDone(done);\n      },\n\n      removeClass: function(element, className, done) {\n        runAnimation(element);\n        delayDone(done);\n      }\n    };\n  }\n})();\n\nngmaterial.components.fabShared = angular.module(\"material.components.fabShared\");"]}