{"version":3,"sources":["slider.js"],"names":[],"mappings":"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","file":"slider-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.slider');\ngoog.require('ngmaterial.core');\n  /**\n   * @ngdoc module\n   * @name material.components.slider\n   */\nSliderDirective['$inject'] = [\"$$rAF\", \"$window\", \"$mdAria\", \"$mdUtil\", \"$mdConstant\", \"$mdTheming\", \"$mdGesture\", \"$parse\", \"$log\", \"$timeout\"];\n  angular.module('material.components.slider', [\n    'material.core'\n  ])\n  .directive('mdSlider', SliderDirective)\n  .directive('mdSliderContainer', SliderContainerDirective);\n\n/**\n * @ngdoc directive\n * @name mdSliderContainer\n * @module material.components.slider\n * @restrict E\n * @description\n * The `<md-slider-container>` contains slider with two other elements.\n *\n *\n * @usage\n * <h4>Normal Mode</h4>\n * <hljs lang=\"html\">\n * </hljs>\n */\nfunction SliderContainerDirective() {\n  return {\n    controller: function () {},\n    compile: function (elem) {\n      var slider = elem.find('md-slider');\n\n      if (!slider) {\n        return;\n      }\n\n      var vertical = slider.attr('md-vertical');\n\n      if (vertical !== undefined) {\n        elem.attr('md-vertical', '');\n      }\n\n      if(!slider.attr('flex')) {\n        slider.attr('flex', '');\n      }\n\n      return function postLink(scope, element, attr, ctrl) {\n        element.addClass('_md');     // private md component indicator for styling\n\n        // We have to manually stop the $watch on ngDisabled because it exists\n        // on the parent scope, and won't be automatically destroyed when\n        // the component is destroyed.\n        function setDisable(value) {\n          element.children().attr('disabled', value);\n          element.find('input').attr('disabled', value);\n        }\n\n        var stopDisabledWatch = angular.noop;\n\n        if (attr.disabled) {\n          setDisable(true);\n        }\n        else if (attr.ngDisabled) {\n          stopDisabledWatch = scope.$watch(attr.ngDisabled, function (value) {\n            setDisable(value);\n          });\n        }\n\n        scope.$on('$destroy', function () {\n          stopDisabledWatch();\n        });\n\n        var initialMaxWidth;\n\n        ctrl.fitInputWidthToTextLength = function (length) {\n          var input = element[0].querySelector('md-input-container');\n\n          if (input) {\n            var computedStyle = getComputedStyle(input);\n            var minWidth = parseInt(computedStyle.minWidth);\n            var padding = parseInt(computedStyle.padding) * 2;\n\n            initialMaxWidth = initialMaxWidth || parseInt(computedStyle.maxWidth);\n            var newMaxWidth = Math.max(initialMaxWidth, minWidth + padding + (minWidth / 2 * length));\n\n            input.style.maxWidth = newMaxWidth + 'px';\n          }\n        };\n      };\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name mdSlider\n * @module material.components.slider\n * @restrict E\n * @description\n * The `<md-slider>` component allows the user to choose from a range of\n * values.\n *\n * As per the [material design spec](http://www.google.com/design/spec/style/color.html#color-ui-color-application)\n * the slider is in the accent color by default. The primary color palette may be used with\n * the `md-primary` class.\n *\n * It has two modes: 'normal' mode, where the user slides between a wide range\n * of values, and 'discrete' mode, where the user slides between only a few\n * select values.\n *\n * To enable discrete mode, add the `md-discrete` attribute to a slider,\n * and use the `step` attribute to change the distance between\n * values the user is allowed to pick.\n *\n * @usage\n * <h4>Normal Mode</h4>\n * <hljs lang=\"html\">\n * <md-slider ng-model=\"myValue\" min=\"5\" max=\"500\">\n * </md-slider>\n * </hljs>\n * <h4>Discrete Mode</h4>\n * <hljs lang=\"html\">\n * <md-slider md-discrete ng-model=\"myDiscreteValue\" step=\"10\" min=\"10\" max=\"130\">\n * </md-slider>\n * </hljs>\n * <h4>Invert Mode</h4>\n * <hljs lang=\"html\">\n * <md-slider md-invert ng-model=\"myValue\" step=\"10\" min=\"10\" max=\"130\">\n * </md-slider>\n * </hljs>\n *\n * @param {boolean=} md-discrete Whether to enable discrete mode.\n * @param {boolean=} md-invert Whether to enable invert mode.\n * @param {number=} step The distance between values the user is allowed to pick. Default 1.\n * @param {number=} min The minimum value the user is allowed to pick. Default 0.\n * @param {number=} max The maximum value the user is allowed to pick. Default 100.\n * @param {number=} round The amount of numbers after the decimal point, maximum is 6 to prevent scientific notation. Default 3.\n */\nfunction SliderDirective($$rAF, $window, $mdAria, $mdUtil, $mdConstant, $mdTheming, $mdGesture, $parse, $log, $timeout) {\n  return {\n    scope: {},\n    require: ['?ngModel', '?^mdSliderContainer'],\n    template:\n      '<div class=\"md-slider-wrapper\">' +\n        '<div class=\"md-slider-content\">' +\n          '<div class=\"md-track-container\">' +\n            '<div class=\"md-track\"></div>' +\n            '<div class=\"md-track md-track-fill\"></div>' +\n            '<div class=\"md-track-ticks\"></div>' +\n          '</div>' +\n          '<div class=\"md-thumb-container\">' +\n            '<div class=\"md-thumb\"></div>' +\n            '<div class=\"md-focus-thumb\"></div>' +\n            '<div class=\"md-focus-ring\"></div>' +\n            '<div class=\"md-sign\">' +\n              '<span class=\"md-thumb-text\"></span>' +\n            '</div>' +\n            '<div class=\"md-disabled-thumb\"></div>' +\n          '</div>' +\n        '</div>' +\n      '</div>',\n    compile: compile\n  };\n\n  // **********************************************************\n  // Private Methods\n  // **********************************************************\n\n  function compile (tElement, tAttrs) {\n    var wrapper = angular.element(tElement[0].getElementsByClassName('md-slider-wrapper'));\n\n    var tabIndex = tAttrs.tabindex || 0;\n    wrapper.attr('tabindex', tabIndex);\n\n    if (tAttrs.disabled || tAttrs.ngDisabled) wrapper.attr('tabindex', -1);\n\n    wrapper.attr('role', 'slider');\n\n    $mdAria.expect(tElement, 'aria-label');\n\n    return postLink;\n  }\n\n  function postLink(scope, element, attr, ctrls) {\n    $mdTheming(element);\n    var ngModelCtrl = ctrls[0] || {\n      // Mock ngModelController if it doesn't exist to give us\n      // the minimum functionality needed\n      $setViewValue: function(val) {\n        this.$viewValue = val;\n        this.$viewChangeListeners.forEach(function(cb) { cb(); });\n      },\n      $parsers: [],\n      $formatters: [],\n      $viewChangeListeners: []\n    };\n\n    var containerCtrl = ctrls[1];\n    var container = angular.element($mdUtil.getClosest(element, '_md-slider-container', true));\n    var isDisabled = attr.ngDisabled ? angular.bind(null, $parse(attr.ngDisabled), scope.$parent) : function () {\n          return element[0].hasAttribute('disabled');\n        };\n\n    var thumb = angular.element(element[0].querySelector('.md-thumb'));\n    var thumbText = angular.element(element[0].querySelector('.md-thumb-text'));\n    var thumbContainer = thumb.parent();\n    var trackContainer = angular.element(element[0].querySelector('.md-track-container'));\n    var activeTrack = angular.element(element[0].querySelector('.md-track-fill'));\n    var tickContainer = angular.element(element[0].querySelector('.md-track-ticks'));\n    var wrapper = angular.element(element[0].getElementsByClassName('md-slider-wrapper'));\n    var content = angular.element(element[0].getElementsByClassName('md-slider-content'));\n    var throttledRefreshDimensions = $mdUtil.throttle(refreshSliderDimensions, 5000);\n\n    // Default values, overridable by attrs\n    var DEFAULT_ROUND = 3;\n    var vertical = angular.isDefined(attr.mdVertical);\n    var discrete = angular.isDefined(attr.mdDiscrete);\n    var invert = angular.isDefined(attr.mdInvert);\n    angular.isDefined(attr.min) ? attr.$observe('min', updateMin) : updateMin(0);\n    angular.isDefined(attr.max) ? attr.$observe('max', updateMax) : updateMax(100);\n    angular.isDefined(attr.step)? attr.$observe('step', updateStep) : updateStep(1);\n    angular.isDefined(attr.round)? attr.$observe('round', updateRound) : updateRound(DEFAULT_ROUND);\n\n    // We have to manually stop the $watch on ngDisabled because it exists\n    // on the parent scope, and won't be automatically destroyed when\n    // the component is destroyed.\n    var stopDisabledWatch = angular.noop;\n    if (attr.ngDisabled) {\n      stopDisabledWatch = scope.$parent.$watch(attr.ngDisabled, updateAriaDisabled);\n    }\n\n    $mdGesture.register(wrapper, 'drag', { horizontal: !vertical });\n\n    scope.mouseActive = false;\n\n    wrapper\n      .on('keydown', keydownListener)\n      .on('mousedown', mouseDownListener)\n      .on('focus', focusListener)\n      .on('blur', blurListener)\n      .on('$md.pressdown', onPressDown)\n      .on('$md.pressup', onPressUp)\n      .on('$md.dragstart', onDragStart)\n      .on('$md.drag', onDrag)\n      .on('$md.dragend', onDragEnd);\n\n    // On resize, recalculate the slider's dimensions and re-render\n    function updateAll() {\n      refreshSliderDimensions();\n      ngModelRender();\n    }\n    setTimeout(updateAll, 0);\n\n    var debouncedUpdateAll = $$rAF.throttle(updateAll);\n    angular.element($window).on('resize', debouncedUpdateAll);\n\n    scope.$on('$destroy', function() {\n      angular.element($window).off('resize', debouncedUpdateAll);\n    });\n\n    ngModelCtrl.$render = ngModelRender;\n    ngModelCtrl.$viewChangeListeners.push(ngModelRender);\n    ngModelCtrl.$formatters.push(minMaxValidator);\n    ngModelCtrl.$formatters.push(stepValidator);\n\n    /**\n     * Attributes\n     */\n    var min;\n    var max;\n    var step;\n    var round;\n    function updateMin(value) {\n      min = parseFloat(value);\n      element.attr('aria-valuemin', value);\n      updateAll();\n    }\n    function updateMax(value) {\n      max = parseFloat(value);\n      element.attr('aria-valuemax', value);\n      updateAll();\n    }\n    function updateStep(value) {\n      step = parseFloat(value);\n    }\n    function updateRound(value) {\n      // Set max round digits to 6, after 6 the input uses scientific notation\n      round = minMaxValidator(parseInt(value), 0, 6);\n    }\n    function updateAriaDisabled() {\n      element.attr('aria-disabled', !!isDisabled());\n    }\n\n    // Draw the ticks with canvas.\n    // The alternative to drawing ticks with canvas is to draw one element for each tick,\n    // which could quickly become a performance bottleneck.\n    var tickCanvas, tickCtx;\n    function redrawTicks() {\n      if (!discrete || isDisabled()) return;\n      if ( angular.isUndefined(step) )         return;\n\n      if ( step <= 0 ) {\n        var msg = 'Slider step value must be greater than zero when in discrete mode';\n        $log.error(msg);\n        throw new Error(msg);\n      }\n\n      var numSteps = Math.floor( (max - min) / step );\n      if (!tickCanvas) {\n        tickCanvas = angular.element('<canvas>').css('position', 'absolute');\n        tickContainer.append(tickCanvas);\n\n        tickCtx = tickCanvas[0].getContext('2d');\n      }\n\n      var dimensions = getSliderDimensions();\n\n      // If `dimensions` doesn't have height and width it might be the first attempt so we will refresh dimensions\n      if (dimensions && !dimensions.height && !dimensions.width) {\n        refreshSliderDimensions();\n        dimensions = sliderDimensions;\n      }\n\n      tickCanvas[0].width = dimensions.width;\n      tickCanvas[0].height = dimensions.height;\n\n      var distance;\n      for (var i = 0; i <= numSteps; i++) {\n        var trackTicksStyle = $window.getComputedStyle(tickContainer[0]);\n        tickCtx.fillStyle = trackTicksStyle.color || 'black';\n\n        distance = Math.floor((vertical ? dimensions.height : dimensions.width) * (i / numSteps));\n\n        tickCtx.fillRect(vertical ? 0 : distance - 1,\n          vertical ? distance - 1 : 0,\n          vertical ? dimensions.width : 2,\n          vertical ? 2 : dimensions.height);\n      }\n    }\n\n    function clearTicks() {\n      if(tickCanvas && tickCtx) {\n        var dimensions = getSliderDimensions();\n        tickCtx.clearRect(0, 0, dimensions.width, dimensions.height);\n      }\n    }\n\n    /**\n     * Refreshing Dimensions\n     */\n    var sliderDimensions = {};\n    refreshSliderDimensions();\n    function refreshSliderDimensions() {\n      sliderDimensions = trackContainer[0].getBoundingClientRect();\n    }\n    function getSliderDimensions() {\n      throttledRefreshDimensions();\n      return sliderDimensions;\n    }\n\n    /**\n     * left/right/up/down arrow listener\n     */\n    function keydownListener(ev) {\n      if (isDisabled()) return;\n\n      var changeAmount;\n      if (vertical ? ev.keyCode === $mdConstant.KEY_CODE.DOWN_ARROW : ev.keyCode === $mdConstant.KEY_CODE.LEFT_ARROW) {\n        changeAmount = -step;\n      } else if (vertical ? ev.keyCode === $mdConstant.KEY_CODE.UP_ARROW : ev.keyCode === $mdConstant.KEY_CODE.RIGHT_ARROW) {\n        changeAmount = step;\n      }\n      changeAmount = invert ? -changeAmount : changeAmount;\n      if (changeAmount) {\n        if (ev.metaKey || ev.ctrlKey || ev.altKey) {\n          changeAmount *= 4;\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n        scope.$evalAsync(function() {\n          setModelValue(ngModelCtrl.$viewValue + changeAmount);\n        });\n      }\n    }\n\n    function mouseDownListener() {\n      redrawTicks();\n\n      scope.mouseActive = true;\n      wrapper.removeClass('md-focused');\n\n      $timeout(function() {\n        scope.mouseActive = false;\n      }, 100);\n    }\n\n    function focusListener() {\n      if (scope.mouseActive === false) {\n        wrapper.addClass('md-focused');\n      }\n    }\n\n    function blurListener() {\n      wrapper.removeClass('md-focused');\n      element.removeClass('md-active');\n      clearTicks();\n    }\n\n    /**\n     * ngModel setters and validators\n     */\n    function setModelValue(value) {\n      ngModelCtrl.$setViewValue( minMaxValidator(stepValidator(value)) );\n    }\n    function ngModelRender() {\n      if (isNaN(ngModelCtrl.$viewValue)) {\n        ngModelCtrl.$viewValue = ngModelCtrl.$modelValue;\n      }\n\n      ngModelCtrl.$viewValue = minMaxValidator(ngModelCtrl.$viewValue);\n\n      var percent = valueToPercent(ngModelCtrl.$viewValue);\n      scope.modelValue = ngModelCtrl.$viewValue;\n      element.attr('aria-valuenow', ngModelCtrl.$viewValue);\n      setSliderPercent(percent);\n      thumbText.text( ngModelCtrl.$viewValue );\n    }\n\n    function minMaxValidator(value, minValue, maxValue) {\n      if (angular.isNumber(value)) {\n        minValue = angular.isNumber(minValue) ? minValue : min;\n        maxValue = angular.isNumber(maxValue) ? maxValue : max;\n\n        return Math.max(minValue, Math.min(maxValue, value));\n      }\n    }\n\n    function stepValidator(value) {\n      if (angular.isNumber(value)) {\n        var formattedValue = (Math.round((value - min) / step) * step + min);\n        formattedValue = (Math.round(formattedValue * Math.pow(10, round)) / Math.pow(10, round));\n\n        if (containerCtrl && containerCtrl.fitInputWidthToTextLength){\n          $mdUtil.debounce(function () {\n            containerCtrl.fitInputWidthToTextLength(formattedValue.toString().length);\n          }, 100)();\n        }\n\n        return formattedValue;\n      }\n    }\n\n    /**\n     * @param percent 0-1\n     */\n    function setSliderPercent(percent) {\n\n      percent = clamp(percent);\n\n      var thumbPosition = (percent * 100) + '%';\n      var activeTrackPercent = invert ? (1 - percent) * 100 + '%' : thumbPosition;\n\n      if (vertical) {\n        thumbContainer.css('bottom', thumbPosition);\n      }\n      else {\n        $mdUtil.bidiProperty(thumbContainer, 'left', 'right', thumbPosition);\n      }\n\n      \n      activeTrack.css(vertical ? 'height' : 'width', activeTrackPercent);\n\n      element.toggleClass((invert ? 'md-max' : 'md-min'), percent === 0);\n      element.toggleClass((invert ? 'md-min' : 'md-max'), percent === 1);\n    }\n\n    /**\n     * Slide listeners\n     */\n    var isDragging = false;\n\n    function onPressDown(ev) {\n      if (isDisabled()) return;\n\n      element.addClass('md-active');\n      element[0].focus();\n      refreshSliderDimensions();\n\n      var exactVal = percentToValue( positionToPercent( vertical ? ev.pointer.y : ev.pointer.x ));\n      var closestVal = minMaxValidator( stepValidator(exactVal) );\n      scope.$apply(function() {\n        setModelValue( closestVal );\n        setSliderPercent( valueToPercent(closestVal));\n      });\n    }\n    function onPressUp(ev) {\n      if (isDisabled()) return;\n\n      element.removeClass('md-dragging');\n\n      var exactVal = percentToValue( positionToPercent( vertical ? ev.pointer.y : ev.pointer.x ));\n      var closestVal = minMaxValidator( stepValidator(exactVal) );\n      scope.$apply(function() {\n        setModelValue(closestVal);\n        ngModelRender();\n      });\n    }\n    function onDragStart(ev) {\n      if (isDisabled()) return;\n      isDragging = true;\n\n      ev.stopPropagation();\n\n      element.addClass('md-dragging');\n      setSliderFromEvent(ev);\n    }\n    function onDrag(ev) {\n      if (!isDragging) return;\n      ev.stopPropagation();\n      setSliderFromEvent(ev);\n    }\n    function onDragEnd(ev) {\n      if (!isDragging) return;\n      ev.stopPropagation();\n      isDragging = false;\n    }\n\n    function setSliderFromEvent(ev) {\n      // While panning discrete, update only the\n      // visual positioning but not the model value.\n      if ( discrete ) adjustThumbPosition( vertical ? ev.pointer.y : ev.pointer.x );\n      else            doSlide( vertical ? ev.pointer.y : ev.pointer.x );\n    }\n\n    /**\n     * Slide the UI by changing the model value\n     * @param x\n     */\n    function doSlide( x ) {\n      scope.$evalAsync( function() {\n        setModelValue( percentToValue( positionToPercent(x) ));\n      });\n    }\n\n    /**\n     * Slide the UI without changing the model (while dragging/panning)\n     * @param x\n     */\n    function adjustThumbPosition( x ) {\n      var exactVal = percentToValue( positionToPercent( x ));\n      var closestVal = minMaxValidator( stepValidator(exactVal) );\n      setSliderPercent( positionToPercent(x) );\n      thumbText.text( closestVal );\n    }\n\n    /**\n    * Clamps the value to be between 0 and 1.\n    * @param {number} value The value to clamp.\n    * @returns {number}\n    */\n    function clamp(value) {\n      return Math.max(0, Math.min(value || 0, 1));\n    }\n\n    /**\n     * Convert position on slider to percentage value of offset from beginning...\n     * @param position\n     * @returns {number}\n     */\n    function positionToPercent( position ) {\n      var offset = vertical ? sliderDimensions.top : sliderDimensions.left;\n      var size = vertical ? sliderDimensions.height : sliderDimensions.width;\n      var calc = (position - offset) / size;\n\n      if (!vertical && $mdUtil.bidi() === 'rtl') {\n        calc = 1 - calc;\n      }\n\n      return Math.max(0, Math.min(1, vertical ? 1 - calc : calc));\n    }\n\n    /**\n     * Convert percentage offset on slide to equivalent model value\n     * @param percent\n     * @returns {*}\n     */\n    function percentToValue( percent ) {\n      var adjustedPercent = invert ? (1 - percent) : percent;\n      return (min + adjustedPercent * (max - min));\n    }\n\n    function valueToPercent( val ) {\n      var percent = (val - min) / (max - min);\n      return invert ? (1 - percent) : percent;\n    }\n  }\n}\n\nngmaterial.components.slider = angular.module(\"material.components.slider\");"]}