{"version":3,"sources":["datepicker.js"],"names":[],"mappings":"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","file":"datepicker-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.datepicker');\ngoog.require('ngmaterial.components.icon');\ngoog.require('ngmaterial.components.virtualRepeat');\ngoog.require('ngmaterial.core');\n/**\n * @ngdoc module\n * @name material.components.datepicker\n * @description Module for the datepicker component.\n */\n\nangular.module('material.components.datepicker', [\n  'material.core',\n  'material.components.icon',\n  'material.components.virtualRepeat'\n]);\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngdoc directive\n   * @name mdCalendar\n   * @module material.components.datepicker\n   *\n   * @param {Date} ng-model The component's model. Should be a Date object.\n   * @param {Date=} md-min-date Expression representing the minimum date.\n   * @param {Date=} md-max-date Expression representing the maximum date.\n   * @param {(function(Date): boolean)=} md-date-filter Function expecting a date and returning a boolean whether it can be selected or not.\n   *\n   * @description\n   * `<md-calendar>` is a component that renders a calendar that can be used to select a date.\n   * It is a part of the `<md-datepicker` pane, however it can also be used on it's own.\n   *\n   * @usage\n   *\n   * <hljs lang=\"html\">\n   *   <md-calendar ng-model=\"birthday\"></md-calendar>\n   * </hljs>\n   */\n  CalendarCtrl['$inject'] = [\"$element\", \"$scope\", \"$$mdDateUtil\", \"$mdUtil\", \"$mdConstant\", \"$mdTheming\", \"$$rAF\", \"$attrs\", \"$mdDateLocale\"];\n  angular.module('material.components.datepicker')\n    .directive('mdCalendar', calendarDirective);\n\n  // POST RELEASE\n  // TODO(jelbourn): Mac Cmd + left / right == Home / End\n  // TODO(jelbourn): Refactor month element creation to use cloneNode (performance).\n  // TODO(jelbourn): Define virtual scrolling constants (compactness) users can override.\n  // TODO(jelbourn): Animated month transition on ng-model change (virtual-repeat)\n  // TODO(jelbourn): Scroll snapping (virtual repeat)\n  // TODO(jelbourn): Remove superfluous row from short months (virtual-repeat)\n  // TODO(jelbourn): Month headers stick to top when scrolling.\n  // TODO(jelbourn): Previous month opacity is lowered when partially scrolled out of view.\n  // TODO(jelbourn): Support md-calendar standalone on a page (as a tabstop w/ aria-live\n  //     announcement and key handling).\n  // Read-only calendar (not just date-picker).\n\n  function calendarDirective() {\n    return {\n      template: function(tElement, tAttr) {\n        // TODO(crisbeto): This is a workaround that allows the calendar to work, without\n        // a datepicker, until issue #8585 gets resolved. It can safely be removed\n        // afterwards. This ensures that the virtual repeater scrolls to the proper place on load by\n        // deferring the execution until the next digest. It's necessary only if the calendar is used\n        // without a datepicker, otherwise it's already wrapped in an ngIf.\n        var extraAttrs = tAttr.hasOwnProperty('ngIf') ? '' : 'ng-if=\"calendarCtrl.isInitialized\"';\n        var template = '' +\n          '<div ng-switch=\"calendarCtrl.currentView\" ' + extraAttrs + '>' +\n            '<md-calendar-year ng-switch-when=\"year\"></md-calendar-year>' +\n            '<md-calendar-month ng-switch-default></md-calendar-month>' +\n          '</div>';\n\n        return template;\n      },\n      scope: {\n        minDate: '=mdMinDate',\n        maxDate: '=mdMaxDate',\n        dateFilter: '=mdDateFilter',\n        _currentView: '@mdCurrentView'\n      },\n      require: ['ngModel', 'mdCalendar'],\n      controller: CalendarCtrl,\n      controllerAs: 'calendarCtrl',\n      bindToController: true,\n      link: function(scope, element, attrs, controllers) {\n        var ngModelCtrl = controllers[0];\n        var mdCalendarCtrl = controllers[1];\n        mdCalendarCtrl.configureNgModel(ngModelCtrl);\n      }\n    };\n  }\n\n  /**\n   * Occasionally the hideVerticalScrollbar method might read an element's\n   * width as 0, because it hasn't been laid out yet. This value will be used\n   * as a fallback, in order to prevent scenarios where the element's width\n   * would otherwise have been set to 0. This value is the \"usual\" width of a\n   * calendar within a floating calendar pane.\n   */\n  var FALLBACK_WIDTH = 340;\n\n  /** Next identifier for calendar instance. */\n  var nextUniqueId = 0;\n\n  /**\n   * Controller for the mdCalendar component.\n   * ngInject @constructor\n   */\n  function CalendarCtrl($element, $scope, $$mdDateUtil, $mdUtil,\n    $mdConstant, $mdTheming, $$rAF, $attrs, $mdDateLocale) {\n\n    $mdTheming($element);\n\n    /** @final {!angular.JQLite} */\n    this.$element = $element;\n\n    /** @final {!angular.Scope} */\n    this.$scope = $scope;\n\n    /** @final */\n    this.dateUtil = $$mdDateUtil;\n\n    /** @final */\n    this.$mdUtil = $mdUtil;\n\n    /** @final */\n    this.keyCode = $mdConstant.KEY_CODE;\n\n    /** @final */\n    this.$$rAF = $$rAF;\n\n    /** @final */\n    this.$mdDateLocale = $mdDateLocale;\n\n    /** @final {Date} */\n    this.today = this.dateUtil.createDateAtMidnight();\n\n    /** @type {!angular.NgModelController} */\n    this.ngModelCtrl = null;\n\n    /** @type {String} Class applied to the selected date cell. */\n    this.SELECTED_DATE_CLASS = 'md-calendar-selected-date';\n\n    /** @type {String} Class applied to the cell for today. */\n    this.TODAY_CLASS = 'md-calendar-date-today';\n\n    /** @type {String} Class applied to the focused cell. */\n    this.FOCUSED_DATE_CLASS = 'md-focus';\n\n    /** @final {number} Unique ID for this calendar instance. */\n    this.id = nextUniqueId++;\n\n    /**\n     * The date that is currently focused or showing in the calendar. This will initially be set\n     * to the ng-model value if set, otherwise to today. It will be updated as the user navigates\n     * to other months. The cell corresponding to the displayDate does not necesarily always have\n     * focus in the document (such as for cases when the user is scrolling the calendar).\n     * @type {Date}\n     */\n    this.displayDate = null;\n\n    /**\n     * The selected date. Keep track of this separately from the ng-model value so that we\n     * can know, when the ng-model value changes, what the previous value was before it's updated\n     * in the component's UI.\n     *\n     * @type {Date}\n     */\n    this.selectedDate = null;\n\n    /**\n     * The first date that can be rendered by the calendar. The default is taken\n     * from the mdDateLocale provider and is limited by the mdMinDate.\n     * @type {Date}\n     */\n    this.firstRenderableDate = null;\n\n    /**\n     * The last date that can be rendered by the calendar. The default comes\n     * from the mdDateLocale provider and is limited by the maxDate.\n     * @type {Date}\n     */\n    this.lastRenderableDate = null;\n\n    /**\n     * Used to toggle initialize the root element in the next digest.\n     * @type {Boolean}\n     */\n    this.isInitialized = false;\n\n    /**\n     * Cache for the  width of the element without a scrollbar. Used to hide the scrollbar later on\n     * and to avoid extra reflows when switching between views.\n     * @type {Number}\n     */\n    this.width = 0;\n\n    /**\n     * Caches the width of the scrollbar in order to be used when hiding it and to avoid extra reflows.\n     * @type {Number}\n     */\n    this.scrollbarWidth = 0;\n\n    // Unless the user specifies so, the calendar should not be a tab stop.\n    // This is necessary because ngAria might add a tabindex to anything with an ng-model\n    // (based on whether or not the user has turned that particular feature on/off).\n    if (!$attrs.tabindex) {\n      $element.attr('tabindex', '-1');\n    }\n\n    var boundKeyHandler = angular.bind(this, this.handleKeyEvent);\n\n\n\n    // If use the md-calendar directly in the body without datepicker,\n    // handleKeyEvent will disable other inputs on the page.\n    // So only apply the handleKeyEvent on the body when the md-calendar inside datepicker,\n    // otherwise apply on the calendar element only.\n\n    var handleKeyElement;\n    if ($element.parent().hasClass('md-datepicker-calendar')) {\n      handleKeyElement = angular.element(document.body);\n    } else {\n      handleKeyElement = $element;\n    }\n\n    // Bind the keydown handler to the body, in order to handle cases where the focused\n    // element gets removed from the DOM and stops propagating click events.\n    handleKeyElement.on('keydown', boundKeyHandler);\n\n    $scope.$on('$destroy', function() {\n      handleKeyElement.off('keydown', boundKeyHandler);\n    });\n\n    // For Angular 1.4 and older, where there are no lifecycle hooks but bindings are pre-assigned,\n    // manually call the $onInit hook.\n    if (angular.version.major === 1 && angular.version.minor <= 4) {\n      this.$onInit();\n    }\n\n  }\n\n  /**\n   * Angular Lifecycle hook for newer Angular versions.\n   * Bindings are not guaranteed to have been assigned in the controller, but they are in the $onInit hook.\n   */\n  CalendarCtrl.prototype.$onInit = function() {\n\n    /**\n     * The currently visible calendar view. Note the prefix on the scope value,\n     * which is necessary, because the datepicker seems to reset the real one value if the\n     * calendar is open, but the value on the datepicker's scope is empty.\n     * @type {String}\n     */\n    this.currentView = this._currentView || 'month';\n\n    var dateLocale = this.$mdDateLocale;\n\n    if (this.minDate && this.minDate > dateLocale.firstRenderableDate) {\n      this.firstRenderableDate = this.minDate;\n    } else {\n      this.firstRenderableDate = dateLocale.firstRenderableDate;\n    }\n\n    if (this.maxDate && this.maxDate < dateLocale.lastRenderableDate) {\n      this.lastRenderableDate = this.maxDate;\n    } else {\n      this.lastRenderableDate = dateLocale.lastRenderableDate;\n    }\n  };\n\n  /**\n   * Sets up the controller's reference to ngModelController.\n   * @param {!angular.NgModelController} ngModelCtrl\n   */\n  CalendarCtrl.prototype.configureNgModel = function(ngModelCtrl) {\n    var self = this;\n\n    self.ngModelCtrl = ngModelCtrl;\n\n    self.$mdUtil.nextTick(function() {\n      self.isInitialized = true;\n    });\n\n    ngModelCtrl.$render = function() {\n      var value = this.$viewValue;\n\n      // Notify the child scopes of any changes.\n      self.$scope.$broadcast('md-calendar-parent-changed', value);\n\n      // Set up the selectedDate if it hasn't been already.\n      if (!self.selectedDate) {\n        self.selectedDate = value;\n      }\n\n      // Also set up the displayDate.\n      if (!self.displayDate) {\n        self.displayDate = self.selectedDate || self.today;\n      }\n    };\n  };\n\n  /**\n   * Sets the ng-model value for the calendar and emits a change event.\n   * @param {Date} date\n   */\n  CalendarCtrl.prototype.setNgModelValue = function(date) {\n    var value = this.dateUtil.createDateAtMidnight(date);\n    this.focus(value);\n    this.$scope.$emit('md-calendar-change', value);\n    this.ngModelCtrl.$setViewValue(value);\n    this.ngModelCtrl.$render();\n    return value;\n  };\n\n  /**\n   * Sets the current view that should be visible in the calendar\n   * @param {string} newView View name to be set.\n   * @param {number|Date} time Date object or a timestamp for the new display date.\n   */\n  CalendarCtrl.prototype.setCurrentView = function(newView, time) {\n    var self = this;\n\n    self.$mdUtil.nextTick(function() {\n      self.currentView = newView;\n\n      if (time) {\n        self.displayDate = angular.isDate(time) ? time : new Date(time);\n      }\n    });\n  };\n\n  /**\n   * Focus the cell corresponding to the given date.\n   * @param {Date} date The date to be focused.\n   */\n  CalendarCtrl.prototype.focus = function(date) {\n    if (this.dateUtil.isValidDate(date)) {\n      var previousFocus = this.$element[0].querySelector('.md-focus');\n      if (previousFocus) {\n        previousFocus.classList.remove(this.FOCUSED_DATE_CLASS);\n      }\n\n      var cellId = this.getDateId(date, this.currentView);\n      var cell = document.getElementById(cellId);\n      if (cell) {\n        cell.classList.add(this.FOCUSED_DATE_CLASS);\n        cell.focus();\n        this.displayDate = date;\n      }\n    } else {\n      var rootElement = this.$element[0].querySelector('[ng-switch]');\n\n      if (rootElement) {\n        rootElement.focus();\n      }\n    }\n  };\n\n  /**\n   * Normalizes the key event into an action name. The action will be broadcast\n   * to the child controllers.\n   * @param {KeyboardEvent} event\n   * @returns {String} The action that should be taken, or null if the key\n   * does not match a calendar shortcut.\n   */\n  CalendarCtrl.prototype.getActionFromKeyEvent = function(event) {\n    var keyCode = this.keyCode;\n\n    switch (event.which) {\n      case keyCode.ENTER: return 'select';\n\n      case keyCode.RIGHT_ARROW: return 'move-right';\n      case keyCode.LEFT_ARROW: return 'move-left';\n\n      // TODO(crisbeto): Might want to reconsider using metaKey, because it maps\n      // to the \"Windows\" key on PC, which opens the start menu or resizes the browser.\n      case keyCode.DOWN_ARROW: return event.metaKey ? 'move-page-down' : 'move-row-down';\n      case keyCode.UP_ARROW: return event.metaKey ? 'move-page-up' : 'move-row-up';\n\n      case keyCode.PAGE_DOWN: return 'move-page-down';\n      case keyCode.PAGE_UP: return 'move-page-up';\n\n      case keyCode.HOME: return 'start';\n      case keyCode.END: return 'end';\n\n      default: return null;\n    }\n  };\n\n  /**\n   * Handles a key event in the calendar with the appropriate action. The action will either\n   * be to select the focused date or to navigate to focus a new date.\n   * @param {KeyboardEvent} event\n   */\n  CalendarCtrl.prototype.handleKeyEvent = function(event) {\n    var self = this;\n\n    this.$scope.$apply(function() {\n      // Capture escape and emit back up so that a wrapping component\n      // (such as a date-picker) can decide to close.\n      if (event.which == self.keyCode.ESCAPE || event.which == self.keyCode.TAB) {\n        self.$scope.$emit('md-calendar-close');\n\n        if (event.which == self.keyCode.TAB) {\n          event.preventDefault();\n        }\n\n        return;\n      }\n\n      // Broadcast the action that any child controllers should take.\n      var action = self.getActionFromKeyEvent(event);\n      if (action) {\n        event.preventDefault();\n        event.stopPropagation();\n        self.$scope.$broadcast('md-calendar-parent-action', action);\n      }\n    });\n  };\n\n  /**\n   * Hides the vertical scrollbar on the calendar scroller of a child controller by\n   * setting the width on the calendar scroller and the `overflow: hidden` wrapper\n   * around the scroller, and then setting a padding-right on the scroller equal\n   * to the width of the browser's scrollbar.\n   *\n   * This will cause a reflow.\n   *\n   * @param {object} childCtrl The child controller whose scrollbar should be hidden.\n   */\n  CalendarCtrl.prototype.hideVerticalScrollbar = function(childCtrl) {\n    var self = this;\n    var element = childCtrl.$element[0];\n    var scrollMask = element.querySelector('.md-calendar-scroll-mask');\n\n    if (self.width > 0) {\n      setWidth();\n    } else {\n      self.$$rAF(function() {\n        var scroller = childCtrl.calendarScroller;\n\n        self.scrollbarWidth = scroller.offsetWidth - scroller.clientWidth;\n        self.width = element.querySelector('table').offsetWidth;\n        setWidth();\n      });\n    }\n\n    function setWidth() {\n      var width = self.width || FALLBACK_WIDTH;\n      var scrollbarWidth = self.scrollbarWidth;\n      var scroller = childCtrl.calendarScroller;\n\n      scrollMask.style.width = width + 'px';\n      scroller.style.width = (width + scrollbarWidth) + 'px';\n      scroller.style.paddingRight = scrollbarWidth + 'px';\n    }\n  };\n\n  /**\n   * Gets an identifier for a date unique to the calendar instance for internal\n   * purposes. Not to be displayed.\n   * @param {Date} date The date for which the id is being generated\n   * @param {string} namespace Namespace for the id. (month, year etc.)\n   * @returns {string}\n   */\n  CalendarCtrl.prototype.getDateId = function(date, namespace) {\n    if (!namespace) {\n      throw new Error('A namespace for the date id has to be specified.');\n    }\n\n    return [\n      'md',\n      this.id,\n      namespace,\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate()\n    ].join('-');\n  };\n\n  /**\n   * Util to trigger an extra digest on a parent scope, in order to to ensure that\n   * any child virtual repeaters have updated. This is necessary, because the virtual\n   * repeater doesn't update the $index the first time around since the content isn't\n   * in place yet. The case, in which this is an issue, is when the repeater has less\n   * than a page of content (e.g. a month or year view has a min or max date).\n   */\n  CalendarCtrl.prototype.updateVirtualRepeat = function() {\n    var scope = this.$scope;\n    var virtualRepeatResizeListener = scope.$on('$md-resize-enable', function() {\n      if (!scope.$$phase) {\n        scope.$apply();\n      }\n\n      virtualRepeatResizeListener();\n    });\n  };\n})();\n\n(function() {\n  'use strict';\n\n  CalendarMonthCtrl['$inject'] = [\"$element\", \"$scope\", \"$animate\", \"$q\", \"$$mdDateUtil\", \"$mdDateLocale\"];\n  angular.module('material.components.datepicker')\n    .directive('mdCalendarMonth', calendarDirective);\n\n  /**\n   * Height of one calendar month tbody. This must be made known to the virtual-repeat and is\n   * subsequently used for scrolling to specific months.\n   */\n  var TBODY_HEIGHT = 265;\n\n  /**\n   * Height of a calendar month with a single row. This is needed to calculate the offset for\n   * rendering an extra month in virtual-repeat that only contains one row.\n   */\n  var TBODY_SINGLE_ROW_HEIGHT = 45;\n\n  /** Private directive that represents a list of months inside the calendar. */\n  function calendarDirective() {\n    return {\n      template:\n        '<table aria-hidden=\"true\" class=\"md-calendar-day-header\"><thead></thead></table>' +\n        '<div class=\"md-calendar-scroll-mask\">' +\n        '<md-virtual-repeat-container class=\"md-calendar-scroll-container\" ' +\n              'md-offset-size=\"' + (TBODY_SINGLE_ROW_HEIGHT - TBODY_HEIGHT) + '\">' +\n            '<table role=\"grid\" tabindex=\"0\" class=\"md-calendar\" aria-readonly=\"true\">' +\n              '<tbody ' +\n                  'md-calendar-month-body ' +\n                  'role=\"rowgroup\" ' +\n                  'md-virtual-repeat=\"i in monthCtrl.items\" ' +\n                  'md-month-offset=\"$index\" ' +\n                  'class=\"md-calendar-month\" ' +\n                  'md-start-index=\"monthCtrl.getSelectedMonthIndex()\" ' +\n                  'md-item-size=\"' + TBODY_HEIGHT + '\">' +\n\n                // The <tr> ensures that the <tbody> will always have the\n                // proper height, even if it's empty. If it's content is\n                // compiled, the <tr> will be overwritten.\n                '<tr aria-hidden=\"true\" style=\"height:' + TBODY_HEIGHT + 'px;\"></tr>' +\n              '</tbody>' +\n            '</table>' +\n          '</md-virtual-repeat-container>' +\n        '</div>',\n      require: ['^^mdCalendar', 'mdCalendarMonth'],\n      controller: CalendarMonthCtrl,\n      controllerAs: 'monthCtrl',\n      bindToController: true,\n      link: function(scope, element, attrs, controllers) {\n        var calendarCtrl = controllers[0];\n        var monthCtrl = controllers[1];\n        monthCtrl.initialize(calendarCtrl);\n      }\n    };\n  }\n\n  /**\n   * Controller for the calendar month component.\n   * ngInject @constructor\n   */\n  function CalendarMonthCtrl($element, $scope, $animate, $q,\n    $$mdDateUtil, $mdDateLocale) {\n\n    /** @final {!angular.JQLite} */\n    this.$element = $element;\n\n    /** @final {!angular.Scope} */\n    this.$scope = $scope;\n\n    /** @final {!angular.$animate} */\n    this.$animate = $animate;\n\n    /** @final {!angular.$q} */\n    this.$q = $q;\n\n    /** @final */\n    this.dateUtil = $$mdDateUtil;\n\n    /** @final */\n    this.dateLocale = $mdDateLocale;\n\n    /** @final {HTMLElement} */\n    this.calendarScroller = $element[0].querySelector('.md-virtual-repeat-scroller');\n\n    /** @type {boolean} */\n    this.isInitialized = false;\n\n    /** @type {boolean} */\n    this.isMonthTransitionInProgress = false;\n\n    var self = this;\n\n    /**\n     * Handles a click event on a date cell.\n     * Created here so that every cell can use the same function instance.\n     * @this {HTMLTableCellElement} The cell that was clicked.\n     */\n    this.cellClickHandler = function() {\n      var timestamp = $$mdDateUtil.getTimestampFromNode(this);\n      self.$scope.$apply(function() {\n        self.calendarCtrl.setNgModelValue(timestamp);\n      });\n    };\n\n    /**\n     * Handles click events on the month headers. Switches\n     * the calendar to the year view.\n     * @this {HTMLTableCellElement} The cell that was clicked.\n     */\n    this.headerClickHandler = function() {\n      self.calendarCtrl.setCurrentView('year', $$mdDateUtil.getTimestampFromNode(this));\n    };\n  }\n\n  /*** Initialization ***/\n\n  /**\n   * Initialize the controller by saving a reference to the calendar and\n   * setting up the object that will be iterated by the virtual repeater.\n   */\n  CalendarMonthCtrl.prototype.initialize = function(calendarCtrl) {\n    /**\n     * Dummy array-like object for virtual-repeat to iterate over. The length is the total\n     * number of months that can be viewed. We add 2 months: one to include the current month\n     * and one for the last dummy month.\n     *\n     * This is shorter than ideal because of a (potential) Firefox bug\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.\n     */\n\n    this.items = {\n      length: this.dateUtil.getMonthDistance(\n        calendarCtrl.firstRenderableDate,\n        calendarCtrl.lastRenderableDate\n      ) + 2\n    };\n\n    this.calendarCtrl = calendarCtrl;\n    this.attachScopeListeners();\n    calendarCtrl.updateVirtualRepeat();\n\n    // Fire the initial render, since we might have missed it the first time it fired.\n    calendarCtrl.ngModelCtrl && calendarCtrl.ngModelCtrl.$render();\n  };\n\n  /**\n   * Gets the \"index\" of the currently selected date as it would be in the virtual-repeat.\n   * @returns {number}\n   */\n  CalendarMonthCtrl.prototype.getSelectedMonthIndex = function() {\n    var calendarCtrl = this.calendarCtrl;\n\n    return this.dateUtil.getMonthDistance(\n      calendarCtrl.firstRenderableDate,\n      calendarCtrl.displayDate || calendarCtrl.selectedDate || calendarCtrl.today\n    );\n  };\n\n  /**\n   * Change the selected date in the calendar (ngModel value has already been changed).\n   * @param {Date} date\n   */\n  CalendarMonthCtrl.prototype.changeSelectedDate = function(date) {\n    var self = this;\n    var calendarCtrl = self.calendarCtrl;\n    var previousSelectedDate = calendarCtrl.selectedDate;\n    calendarCtrl.selectedDate = date;\n\n    this.changeDisplayDate(date).then(function() {\n      var selectedDateClass = calendarCtrl.SELECTED_DATE_CLASS;\n      var namespace = 'month';\n\n      // Remove the selected class from the previously selected date, if any.\n      if (previousSelectedDate) {\n        var prevDateCell = document.getElementById(calendarCtrl.getDateId(previousSelectedDate, namespace));\n        if (prevDateCell) {\n          prevDateCell.classList.remove(selectedDateClass);\n          prevDateCell.setAttribute('aria-selected', 'false');\n        }\n      }\n\n      // Apply the select class to the new selected date if it is set.\n      if (date) {\n        var dateCell = document.getElementById(calendarCtrl.getDateId(date, namespace));\n        if (dateCell) {\n          dateCell.classList.add(selectedDateClass);\n          dateCell.setAttribute('aria-selected', 'true');\n        }\n      }\n    });\n  };\n\n  /**\n   * Change the date that is being shown in the calendar. If the given date is in a different\n   * month, the displayed month will be transitioned.\n   * @param {Date} date\n   */\n  CalendarMonthCtrl.prototype.changeDisplayDate = function(date) {\n    // Initialization is deferred until this function is called because we want to reflect\n    // the starting value of ngModel.\n    if (!this.isInitialized) {\n      this.buildWeekHeader();\n      this.calendarCtrl.hideVerticalScrollbar(this);\n      this.isInitialized = true;\n      return this.$q.when();\n    }\n\n    // If trying to show an invalid date or a transition is in progress, do nothing.\n    if (!this.dateUtil.isValidDate(date) || this.isMonthTransitionInProgress) {\n      return this.$q.when();\n    }\n\n    this.isMonthTransitionInProgress = true;\n    var animationPromise = this.animateDateChange(date);\n\n    this.calendarCtrl.displayDate = date;\n\n    var self = this;\n    animationPromise.then(function() {\n      self.isMonthTransitionInProgress = false;\n    });\n\n    return animationPromise;\n  };\n\n  /**\n   * Animates the transition from the calendar's current month to the given month.\n   * @param {Date} date\n   * @returns {angular.$q.Promise} The animation promise.\n   */\n  CalendarMonthCtrl.prototype.animateDateChange = function(date) {\n    if (this.dateUtil.isValidDate(date)) {\n      var monthDistance = this.dateUtil.getMonthDistance(this.calendarCtrl.firstRenderableDate, date);\n      this.calendarScroller.scrollTop = monthDistance * TBODY_HEIGHT;\n    }\n\n    return this.$q.when();\n  };\n\n  /**\n   * Builds and appends a day-of-the-week header to the calendar.\n   * This should only need to be called once during initialization.\n   */\n  CalendarMonthCtrl.prototype.buildWeekHeader = function() {\n    var firstDayOfWeek = this.dateLocale.firstDayOfWeek;\n    var shortDays = this.dateLocale.shortDays;\n\n    var row = document.createElement('tr');\n    for (var i = 0; i < 7; i++) {\n      var th = document.createElement('th');\n      th.textContent = shortDays[(i + firstDayOfWeek) % 7];\n      row.appendChild(th);\n    }\n\n    this.$element.find('thead').append(row);\n  };\n\n  /**\n   * Attaches listeners for the scope events that are broadcast by the calendar.\n   */\n  CalendarMonthCtrl.prototype.attachScopeListeners = function() {\n    var self = this;\n\n    self.$scope.$on('md-calendar-parent-changed', function(event, value) {\n      self.changeSelectedDate(value);\n    });\n\n    self.$scope.$on('md-calendar-parent-action', angular.bind(this, this.handleKeyEvent));\n  };\n\n  /**\n   * Handles the month-specific keyboard interactions.\n   * @param {Object} event Scope event object passed by the calendar.\n   * @param {String} action Action, corresponding to the key that was pressed.\n   */\n  CalendarMonthCtrl.prototype.handleKeyEvent = function(event, action) {\n    var calendarCtrl = this.calendarCtrl;\n    var displayDate = calendarCtrl.displayDate;\n\n    if (action === 'select') {\n      calendarCtrl.setNgModelValue(displayDate);\n    } else {\n      var date = null;\n      var dateUtil = this.dateUtil;\n\n      switch (action) {\n        case 'move-right': date = dateUtil.incrementDays(displayDate, 1); break;\n        case 'move-left': date = dateUtil.incrementDays(displayDate, -1); break;\n\n        case 'move-page-down': date = dateUtil.incrementMonths(displayDate, 1); break;\n        case 'move-page-up': date = dateUtil.incrementMonths(displayDate, -1); break;\n\n        case 'move-row-down': date = dateUtil.incrementDays(displayDate, 7); break;\n        case 'move-row-up': date = dateUtil.incrementDays(displayDate, -7); break;\n\n        case 'start': date = dateUtil.getFirstDateOfMonth(displayDate); break;\n        case 'end': date = dateUtil.getLastDateOfMonth(displayDate); break;\n      }\n\n      if (date) {\n        date = this.dateUtil.clampDate(date, calendarCtrl.minDate, calendarCtrl.maxDate);\n\n        this.changeDisplayDate(date).then(function() {\n          calendarCtrl.focus(date);\n        });\n      }\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n\n  mdCalendarMonthBodyDirective['$inject'] = [\"$compile\", \"$$mdSvgRegistry\"];\n  CalendarMonthBodyCtrl['$inject'] = [\"$element\", \"$$mdDateUtil\", \"$mdDateLocale\"];\n  angular.module('material.components.datepicker')\n      .directive('mdCalendarMonthBody', mdCalendarMonthBodyDirective);\n\n  /**\n   * Private directive consumed by md-calendar-month. Having this directive lets the calender use\n   * md-virtual-repeat and also cleanly separates the month DOM construction functions from\n   * the rest of the calendar controller logic.\n   * ngInject\n   */\n  function mdCalendarMonthBodyDirective($compile, $$mdSvgRegistry) {\n    var ARROW_ICON = $compile('<md-icon md-svg-src=\"' +\n      $$mdSvgRegistry.mdTabsArrow + '\"></md-icon>')({})[0];\n\n    return {\n      require: ['^^mdCalendar', '^^mdCalendarMonth', 'mdCalendarMonthBody'],\n      scope: { offset: '=mdMonthOffset' },\n      controller: CalendarMonthBodyCtrl,\n      controllerAs: 'mdMonthBodyCtrl',\n      bindToController: true,\n      link: function(scope, element, attrs, controllers) {\n        var calendarCtrl = controllers[0];\n        var monthCtrl = controllers[1];\n        var monthBodyCtrl = controllers[2];\n\n        monthBodyCtrl.calendarCtrl = calendarCtrl;\n        monthBodyCtrl.monthCtrl = monthCtrl;\n        monthBodyCtrl.arrowIcon = ARROW_ICON.cloneNode(true);\n\n        // The virtual-repeat re-uses the same DOM elements, so there are only a limited number\n        // of repeated items that are linked, and then those elements have their bindings updated.\n        // Since the months are not generated by bindings, we simply regenerate the entire thing\n        // when the binding (offset) changes.\n        scope.$watch(function() { return monthBodyCtrl.offset; }, function(offset) {\n          if (angular.isNumber(offset)) {\n            monthBodyCtrl.generateContent();\n          }\n        });\n      }\n    };\n  }\n\n  /**\n   * Controller for a single calendar month.\n   * ngInject @constructor\n   */\n  function CalendarMonthBodyCtrl($element, $$mdDateUtil, $mdDateLocale) {\n    /** @final {!angular.JQLite} */\n    this.$element = $element;\n\n    /** @final */\n    this.dateUtil = $$mdDateUtil;\n\n    /** @final */\n    this.dateLocale = $mdDateLocale;\n\n    /** @type {Object} Reference to the month view. */\n    this.monthCtrl = null;\n\n    /** @type {Object} Reference to the calendar. */\n    this.calendarCtrl = null;\n\n    /**\n     * Number of months from the start of the month \"items\" that the currently rendered month\n     * occurs. Set via angular data binding.\n     * @type {number}\n     */\n    this.offset = null;\n\n    /**\n     * Date cell to focus after appending the month to the document.\n     * @type {HTMLElement}\n     */\n    this.focusAfterAppend = null;\n  }\n\n  /** Generate and append the content for this month to the directive element. */\n  CalendarMonthBodyCtrl.prototype.generateContent = function() {\n    var date = this.dateUtil.incrementMonths(this.calendarCtrl.firstRenderableDate, this.offset);\n\n    this.$element\n      .empty()\n      .append(this.buildCalendarForMonth(date));\n\n    if (this.focusAfterAppend) {\n      this.focusAfterAppend.classList.add(this.calendarCtrl.FOCUSED_DATE_CLASS);\n      this.focusAfterAppend.focus();\n      this.focusAfterAppend = null;\n    }\n  };\n\n  /**\n   * Creates a single cell to contain a date in the calendar with all appropriate\n   * attributes and classes added. If a date is given, the cell content will be set\n   * based on the date.\n   * @param {Date=} opt_date\n   * @returns {HTMLElement}\n   */\n  CalendarMonthBodyCtrl.prototype.buildDateCell = function(opt_date) {\n    var monthCtrl = this.monthCtrl;\n    var calendarCtrl = this.calendarCtrl;\n\n    // TODO(jelbourn): cloneNode is likely a faster way of doing this.\n    var cell = document.createElement('td');\n    cell.tabIndex = -1;\n    cell.classList.add('md-calendar-date');\n    cell.setAttribute('role', 'gridcell');\n\n    if (opt_date) {\n      cell.setAttribute('tabindex', '-1');\n      cell.setAttribute('aria-label', this.dateLocale.longDateFormatter(opt_date));\n      cell.id = calendarCtrl.getDateId(opt_date, 'month');\n\n      // Use `data-timestamp` attribute because IE10 does not support the `dataset` property.\n      cell.setAttribute('data-timestamp', opt_date.getTime());\n\n      // TODO(jelourn): Doing these comparisons for class addition during generation might be slow.\n      // It may be better to finish the construction and then query the node and add the class.\n      if (this.dateUtil.isSameDay(opt_date, calendarCtrl.today)) {\n        cell.classList.add(calendarCtrl.TODAY_CLASS);\n      }\n\n      if (this.dateUtil.isValidDate(calendarCtrl.selectedDate) &&\n          this.dateUtil.isSameDay(opt_date, calendarCtrl.selectedDate)) {\n        cell.classList.add(calendarCtrl.SELECTED_DATE_CLASS);\n        cell.setAttribute('aria-selected', 'true');\n      }\n\n      var cellText = this.dateLocale.dates[opt_date.getDate()];\n\n      if (this.isDateEnabled(opt_date)) {\n        // Add a indicator for select, hover, and focus states.\n        var selectionIndicator = document.createElement('span');\n        selectionIndicator.classList.add('md-calendar-date-selection-indicator');\n        selectionIndicator.textContent = cellText;\n        cell.appendChild(selectionIndicator);\n        cell.addEventListener('click', monthCtrl.cellClickHandler);\n\n        if (calendarCtrl.displayDate && this.dateUtil.isSameDay(opt_date, calendarCtrl.displayDate)) {\n          this.focusAfterAppend = cell;\n        }\n      } else {\n        cell.classList.add('md-calendar-date-disabled');\n        cell.textContent = cellText;\n      }\n    }\n\n    return cell;\n  };\n\n  /**\n   * Check whether date is in range and enabled\n   * @param {Date=} opt_date\n   * @return {boolean} Whether the date is enabled.\n   */\n  CalendarMonthBodyCtrl.prototype.isDateEnabled = function(opt_date) {\n    return this.dateUtil.isDateWithinRange(opt_date,\n          this.calendarCtrl.minDate, this.calendarCtrl.maxDate) &&\n          (!angular.isFunction(this.calendarCtrl.dateFilter)\n           || this.calendarCtrl.dateFilter(opt_date));\n  };\n\n  /**\n   * Builds a `tr` element for the calendar grid.\n   * @param rowNumber The week number within the month.\n   * @returns {HTMLElement}\n   */\n  CalendarMonthBodyCtrl.prototype.buildDateRow = function(rowNumber) {\n    var row = document.createElement('tr');\n    row.setAttribute('role', 'row');\n\n    // Because of an NVDA bug (with Firefox), the row needs an aria-label in order\n    // to prevent the entire row being read aloud when the user moves between rows.\n    // See http://community.nvda-project.org/ticket/4643.\n    row.setAttribute('aria-label', this.dateLocale.weekNumberFormatter(rowNumber));\n\n    return row;\n  };\n\n  /**\n   * Builds the <tbody> content for the given date's month.\n   * @param {Date=} opt_dateInMonth\n   * @returns {DocumentFragment} A document fragment containing the <tr> elements.\n   */\n  CalendarMonthBodyCtrl.prototype.buildCalendarForMonth = function(opt_dateInMonth) {\n    var date = this.dateUtil.isValidDate(opt_dateInMonth) ? opt_dateInMonth : new Date();\n\n    var firstDayOfMonth = this.dateUtil.getFirstDateOfMonth(date);\n    var firstDayOfTheWeek = this.getLocaleDay_(firstDayOfMonth);\n    var numberOfDaysInMonth = this.dateUtil.getNumberOfDaysInMonth(date);\n\n    // Store rows for the month in a document fragment so that we can append them all at once.\n    var monthBody = document.createDocumentFragment();\n\n    var rowNumber = 1;\n    var row = this.buildDateRow(rowNumber);\n    monthBody.appendChild(row);\n\n    // If this is the final month in the list of items, only the first week should render,\n    // so we should return immediately after the first row is complete and has been\n    // attached to the body.\n    var isFinalMonth = this.offset === this.monthCtrl.items.length - 1;\n\n    // Add a label for the month. If the month starts on a Sun/Mon/Tues, the month label\n    // goes on a row above the first of the month. Otherwise, the month label takes up the first\n    // two cells of the first row.\n    var blankCellOffset = 0;\n    var monthLabelCell = document.createElement('td');\n    var monthLabelCellContent = document.createElement('span');\n\n    monthLabelCellContent.textContent = this.dateLocale.monthHeaderFormatter(date);\n    monthLabelCell.appendChild(monthLabelCellContent);\n    monthLabelCell.classList.add('md-calendar-month-label');\n    // If the entire month is after the max date, render the label as a disabled state.\n    if (this.calendarCtrl.maxDate && firstDayOfMonth > this.calendarCtrl.maxDate) {\n      monthLabelCell.classList.add('md-calendar-month-label-disabled');\n    } else {\n      monthLabelCell.addEventListener('click', this.monthCtrl.headerClickHandler);\n      monthLabelCell.setAttribute('data-timestamp', firstDayOfMonth.getTime());\n      monthLabelCell.setAttribute('aria-label', this.dateLocale.monthFormatter(date));\n      monthLabelCell.appendChild(this.arrowIcon.cloneNode(true));\n    }\n\n    if (firstDayOfTheWeek <= 2) {\n      monthLabelCell.setAttribute('colspan', '7');\n\n      var monthLabelRow = this.buildDateRow();\n      monthLabelRow.appendChild(monthLabelCell);\n      monthBody.insertBefore(monthLabelRow, row);\n\n      if (isFinalMonth) {\n        return monthBody;\n      }\n    } else {\n      blankCellOffset = 3;\n      monthLabelCell.setAttribute('colspan', '3');\n      row.appendChild(monthLabelCell);\n    }\n\n    // Add a blank cell for each day of the week that occurs before the first of the month.\n    // For example, if the first day of the month is a Tuesday, add blank cells for Sun and Mon.\n    // The blankCellOffset is needed in cases where the first N cells are used by the month label.\n    for (var i = blankCellOffset; i < firstDayOfTheWeek; i++) {\n      row.appendChild(this.buildDateCell());\n    }\n\n    // Add a cell for each day of the month, keeping track of the day of the week so that\n    // we know when to start a new row.\n    var dayOfWeek = firstDayOfTheWeek;\n    var iterationDate = firstDayOfMonth;\n    for (var d = 1; d <= numberOfDaysInMonth; d++) {\n      // If we've reached the end of the week, start a new row.\n      if (dayOfWeek === 7) {\n        // We've finished the first row, so we're done if this is the final month.\n        if (isFinalMonth) {\n          return monthBody;\n        }\n        dayOfWeek = 0;\n        rowNumber++;\n        row = this.buildDateRow(rowNumber);\n        monthBody.appendChild(row);\n      }\n\n      iterationDate.setDate(d);\n      var cell = this.buildDateCell(iterationDate);\n      row.appendChild(cell);\n\n      dayOfWeek++;\n    }\n\n    // Ensure that the last row of the month has 7 cells.\n    while (row.childNodes.length < 7) {\n      row.appendChild(this.buildDateCell());\n    }\n\n    // Ensure that all months have 6 rows. This is necessary for now because the virtual-repeat\n    // requires that all items have exactly the same height.\n    while (monthBody.childNodes.length < 6) {\n      var whitespaceRow = this.buildDateRow();\n      for (var j = 0; j < 7; j++) {\n        whitespaceRow.appendChild(this.buildDateCell());\n      }\n      monthBody.appendChild(whitespaceRow);\n    }\n\n    return monthBody;\n  };\n\n  /**\n   * Gets the day-of-the-week index for a date for the current locale.\n   * @private\n   * @param {Date} date\n   * @returns {number} The column index of the date in the calendar.\n   */\n  CalendarMonthBodyCtrl.prototype.getLocaleDay_ = function(date) {\n    return (date.getDay() + (7 - this.dateLocale.firstDayOfWeek)) % 7;\n  };\n})();\n\n(function() {\n  'use strict';\n\n  CalendarYearCtrl['$inject'] = [\"$element\", \"$scope\", \"$animate\", \"$q\", \"$$mdDateUtil\"];\n  angular.module('material.components.datepicker')\n    .directive('mdCalendarYear', calendarDirective);\n\n  /**\n   * Height of one calendar year tbody. This must be made known to the virtual-repeat and is\n   * subsequently used for scrolling to specific years.\n   */\n  var TBODY_HEIGHT = 88;\n\n  /** Private component, representing a list of years in the calendar. */\n  function calendarDirective() {\n    return {\n      template:\n        '<div class=\"md-calendar-scroll-mask\">' +\n          '<md-virtual-repeat-container class=\"md-calendar-scroll-container\">' +\n            '<table role=\"grid\" tabindex=\"0\" class=\"md-calendar\" aria-readonly=\"true\">' +\n              '<tbody ' +\n                  'md-calendar-year-body ' +\n                  'role=\"rowgroup\" ' +\n                  'md-virtual-repeat=\"i in yearCtrl.items\" ' +\n                  'md-year-offset=\"$index\" class=\"md-calendar-year\" ' +\n                  'md-start-index=\"yearCtrl.getFocusedYearIndex()\" ' +\n                  'md-item-size=\"' + TBODY_HEIGHT + '\">' +\n                // The <tr> ensures that the <tbody> will have the proper\n                // height, even though it may be empty.\n                '<tr aria-hidden=\"true\" style=\"height:' + TBODY_HEIGHT + 'px;\"></tr>' +\n              '</tbody>' +\n            '</table>' +\n          '</md-virtual-repeat-container>' +\n        '</div>',\n      require: ['^^mdCalendar', 'mdCalendarYear'],\n      controller: CalendarYearCtrl,\n      controllerAs: 'yearCtrl',\n      bindToController: true,\n      link: function(scope, element, attrs, controllers) {\n        var calendarCtrl = controllers[0];\n        var yearCtrl = controllers[1];\n        yearCtrl.initialize(calendarCtrl);\n      }\n    };\n  }\n\n  /**\n   * Controller for the mdCalendar component.\n   * ngInject @constructor\n   */\n  function CalendarYearCtrl($element, $scope, $animate, $q, $$mdDateUtil) {\n\n    /** @final {!angular.JQLite} */\n    this.$element = $element;\n\n    /** @final {!angular.Scope} */\n    this.$scope = $scope;\n\n    /** @final {!angular.$animate} */\n    this.$animate = $animate;\n\n    /** @final {!angular.$q} */\n    this.$q = $q;\n\n    /** @final */\n    this.dateUtil = $$mdDateUtil;\n\n    /** @final {HTMLElement} */\n    this.calendarScroller = $element[0].querySelector('.md-virtual-repeat-scroller');\n\n    /** @type {boolean} */\n    this.isInitialized = false;\n\n    /** @type {boolean} */\n    this.isMonthTransitionInProgress = false;\n\n    var self = this;\n\n    /**\n     * Handles a click event on a date cell.\n     * Created here so that every cell can use the same function instance.\n     * @this {HTMLTableCellElement} The cell that was clicked.\n     */\n    this.cellClickHandler = function() {\n      self.calendarCtrl.setCurrentView('month', $$mdDateUtil.getTimestampFromNode(this));\n    };\n  }\n\n  /**\n   * Initialize the controller by saving a reference to the calendar and\n   * setting up the object that will be iterated by the virtual repeater.\n   */\n  CalendarYearCtrl.prototype.initialize = function(calendarCtrl) {\n    /**\n     * Dummy array-like object for virtual-repeat to iterate over. The length is the total\n     * number of years that can be viewed. We add 1 extra in order to include the current year.\n     */\n    this.items = {\n      length: this.dateUtil.getYearDistance(\n        calendarCtrl.firstRenderableDate,\n        calendarCtrl.lastRenderableDate\n      ) + 1\n    };\n\n    this.calendarCtrl = calendarCtrl;\n    this.attachScopeListeners();\n    calendarCtrl.updateVirtualRepeat();\n\n    // Fire the initial render, since we might have missed it the first time it fired.\n    calendarCtrl.ngModelCtrl && calendarCtrl.ngModelCtrl.$render();\n  };\n\n  /**\n   * Gets the \"index\" of the currently selected date as it would be in the virtual-repeat.\n   * @returns {number}\n   */\n  CalendarYearCtrl.prototype.getFocusedYearIndex = function() {\n    var calendarCtrl = this.calendarCtrl;\n\n    return this.dateUtil.getYearDistance(\n      calendarCtrl.firstRenderableDate,\n      calendarCtrl.displayDate || calendarCtrl.selectedDate || calendarCtrl.today\n    );\n  };\n\n  /**\n   * Change the date that is highlighted in the calendar.\n   * @param {Date} date\n   */\n  CalendarYearCtrl.prototype.changeDate = function(date) {\n    // Initialization is deferred until this function is called because we want to reflect\n    // the starting value of ngModel.\n    if (!this.isInitialized) {\n      this.calendarCtrl.hideVerticalScrollbar(this);\n      this.isInitialized = true;\n      return this.$q.when();\n    } else if (this.dateUtil.isValidDate(date) && !this.isMonthTransitionInProgress) {\n      var self = this;\n      var animationPromise = this.animateDateChange(date);\n\n      self.isMonthTransitionInProgress = true;\n      self.calendarCtrl.displayDate = date;\n\n      return animationPromise.then(function() {\n        self.isMonthTransitionInProgress = false;\n      });\n    }\n  };\n\n  /**\n   * Animates the transition from the calendar's current month to the given month.\n   * @param {Date} date\n   * @returns {angular.$q.Promise} The animation promise.\n   */\n  CalendarYearCtrl.prototype.animateDateChange = function(date) {\n    if (this.dateUtil.isValidDate(date)) {\n      var monthDistance = this.dateUtil.getYearDistance(this.calendarCtrl.firstRenderableDate, date);\n      this.calendarScroller.scrollTop = monthDistance * TBODY_HEIGHT;\n    }\n\n    return this.$q.when();\n  };\n\n  /**\n   * Handles the year-view-specific keyboard interactions.\n   * @param {Object} event Scope event object passed by the calendar.\n   * @param {String} action Action, corresponding to the key that was pressed.\n   */\n  CalendarYearCtrl.prototype.handleKeyEvent = function(event, action) {\n    var calendarCtrl = this.calendarCtrl;\n    var displayDate = calendarCtrl.displayDate;\n\n    if (action === 'select') {\n      this.changeDate(displayDate).then(function() {\n        calendarCtrl.setCurrentView('month', displayDate);\n        calendarCtrl.focus(displayDate);\n      });\n    } else {\n      var date = null;\n      var dateUtil = this.dateUtil;\n\n      switch (action) {\n        case 'move-right': date = dateUtil.incrementMonths(displayDate, 1); break;\n        case 'move-left': date = dateUtil.incrementMonths(displayDate, -1); break;\n\n        case 'move-row-down': date = dateUtil.incrementMonths(displayDate, 6); break;\n        case 'move-row-up': date = dateUtil.incrementMonths(displayDate, -6); break;\n      }\n\n      if (date) {\n        var min = calendarCtrl.minDate ? dateUtil.getFirstDateOfMonth(calendarCtrl.minDate) : null;\n        var max = calendarCtrl.maxDate ? dateUtil.getFirstDateOfMonth(calendarCtrl.maxDate) : null;\n        date = dateUtil.getFirstDateOfMonth(this.dateUtil.clampDate(date, min, max));\n\n        this.changeDate(date).then(function() {\n          calendarCtrl.focus(date);\n        });\n      }\n    }\n  };\n\n  /**\n   * Attaches listeners for the scope events that are broadcast by the calendar.\n   */\n  CalendarYearCtrl.prototype.attachScopeListeners = function() {\n    var self = this;\n\n    self.$scope.$on('md-calendar-parent-changed', function(event, value) {\n      self.changeDate(value);\n    });\n\n    self.$scope.$on('md-calendar-parent-action', angular.bind(self, self.handleKeyEvent));\n  };\n})();\n\n(function() {\n  'use strict';\n\n  CalendarYearBodyCtrl['$inject'] = [\"$element\", \"$$mdDateUtil\", \"$mdDateLocale\"];\n  angular.module('material.components.datepicker')\n      .directive('mdCalendarYearBody', mdCalendarYearDirective);\n\n  /**\n   * Private component, consumed by the md-calendar-year, which separates the DOM construction logic\n   * and allows for the year view to use md-virtual-repeat.\n   */\n  function mdCalendarYearDirective() {\n    return {\n      require: ['^^mdCalendar', '^^mdCalendarYear', 'mdCalendarYearBody'],\n      scope: { offset: '=mdYearOffset' },\n      controller: CalendarYearBodyCtrl,\n      controllerAs: 'mdYearBodyCtrl',\n      bindToController: true,\n      link: function(scope, element, attrs, controllers) {\n        var calendarCtrl = controllers[0];\n        var yearCtrl = controllers[1];\n        var yearBodyCtrl = controllers[2];\n\n        yearBodyCtrl.calendarCtrl = calendarCtrl;\n        yearBodyCtrl.yearCtrl = yearCtrl;\n\n        scope.$watch(function() { return yearBodyCtrl.offset; }, function(offset) {\n          if (angular.isNumber(offset)) {\n            yearBodyCtrl.generateContent();\n          }\n        });\n      }\n    };\n  }\n\n  /**\n   * Controller for a single year.\n   * ngInject @constructor\n   */\n  function CalendarYearBodyCtrl($element, $$mdDateUtil, $mdDateLocale) {\n    /** @final {!angular.JQLite} */\n    this.$element = $element;\n\n    /** @final */\n    this.dateUtil = $$mdDateUtil;\n\n    /** @final */\n    this.dateLocale = $mdDateLocale;\n\n    /** @type {Object} Reference to the calendar. */\n    this.calendarCtrl = null;\n\n    /** @type {Object} Reference to the year view. */\n    this.yearCtrl = null;\n\n    /**\n     * Number of months from the start of the month \"items\" that the currently rendered month\n     * occurs. Set via angular data binding.\n     * @type {number}\n     */\n    this.offset = null;\n\n    /**\n     * Date cell to focus after appending the month to the document.\n     * @type {HTMLElement}\n     */\n    this.focusAfterAppend = null;\n  }\n\n  /** Generate and append the content for this year to the directive element. */\n  CalendarYearBodyCtrl.prototype.generateContent = function() {\n    var date = this.dateUtil.incrementYears(this.calendarCtrl.firstRenderableDate, this.offset);\n\n    this.$element\n      .empty()\n      .append(this.buildCalendarForYear(date));\n\n    if (this.focusAfterAppend) {\n      this.focusAfterAppend.classList.add(this.calendarCtrl.FOCUSED_DATE_CLASS);\n      this.focusAfterAppend.focus();\n      this.focusAfterAppend = null;\n    }\n  };\n\n  /**\n   * Creates a single cell to contain a year in the calendar.\n   * @param {number} opt_year Four-digit year.\n   * @param {number} opt_month Zero-indexed month.\n   * @returns {HTMLElement}\n   */\n  CalendarYearBodyCtrl.prototype.buildMonthCell = function(year, month) {\n    var calendarCtrl = this.calendarCtrl;\n    var yearCtrl = this.yearCtrl;\n    var cell = this.buildBlankCell();\n\n    // Represent this month/year as a date.\n    var firstOfMonth = new Date(year, month, 1);\n    cell.setAttribute('aria-label', this.dateLocale.monthFormatter(firstOfMonth));\n    cell.id = calendarCtrl.getDateId(firstOfMonth, 'year');\n\n    // Use `data-timestamp` attribute because IE10 does not support the `dataset` property.\n    cell.setAttribute('data-timestamp', firstOfMonth.getTime());\n\n    if (this.dateUtil.isSameMonthAndYear(firstOfMonth, calendarCtrl.today)) {\n      cell.classList.add(calendarCtrl.TODAY_CLASS);\n    }\n\n    if (this.dateUtil.isValidDate(calendarCtrl.selectedDate) &&\n        this.dateUtil.isSameMonthAndYear(firstOfMonth, calendarCtrl.selectedDate)) {\n      cell.classList.add(calendarCtrl.SELECTED_DATE_CLASS);\n      cell.setAttribute('aria-selected', 'true');\n    }\n\n    var cellText = this.dateLocale.shortMonths[month];\n\n    if (this.dateUtil.isMonthWithinRange(firstOfMonth,\n        calendarCtrl.minDate, calendarCtrl.maxDate)) {\n      var selectionIndicator = document.createElement('span');\n      selectionIndicator.classList.add('md-calendar-date-selection-indicator');\n      selectionIndicator.textContent = cellText;\n      cell.appendChild(selectionIndicator);\n      cell.addEventListener('click', yearCtrl.cellClickHandler);\n\n      if (calendarCtrl.displayDate && this.dateUtil.isSameMonthAndYear(firstOfMonth, calendarCtrl.displayDate)) {\n        this.focusAfterAppend = cell;\n      }\n    } else {\n      cell.classList.add('md-calendar-date-disabled');\n      cell.textContent = cellText;\n    }\n\n    return cell;\n  };\n\n  /**\n   * Builds a blank cell.\n   * @return {HTMLTableCellElement}\n   */\n  CalendarYearBodyCtrl.prototype.buildBlankCell = function() {\n    var cell = document.createElement('td');\n    cell.tabIndex = -1;\n    cell.classList.add('md-calendar-date');\n    cell.setAttribute('role', 'gridcell');\n\n    cell.setAttribute('tabindex', '-1');\n    return cell;\n  };\n\n  /**\n   * Builds the <tbody> content for the given year.\n   * @param {Date} date Date for which the content should be built.\n   * @returns {DocumentFragment} A document fragment containing the months within the year.\n   */\n  CalendarYearBodyCtrl.prototype.buildCalendarForYear = function(date) {\n    // Store rows for the month in a document fragment so that we can append them all at once.\n    var year = date.getFullYear();\n    var yearBody = document.createDocumentFragment();\n\n    var monthCell, i;\n    // First row contains label and Jan-Jun.\n    var firstRow = document.createElement('tr');\n    var labelCell = document.createElement('td');\n    labelCell.className = 'md-calendar-month-label';\n    labelCell.textContent = year;\n    firstRow.appendChild(labelCell);\n\n    for (i = 0; i < 6; i++) {\n      firstRow.appendChild(this.buildMonthCell(year, i));\n    }\n    yearBody.appendChild(firstRow);\n\n    // Second row contains a blank cell and Jul-Dec.\n    var secondRow = document.createElement('tr');\n    secondRow.appendChild(this.buildBlankCell());\n    for (i = 6; i < 12; i++) {\n      secondRow.appendChild(this.buildMonthCell(year, i));\n    }\n    yearBody.appendChild(secondRow);\n\n    return yearBody;\n  };\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngdoc service\n   * @name $mdDateLocaleProvider\n   * @module material.components.datepicker\n   *\n   * @description\n   * The `$mdDateLocaleProvider` is the provider that creates the `$mdDateLocale` service.\n   * This provider that allows the user to specify messages, formatters, and parsers for date\n   * internationalization. The `$mdDateLocale` service itself is consumed by Angular Material\n   * components that deal with dates.\n   *\n   * @property {(Array<string>)=} months Array of month names (in order).\n   * @property {(Array<string>)=} shortMonths Array of abbreviated month names.\n   * @property {(Array<string>)=} days Array of the days of the week (in order).\n   * @property {(Array<string>)=} shortDays Array of abbreviated dayes of the week.\n   * @property {(Array<string>)=} dates Array of dates of the month. Only necessary for locales\n   *     using a numeral system other than [1, 2, 3...].\n   * @property {(Array<string>)=} firstDayOfWeek The first day of the week. Sunday = 0, Monday = 1,\n   *    etc.\n   * @property {(function(string): Date)=} parseDate Function to parse a date object from a string.\n   * @property {(function(Date, string): string)=} formatDate Function to format a date object to a\n   *     string. The datepicker directive also provides the time zone, if it was specified.\n   * @property {(function(Date): string)=} monthHeaderFormatter Function that returns the label for\n   *     a month given a date.\n   * @property {(function(Date): string)=} monthFormatter Function that returns the full name of a month\n   *     for a giben date.\n   * @property {(function(number): string)=} weekNumberFormatter Function that returns a label for\n   *     a week given the week number.\n   * @property {(string)=} msgCalendar Translation of the label \"Calendar\" for the current locale.\n   * @property {(string)=} msgOpenCalendar Translation of the button label \"Open calendar\" for the\n   *     current locale.\n   * @property {Date=} firstRenderableDate The date from which the datepicker calendar will begin\n   * rendering. Note that this will be ignored if a minimum date is set. Defaults to January 1st 1880.\n   * @property {Date=} lastRenderableDate The last date that will be rendered by the datepicker\n   * calendar. Note that this will be ignored if a maximum date is set. Defaults to January 1st 2130.\n   *\n   * @usage\n   * <hljs lang=\"js\">\n   * myAppModule.config(function($mdDateLocaleProvider) {\n   *\n   *     // Example of a French localization.\n   *     $mdDateLocaleProvider.months = ['janvier', 'février', 'mars', ...];\n   *     $mdDateLocaleProvider.shortMonths = ['janv', 'févr', 'mars', ...];\n   *     $mdDateLocaleProvider.days = ['dimanche', 'lundi', 'mardi', ...];\n   *     $mdDateLocaleProvider.shortDays = ['Di', 'Lu', 'Ma', ...];\n   *\n   *     // Can change week display to start on Monday.\n   *     $mdDateLocaleProvider.firstDayOfWeek = 1;\n   *\n   *     // Optional.\n   *     $mdDateLocaleProvider.dates = [1, 2, 3, 4, 5, 6, ...];\n   *\n   *     // Example uses moment.js to parse and format dates.\n   *     $mdDateLocaleProvider.parseDate = function(dateString) {\n   *       var m = moment(dateString, 'L', true);\n   *       return m.isValid() ? m.toDate() : new Date(NaN);\n   *     };\n   *\n   *     $mdDateLocaleProvider.formatDate = function(date) {\n   *       var m = moment(date);\n   *       return m.isValid() ? m.format('L') : '';\n   *     };\n   *\n   *     $mdDateLocaleProvider.monthHeaderFormatter = function(date) {\n   *       return myShortMonths[date.getMonth()] + ' ' + date.getFullYear();\n   *     };\n   *\n   *     // In addition to date display, date components also need localized messages\n   *     // for aria-labels for screen-reader users.\n   *\n   *     $mdDateLocaleProvider.weekNumberFormatter = function(weekNumber) {\n   *       return 'Semaine ' + weekNumber;\n   *     };\n   *\n   *     $mdDateLocaleProvider.msgCalendar = 'Calendrier';\n   *     $mdDateLocaleProvider.msgOpenCalendar = 'Ouvrir le calendrier';\n   *\n   *     // You can also set when your calendar begins and ends.\n   *     $mdDateLocaleProvider.firstRenderableDate = new Date(1776, 6, 4);\n   *     $mdDateLocaleProvider.lastRenderableDate = new Date(2012, 11, 21);\n   * });\n   * </hljs>\n   *\n   */\n  angular.module('material.components.datepicker').config([\"$provide\", function($provide) {\n    // TODO(jelbourn): Assert provided values are correctly formatted. Need assertions.\n\n    /** @constructor */\n    function DateLocaleProvider() {\n      /** Array of full month names. E.g., ['January', 'Febuary', ...] */\n      this.months = null;\n\n      /** Array of abbreviated month names. E.g., ['Jan', 'Feb', ...] */\n      this.shortMonths = null;\n\n      /** Array of full day of the week names. E.g., ['Monday', 'Tuesday', ...] */\n      this.days = null;\n\n      /** Array of abbreviated dat of the week names. E.g., ['M', 'T', ...] */\n      this.shortDays = null;\n\n      /** Array of dates of a month (1 - 31). Characters might be different in some locales. */\n      this.dates = null;\n\n      /** Index of the first day of the week. 0 = Sunday, 1 = Monday, etc. */\n      this.firstDayOfWeek = 0;\n\n      /**\n       * Function that converts the date portion of a Date to a string.\n       * @type {(function(Date): string)}\n       */\n      this.formatDate = null;\n\n      /**\n       * Function that converts a date string to a Date object (the date portion)\n       * @type {function(string): Date}\n       */\n      this.parseDate = null;\n\n      /**\n       * Function that formats a Date into a month header string.\n       * @type {function(Date): string}\n       */\n      this.monthHeaderFormatter = null;\n\n      /**\n       * Function that formats a week number into a label for the week.\n       * @type {function(number): string}\n       */\n      this.weekNumberFormatter = null;\n\n      /**\n       * Function that formats a date into a long aria-label that is read\n       * when the focused date changes.\n       * @type {function(Date): string}\n       */\n      this.longDateFormatter = null;\n\n      /**\n       * ARIA label for the calendar \"dialog\" used in the datepicker.\n       * @type {string}\n       */\n      this.msgCalendar = '';\n\n      /**\n       * ARIA label for the datepicker's \"Open calendar\" buttons.\n       * @type {string}\n       */\n      this.msgOpenCalendar = '';\n    }\n\n    /**\n     * Factory function that returns an instance of the dateLocale service.\n     * ngInject\n     * @param $locale\n     * @returns {DateLocale}\n     */\n    DateLocaleProvider.prototype.$get = function($locale, $filter) {\n      /**\n       * Default date-to-string formatting function.\n       * @param {!Date} date\n       * @param {string=} timezone\n       * @returns {string}\n       */\n      function defaultFormatDate(date, timezone) {\n        if (!date) {\n          return '';\n        }\n\n        // All of the dates created through ng-material *should* be set to midnight.\n        // If we encounter a date where the localeTime shows at 11pm instead of midnight,\n        // we have run into an issue with DST where we need to increment the hour by one:\n        // var d = new Date(1992, 9, 8, 0, 0, 0);\n        // d.toLocaleString(); // == \"10/7/1992, 11:00:00 PM\"\n        var localeTime = date.toLocaleTimeString();\n        var formatDate = date;\n        if (date.getHours() === 0 &&\n            (localeTime.indexOf('11:') !== -1 || localeTime.indexOf('23:') !== -1)) {\n          formatDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 1, 0, 0);\n        }\n\n        return $filter('date')(formatDate, 'M/d/yyyy', timezone);\n      }\n\n      /**\n       * Default string-to-date parsing function.\n       * @param {string} dateString\n       * @returns {!Date}\n       */\n      function defaultParseDate(dateString) {\n        return new Date(dateString);\n      }\n\n      /**\n       * Default function to determine whether a string makes sense to be\n       * parsed to a Date object.\n       *\n       * This is very permissive and is just a basic sanity check to ensure that\n       * things like single integers aren't able to be parsed into dates.\n       * @param {string} dateString\n       * @returns {boolean}\n       */\n      function defaultIsDateComplete(dateString) {\n        dateString = dateString.trim();\n\n        // Looks for three chunks of content (either numbers or text) separated\n        // by delimiters.\n        var re = /^(([a-zA-Z]{3,}|[0-9]{1,4})([ \\.,]+|[\\/\\-])){2}([a-zA-Z]{3,}|[0-9]{1,4})$/;\n        return re.test(dateString);\n      }\n\n      /**\n       * Default date-to-string formatter to get a month header.\n       * @param {!Date} date\n       * @returns {string}\n       */\n      function defaultMonthHeaderFormatter(date) {\n        return service.shortMonths[date.getMonth()] + ' ' + date.getFullYear();\n      }\n\n      /**\n       * Default formatter for a month.\n       * @param {!Date} date\n       * @returns {string}\n       */\n      function defaultMonthFormatter(date) {\n        return service.months[date.getMonth()] + ' ' + date.getFullYear();\n      }\n\n      /**\n       * Default week number formatter.\n       * @param number\n       * @returns {string}\n       */\n      function defaultWeekNumberFormatter(number) {\n        return 'Week ' + number;\n      }\n\n      /**\n       * Default formatter for date cell aria-labels.\n       * @param {!Date} date\n       * @returns {string}\n       */\n      function defaultLongDateFormatter(date) {\n        // Example: 'Thursday June 18 2015'\n        return [\n          service.days[date.getDay()],\n          service.months[date.getMonth()],\n          service.dates[date.getDate()],\n          date.getFullYear()\n        ].join(' ');\n      }\n\n      // The default \"short\" day strings are the first character of each day,\n      // e.g., \"Monday\" => \"M\".\n      var defaultShortDays = $locale.DATETIME_FORMATS.SHORTDAY.map(function(day) {\n        return day.substring(0, 1);\n      });\n\n      // The default dates are simply the numbers 1 through 31.\n      var defaultDates = Array(32);\n      for (var i = 1; i <= 31; i++) {\n        defaultDates[i] = i;\n      }\n\n      // Default ARIA messages are in English (US).\n      var defaultMsgCalendar = 'Calendar';\n      var defaultMsgOpenCalendar = 'Open calendar';\n\n      // Default start/end dates that are rendered in the calendar.\n      var defaultFirstRenderableDate = new Date(1880, 0, 1);\n      var defaultLastRendereableDate = new Date(defaultFirstRenderableDate.getFullYear() + 250, 0, 1);\n\n      var service = {\n        months: this.months || $locale.DATETIME_FORMATS.MONTH,\n        shortMonths: this.shortMonths || $locale.DATETIME_FORMATS.SHORTMONTH,\n        days: this.days || $locale.DATETIME_FORMATS.DAY,\n        shortDays: this.shortDays || defaultShortDays,\n        dates: this.dates || defaultDates,\n        firstDayOfWeek: this.firstDayOfWeek || 0,\n        formatDate: this.formatDate || defaultFormatDate,\n        parseDate: this.parseDate || defaultParseDate,\n        isDateComplete: this.isDateComplete || defaultIsDateComplete,\n        monthHeaderFormatter: this.monthHeaderFormatter || defaultMonthHeaderFormatter,\n        monthFormatter: this.monthFormatter || defaultMonthFormatter,\n        weekNumberFormatter: this.weekNumberFormatter || defaultWeekNumberFormatter,\n        longDateFormatter: this.longDateFormatter || defaultLongDateFormatter,\n        msgCalendar: this.msgCalendar || defaultMsgCalendar,\n        msgOpenCalendar: this.msgOpenCalendar || defaultMsgOpenCalendar,\n        firstRenderableDate: this.firstRenderableDate || defaultFirstRenderableDate,\n        lastRenderableDate: this.lastRenderableDate || defaultLastRendereableDate\n      };\n\n      return service;\n    };\n    DateLocaleProvider.prototype.$get['$inject'] = [\"$locale\", \"$filter\"];\n\n    $provide.provider('$mdDateLocale', new DateLocaleProvider());\n  }]);\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * Utility for performing date calculations to facilitate operation of the calendar and\n   * datepicker.\n   */\n  angular.module('material.components.datepicker').factory('$$mdDateUtil', function() {\n    return {\n      getFirstDateOfMonth: getFirstDateOfMonth,\n      getNumberOfDaysInMonth: getNumberOfDaysInMonth,\n      getDateInNextMonth: getDateInNextMonth,\n      getDateInPreviousMonth: getDateInPreviousMonth,\n      isInNextMonth: isInNextMonth,\n      isInPreviousMonth: isInPreviousMonth,\n      getDateMidpoint: getDateMidpoint,\n      isSameMonthAndYear: isSameMonthAndYear,\n      getWeekOfMonth: getWeekOfMonth,\n      incrementDays: incrementDays,\n      incrementMonths: incrementMonths,\n      getLastDateOfMonth: getLastDateOfMonth,\n      isSameDay: isSameDay,\n      getMonthDistance: getMonthDistance,\n      isValidDate: isValidDate,\n      setDateTimeToMidnight: setDateTimeToMidnight,\n      createDateAtMidnight: createDateAtMidnight,\n      isDateWithinRange: isDateWithinRange,\n      incrementYears: incrementYears,\n      getYearDistance: getYearDistance,\n      clampDate: clampDate,\n      getTimestampFromNode: getTimestampFromNode,\n      isMonthWithinRange: isMonthWithinRange\n    };\n\n    /**\n     * Gets the first day of the month for the given date's month.\n     * @param {Date} date\n     * @returns {Date}\n     */\n    function getFirstDateOfMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth(), 1);\n    }\n\n    /**\n     * Gets the number of days in the month for the given date's month.\n     * @param date\n     * @returns {number}\n     */\n    function getNumberOfDaysInMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    }\n\n    /**\n     * Get an arbitrary date in the month after the given date's month.\n     * @param date\n     * @returns {Date}\n     */\n    function getDateInNextMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n    }\n\n    /**\n     * Get an arbitrary date in the month before the given date's month.\n     * @param date\n     * @returns {Date}\n     */\n    function getDateInPreviousMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth() - 1, 1);\n    }\n\n    /**\n     * Gets whether two dates have the same month and year.\n     * @param {Date} d1\n     * @param {Date} d2\n     * @returns {boolean}\n     */\n    function isSameMonthAndYear(d1, d2) {\n      return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth();\n    }\n\n    /**\n     * Gets whether two dates are the same day (not not necesarily the same time).\n     * @param {Date} d1\n     * @param {Date} d2\n     * @returns {boolean}\n     */\n    function isSameDay(d1, d2) {\n      return d1.getDate() == d2.getDate() && isSameMonthAndYear(d1, d2);\n    }\n\n    /**\n     * Gets whether a date is in the month immediately after some date.\n     * @param {Date} startDate The date from which to compare.\n     * @param {Date} endDate The date to check.\n     * @returns {boolean}\n     */\n    function isInNextMonth(startDate, endDate) {\n      var nextMonth = getDateInNextMonth(startDate);\n      return isSameMonthAndYear(nextMonth, endDate);\n    }\n\n    /**\n     * Gets whether a date is in the month immediately before some date.\n     * @param {Date} startDate The date from which to compare.\n     * @param {Date} endDate The date to check.\n     * @returns {boolean}\n     */\n    function isInPreviousMonth(startDate, endDate) {\n      var previousMonth = getDateInPreviousMonth(startDate);\n      return isSameMonthAndYear(endDate, previousMonth);\n    }\n\n    /**\n     * Gets the midpoint between two dates.\n     * @param {Date} d1\n     * @param {Date} d2\n     * @returns {Date}\n     */\n    function getDateMidpoint(d1, d2) {\n      return createDateAtMidnight((d1.getTime() + d2.getTime()) / 2);\n    }\n\n    /**\n     * Gets the week of the month that a given date occurs in.\n     * @param {Date} date\n     * @returns {number} Index of the week of the month (zero-based).\n     */\n    function getWeekOfMonth(date) {\n      var firstDayOfMonth = getFirstDateOfMonth(date);\n      return Math.floor((firstDayOfMonth.getDay() + date.getDate() - 1) / 7);\n    }\n\n    /**\n     * Gets a new date incremented by the given number of days. Number of days can be negative.\n     * @param {Date} date\n     * @param {number} numberOfDays\n     * @returns {Date}\n     */\n    function incrementDays(date, numberOfDays) {\n      return new Date(date.getFullYear(), date.getMonth(), date.getDate() + numberOfDays);\n    }\n\n    /**\n     * Gets a new date incremented by the given number of months. Number of months can be negative.\n     * If the date of the given month does not match the target month, the date will be set to the\n     * last day of the month.\n     * @param {Date} date\n     * @param {number} numberOfMonths\n     * @returns {Date}\n     */\n    function incrementMonths(date, numberOfMonths) {\n      // If the same date in the target month does not actually exist, the Date object will\n      // automatically advance *another* month by the number of missing days.\n      // For example, if you try to go from Jan. 30 to Feb. 30, you'll end up on March 2.\n      // So, we check if the month overflowed and go to the last day of the target month instead.\n      var dateInTargetMonth = new Date(date.getFullYear(), date.getMonth() + numberOfMonths, 1);\n      var numberOfDaysInMonth = getNumberOfDaysInMonth(dateInTargetMonth);\n      if (numberOfDaysInMonth < date.getDate()) {\n        dateInTargetMonth.setDate(numberOfDaysInMonth);\n      } else {\n        dateInTargetMonth.setDate(date.getDate());\n      }\n\n      return dateInTargetMonth;\n    }\n\n    /**\n     * Get the integer distance between two months. This *only* considers the month and year\n     * portion of the Date instances.\n     *\n     * @param {Date} start\n     * @param {Date} end\n     * @returns {number} Number of months between `start` and `end`. If `end` is before `start`\n     *     chronologically, this number will be negative.\n     */\n    function getMonthDistance(start, end) {\n      return (12 * (end.getFullYear() - start.getFullYear())) + (end.getMonth() - start.getMonth());\n    }\n\n    /**\n     * Gets the last day of the month for the given date.\n     * @param {Date} date\n     * @returns {Date}\n     */\n    function getLastDateOfMonth(date) {\n      return new Date(date.getFullYear(), date.getMonth(), getNumberOfDaysInMonth(date));\n    }\n\n    /**\n     * Checks whether a date is valid.\n     * @param {Date} date\n     * @return {boolean} Whether the date is a valid Date.\n     */\n    function isValidDate(date) {\n      return date && date.getTime && !isNaN(date.getTime());\n    }\n\n    /**\n     * Sets a date's time to midnight.\n     * @param {Date} date\n     */\n    function setDateTimeToMidnight(date) {\n      if (isValidDate(date)) {\n        date.setHours(0, 0, 0, 0);\n      }\n    }\n\n    /**\n     * Creates a date with the time set to midnight.\n     * Drop-in replacement for two forms of the Date constructor:\n     * 1. No argument for Date representing now.\n     * 2. Single-argument value representing number of seconds since Unix Epoch\n     * or a Date object.\n     * @param {number|Date=} opt_value\n     * @return {Date} New date with time set to midnight.\n     */\n    function createDateAtMidnight(opt_value) {\n      var date;\n      if (angular.isUndefined(opt_value)) {\n        date = new Date();\n      } else {\n        date = new Date(opt_value);\n      }\n      setDateTimeToMidnight(date);\n      return date;\n    }\n\n     /**\n      * Checks if a date is within a min and max range, ignoring the time component.\n      * If minDate or maxDate are not dates, they are ignored.\n      * @param {Date} date\n      * @param {Date} minDate\n      * @param {Date} maxDate\n      */\n     function isDateWithinRange(date, minDate, maxDate) {\n       var dateAtMidnight = createDateAtMidnight(date);\n       var minDateAtMidnight = isValidDate(minDate) ? createDateAtMidnight(minDate) : null;\n       var maxDateAtMidnight = isValidDate(maxDate) ? createDateAtMidnight(maxDate) : null;\n       return (!minDateAtMidnight || minDateAtMidnight <= dateAtMidnight) &&\n           (!maxDateAtMidnight || maxDateAtMidnight >= dateAtMidnight);\n     }\n\n    /**\n     * Gets a new date incremented by the given number of years. Number of years can be negative.\n     * See `incrementMonths` for notes on overflow for specific dates.\n     * @param {Date} date\n     * @param {number} numberOfYears\n     * @returns {Date}\n     */\n     function incrementYears(date, numberOfYears) {\n       return incrementMonths(date, numberOfYears * 12);\n     }\n\n     /**\n      * Get the integer distance between two years. This *only* considers the year portion of the\n      * Date instances.\n      *\n      * @param {Date} start\n      * @param {Date} end\n      * @returns {number} Number of months between `start` and `end`. If `end` is before `start`\n      *     chronologically, this number will be negative.\n      */\n     function getYearDistance(start, end) {\n       return end.getFullYear() - start.getFullYear();\n     }\n\n     /**\n      * Clamps a date between a minimum and a maximum date.\n      * @param {Date} date Date to be clamped\n      * @param {Date=} minDate Minimum date\n      * @param {Date=} maxDate Maximum date\n      * @return {Date}\n      */\n     function clampDate(date, minDate, maxDate) {\n       var boundDate = date;\n       if (minDate && date < minDate) {\n         boundDate = new Date(minDate.getTime());\n       }\n       if (maxDate && date > maxDate) {\n         boundDate = new Date(maxDate.getTime());\n       }\n       return boundDate;\n     }\n\n     /**\n      * Extracts and parses the timestamp from a DOM node.\n      * @param  {HTMLElement} node Node from which the timestamp will be extracted.\n      * @return {number} Time since epoch.\n      */\n     function getTimestampFromNode(node) {\n       if (node && node.hasAttribute('data-timestamp')) {\n         return Number(node.getAttribute('data-timestamp'));\n       }\n     }\n\n     /**\n      * Checks if a month is within a min and max range, ignoring the date and time components.\n      * If minDate or maxDate are not dates, they are ignored.\n      * @param {Date} date\n      * @param {Date} minDate\n      * @param {Date} maxDate\n      */\n     function isMonthWithinRange(date, minDate, maxDate) {\n       var month = date.getMonth();\n       var year = date.getFullYear();\n\n       return (!minDate || minDate.getFullYear() < year || minDate.getMonth() <= month) &&\n        (!maxDate || maxDate.getFullYear() > year || maxDate.getMonth() >= month);\n     }\n  });\n})();\n\n(function() {\n  'use strict';\n\n  // POST RELEASE\n  // TODO(jelbourn): Demo that uses moment.js\n  // TODO(jelbourn): make sure this plays well with validation and ngMessages.\n  // TODO(jelbourn): calendar pane doesn't open up outside of visible viewport.\n  // TODO(jelbourn): forward more attributes to the internal input (required, autofocus, etc.)\n  // TODO(jelbourn): something better for mobile (calendar panel takes up entire screen?)\n  // TODO(jelbourn): input behavior (masking? auto-complete?)\n\n\n  DatePickerCtrl['$inject'] = [\"$scope\", \"$element\", \"$attrs\", \"$window\", \"$mdConstant\", \"$mdTheming\", \"$mdUtil\", \"$mdDateLocale\", \"$$mdDateUtil\", \"$$rAF\", \"$filter\"];\n  datePickerDirective['$inject'] = [\"$$mdSvgRegistry\", \"$mdUtil\", \"$mdAria\", \"inputDirective\"];\n  angular.module('material.components.datepicker')\n      .directive('mdDatepicker', datePickerDirective);\n\n  /**\n   * @ngdoc directive\n   * @name mdDatepicker\n   * @module material.components.datepicker\n   *\n   * @param {Date} ng-model The component's model. Expects a JavaScript Date object.\n   * @param {Object=} ng-model-options Allows tuning of the way in which `ng-model` is being updated. Also allows\n   * for a timezone to be specified. <a href=\"https://docs.angularjs.org/api/ng/directive/ngModelOptions#usage\">Read more at the ngModelOptions docs.</a>\n   * @param {expression=} ng-change Expression evaluated when the model value changes.\n   * @param {expression=} ng-focus Expression evaluated when the input is focused or the calendar is opened.\n   * @param {expression=} ng-blur Expression evaluated when focus is removed from the input or the calendar is closed.\n   * @param {boolean=} ng-disabled Whether the datepicker is disabled.\n   * @param {boolean=} ng-required Whether a value is required for the datepicker.\n   * @param {Date=} md-min-date Expression representing a min date (inclusive).\n   * @param {Date=} md-max-date Expression representing a max date (inclusive).\n   * @param {(function(Date): boolean)=} md-date-filter Function expecting a date and returning a boolean whether it can be selected or not.\n   * @param {String=} md-placeholder The date input placeholder value.\n   * @param {String=} md-open-on-focus When present, the calendar will be opened when the input is focused.\n   * @param {Boolean=} md-is-open Expression that can be used to open the datepicker's calendar on-demand.\n   * @param {String=} md-current-view Default open view of the calendar pane. Can be either \"month\" or \"year\".\n   * @param {String=} md-hide-icons Determines which datepicker icons should be hidden. Note that this may cause the\n   * datepicker to not align properly with other components. **Use at your own risk.** Possible values are:\n   * * `\"all\"` - Hides all icons.\n   * * `\"calendar\"` - Only hides the calendar icon.\n   * * `\"triangle\"` - Only hides the triangle icon.\n   * @param {Object=} md-date-locale Allows for the values from the `$mdDateLocaleProvider` to be\n   * ovewritten on a per-element basis (e.g. `msgOpenCalendar` can be overwritten with\n   * `md-date-locale=\"{ msgOpenCalendar: 'Open a special calendar' }\"`).\n   *\n   * @description\n   * `<md-datepicker>` is a component used to select a single date.\n   * For information on how to configure internationalization for the date picker,\n   * see `$mdDateLocaleProvider`.\n   *\n   * This component supports [ngMessages](https://docs.angularjs.org/api/ngMessages/directive/ngMessages).\n   * Supported attributes are:\n   * * `required`: whether a required date is not set.\n   * * `mindate`: whether the selected date is before the minimum allowed date.\n   * * `maxdate`: whether the selected date is after the maximum allowed date.\n   * * `debounceInterval`: ms to delay input processing (since last debounce reset); default value 500ms\n   *\n   * @usage\n   * <hljs lang=\"html\">\n   *   <md-datepicker ng-model=\"birthday\"></md-datepicker>\n   * </hljs>\n   *\n   */\n\n  function datePickerDirective($$mdSvgRegistry, $mdUtil, $mdAria, inputDirective) {\n    return {\n      template: function(tElement, tAttrs) {\n        // Buttons are not in the tab order because users can open the calendar via keyboard\n        // interaction on the text input, and multiple tab stops for one component (picker)\n        // may be confusing.\n        var hiddenIcons = tAttrs.mdHideIcons;\n        var ariaLabelValue = tAttrs.ariaLabel || tAttrs.mdPlaceholder;\n\n        var calendarButton = (hiddenIcons === 'all' || hiddenIcons === 'calendar') ? '' :\n          '<md-button class=\"md-datepicker-button md-icon-button\" type=\"button\" ' +\n              'tabindex=\"-1\" aria-hidden=\"true\" ' +\n              'ng-click=\"ctrl.openCalendarPane($event)\">' +\n            '<md-icon class=\"md-datepicker-calendar-icon\" aria-label=\"md-calendar\" ' +\n                     'md-svg-src=\"' + $$mdSvgRegistry.mdCalendar + '\"></md-icon>' +\n          '</md-button>';\n\n        var triangleButton = '';\n\n        if (hiddenIcons !== 'all' && hiddenIcons !== 'triangle') {\n          triangleButton = '' +\n            '<md-button type=\"button\" md-no-ink ' +\n              'class=\"md-datepicker-triangle-button md-icon-button\" ' +\n              'ng-click=\"ctrl.openCalendarPane($event)\" ' +\n              'aria-label=\"{{::ctrl.locale.msgOpenCalendar}}\">' +\n            '<div class=\"md-datepicker-expand-triangle\"></div>' +\n          '</md-button>';\n\n          tElement.addClass(HAS_TRIANGLE_ICON_CLASS);\n        }\n\n        return calendarButton +\n        '<div class=\"md-datepicker-input-container\" ng-class=\"{\\'md-datepicker-focused\\': ctrl.isFocused}\">' +\n          '<input ' +\n            (ariaLabelValue ? 'aria-label=\"' + ariaLabelValue + '\" ' : '') +\n            'class=\"md-datepicker-input\" ' +\n            'aria-haspopup=\"true\" ' +\n            'aria-expanded=\"{{ctrl.isCalendarOpen}}\" ' +\n            'ng-focus=\"ctrl.setFocused(true)\" ' +\n            'ng-blur=\"ctrl.setFocused(false)\"> ' +\n            triangleButton +\n        '</div>' +\n\n        // This pane will be detached from here and re-attached to the document body.\n        '<div class=\"md-datepicker-calendar-pane md-whiteframe-z1\" id=\"{{::ctrl.calendarPaneId}}\">' +\n          '<div class=\"md-datepicker-input-mask\">' +\n            '<div class=\"md-datepicker-input-mask-opaque\"></div>' +\n          '</div>' +\n          '<div class=\"md-datepicker-calendar\">' +\n            '<md-calendar role=\"dialog\" aria-label=\"{{::ctrl.locale.msgCalendar}}\" ' +\n                'md-current-view=\"{{::ctrl.currentView}}\"' +\n                'md-min-date=\"ctrl.minDate\"' +\n                'md-max-date=\"ctrl.maxDate\"' +\n                'md-date-filter=\"ctrl.dateFilter\"' +\n                'ng-model=\"ctrl.date\" ng-if=\"ctrl.isCalendarOpen\">' +\n            '</md-calendar>' +\n          '</div>' +\n        '</div>';\n      },\n      require: ['ngModel', 'mdDatepicker', '?^mdInputContainer', '?^form'],\n      scope: {\n        minDate: '=mdMinDate',\n        maxDate: '=mdMaxDate',\n        placeholder: '@mdPlaceholder',\n        currentView: '@mdCurrentView',\n        dateFilter: '=mdDateFilter',\n        isOpen: '=?mdIsOpen',\n        debounceInterval: '=mdDebounceInterval',\n        dateLocale: '=mdDateLocale'\n      },\n      controller: DatePickerCtrl,\n      controllerAs: 'ctrl',\n      bindToController: true,\n      link: function(scope, element, attr, controllers) {\n        var ngModelCtrl = controllers[0];\n        var mdDatePickerCtrl = controllers[1];\n        var mdInputContainer = controllers[2];\n        var parentForm = controllers[3];\n        var mdNoAsterisk = $mdUtil.parseAttributeBoolean(attr.mdNoAsterisk);\n\n        mdDatePickerCtrl.configureNgModel(ngModelCtrl, mdInputContainer, inputDirective);\n\n        if (mdInputContainer) {\n          // We need to move the spacer after the datepicker itself,\n          // because md-input-container adds it after the\n          // md-datepicker-input by default. The spacer gets wrapped in a\n          // div, because it floats and gets aligned next to the datepicker.\n          // There are easier ways of working around this with CSS (making the\n          // datepicker 100% wide, change the `display` etc.), however they\n          // break the alignment with any other form controls.\n          var spacer = element[0].querySelector('.md-errors-spacer');\n\n          if (spacer) {\n            element.after(angular.element('<div>').append(spacer));\n          }\n\n          mdInputContainer.setHasPlaceholder(attr.mdPlaceholder);\n          mdInputContainer.input = element;\n          mdInputContainer.element\n            .addClass(INPUT_CONTAINER_CLASS)\n            .toggleClass(HAS_CALENDAR_ICON_CLASS, attr.mdHideIcons !== 'calendar' && attr.mdHideIcons !== 'all');\n\n          if (!mdInputContainer.label) {\n            $mdAria.expect(element, 'aria-label', attr.mdPlaceholder);\n          } else if(!mdNoAsterisk) {\n            attr.$observe('required', function(value) {\n              mdInputContainer.label.toggleClass('md-required', !!value);\n            });\n          }\n\n          scope.$watch(mdInputContainer.isErrorGetter || function() {\n            return ngModelCtrl.$invalid && (ngModelCtrl.$touched || (parentForm && parentForm.$submitted));\n          }, mdInputContainer.setInvalid);\n        } else if (parentForm) {\n          // If invalid, highlights the input when the parent form is submitted.\n          var parentSubmittedWatcher = scope.$watch(function() {\n            return parentForm.$submitted;\n          }, function(isSubmitted) {\n            if (isSubmitted) {\n              mdDatePickerCtrl.updateErrorState();\n              parentSubmittedWatcher();\n            }\n          });\n        }\n      }\n    };\n  }\n\n  /** Additional offset for the input's `size` attribute, which is updated based on its content. */\n  var EXTRA_INPUT_SIZE = 3;\n\n  /** Class applied to the container if the date is invalid. */\n  var INVALID_CLASS = 'md-datepicker-invalid';\n\n  /** Class applied to the datepicker when it's open. */\n  var OPEN_CLASS = 'md-datepicker-open';\n\n  /** Class applied to the md-input-container, if a datepicker is placed inside it */\n  var INPUT_CONTAINER_CLASS = '_md-datepicker-floating-label';\n\n  /** Class to be applied when the calendar icon is enabled. */\n  var HAS_CALENDAR_ICON_CLASS = '_md-datepicker-has-calendar-icon';\n\n  /** Class to be applied when the triangle icon is enabled. */\n  var HAS_TRIANGLE_ICON_CLASS = '_md-datepicker-has-triangle-icon';\n\n  /** Default time in ms to debounce input event by. */\n  var DEFAULT_DEBOUNCE_INTERVAL = 500;\n\n  /**\n   * Height of the calendar pane used to check if the pane is going outside the boundary of\n   * the viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\n   * also added to space the pane away from the exact edge of the screen.\n   *\n   *  This is computed statically now, but can be changed to be measured if the circumstances\n   *  of calendar sizing are changed.\n   */\n  var CALENDAR_PANE_HEIGHT = 368;\n\n  /**\n   * Width of the calendar pane used to check if the pane is going outside the boundary of\n   * the viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\n   * also added to space the pane away from the exact edge of the screen.\n   *\n   *  This is computed statically now, but can be changed to be measured if the circumstances\n   *  of calendar sizing are changed.\n   */\n  var CALENDAR_PANE_WIDTH = 360;\n\n  /** Used for checking whether the current user agent is on iOS or Android. */\n  var IS_MOBILE_REGEX = /ipad|iphone|ipod|android/i;\n\n  /**\n   * Controller for md-datepicker.\n   *\n   * ngInject @constructor\n   */\n  function DatePickerCtrl($scope, $element, $attrs, $window, $mdConstant,\n    $mdTheming, $mdUtil, $mdDateLocale, $$mdDateUtil, $$rAF, $filter) {\n\n    /** @final */\n    this.$window = $window;\n\n    /** @final */\n    this.dateUtil = $$mdDateUtil;\n\n    /** @final */\n    this.$mdConstant = $mdConstant;\n\n    /* @final */\n    this.$mdUtil = $mdUtil;\n\n    /** @final */\n    this.$$rAF = $$rAF;\n\n    /** @final */\n    this.$mdDateLocale = $mdDateLocale;\n\n    /**\n     * The root document element. This is used for attaching a top-level click handler to\n     * close the calendar panel when a click outside said panel occurs. We use `documentElement`\n     * instead of body because, when scrolling is disabled, some browsers consider the body element\n     * to be completely off the screen and propagate events directly to the html element.\n     * @type {!angular.JQLite}\n     */\n    this.documentElement = angular.element(document.documentElement);\n\n    /** @type {!angular.NgModelController} */\n    this.ngModelCtrl = null;\n\n    /** @type {HTMLInputElement} */\n    this.inputElement = $element[0].querySelector('input');\n\n    /** @final {!angular.JQLite} */\n    this.ngInputElement = angular.element(this.inputElement);\n\n    /** @type {HTMLElement} */\n    this.inputContainer = $element[0].querySelector('.md-datepicker-input-container');\n\n    /** @type {HTMLElement} Floating calendar pane. */\n    this.calendarPane = $element[0].querySelector('.md-datepicker-calendar-pane');\n\n    /** @type {HTMLElement} Calendar icon button. */\n    this.calendarButton = $element[0].querySelector('.md-datepicker-button');\n\n    /**\n     * Element covering everything but the input in the top of the floating calendar pane.\n     * @type {!angular.JQLite}\n     */\n    this.inputMask = angular.element($element[0].querySelector('.md-datepicker-input-mask-opaque'));\n\n    /** @final {!angular.JQLite} */\n    this.$element = $element;\n\n    /** @final {!angular.Attributes} */\n    this.$attrs = $attrs;\n\n    /** @final {!angular.Scope} */\n    this.$scope = $scope;\n\n    /** @type {Date} */\n    this.date = null;\n\n    /** @type {boolean} */\n    this.isFocused = false;\n\n    /** @type {boolean} */\n    this.isDisabled;\n    this.setDisabled($element[0].disabled || angular.isString($attrs.disabled));\n\n    /** @type {boolean} Whether the date-picker's calendar pane is open. */\n    this.isCalendarOpen = false;\n\n    /** @type {boolean} Whether the calendar should open when the input is focused. */\n    this.openOnFocus = $attrs.hasOwnProperty('mdOpenOnFocus');\n\n    /** @final */\n    this.mdInputContainer = null;\n\n    /**\n     * Element from which the calendar pane was opened. Keep track of this so that we can return\n     * focus to it when the pane is closed.\n     * @type {HTMLElement}\n     */\n    this.calendarPaneOpenedFrom = null;\n\n    /** @type {String} Unique id for the calendar pane. */\n    this.calendarPaneId = 'md-date-pane-' + $mdUtil.nextUid();\n\n    /** Pre-bound click handler is saved so that the event listener can be removed. */\n    this.bodyClickHandler = angular.bind(this, this.handleBodyClick);\n\n    /**\n     * Name of the event that will trigger a close. Necessary to sniff the browser, because\n     * the resize event doesn't make sense on mobile and can have a negative impact since it\n     * triggers whenever the browser zooms in on a focused input.\n     */\n    this.windowEventName = IS_MOBILE_REGEX.test(\n      navigator.userAgent || navigator.vendor || window.opera\n    ) ? 'orientationchange' : 'resize';\n\n    /** Pre-bound close handler so that the event listener can be removed. */\n    this.windowEventHandler = $mdUtil.debounce(angular.bind(this, this.closeCalendarPane), 100);\n\n    /** Pre-bound handler for the window blur event. Allows for it to be removed later. */\n    this.windowBlurHandler = angular.bind(this, this.handleWindowBlur);\n\n    /** The built-in Angular date filter. */\n    this.ngDateFilter = $filter('date');\n\n    /** @type {Number} Extra margin for the left side of the floating calendar pane. */\n    this.leftMargin = 20;\n\n    /** @type {Number} Extra margin for the top of the floating calendar. Gets determined on the first open. */\n    this.topMargin = null;\n\n    // Unless the user specifies so, the datepicker should not be a tab stop.\n    // This is necessary because ngAria might add a tabindex to anything with an ng-model\n    // (based on whether or not the user has turned that particular feature on/off).\n    if ($attrs.tabindex) {\n      this.ngInputElement.attr('tabindex', $attrs.tabindex);\n      $attrs.$set('tabindex', null);\n    } else {\n      $attrs.$set('tabindex', '-1');\n    }\n\n    $attrs.$set('aria-owns', this.calendarPaneId);\n\n    $mdTheming($element);\n    $mdTheming(angular.element(this.calendarPane));\n\n    var self = this;\n\n    $scope.$on('$destroy', function() {\n      self.detachCalendarPane();\n    });\n\n    if ($attrs.mdIsOpen) {\n      $scope.$watch('ctrl.isOpen', function(shouldBeOpen) {\n        if (shouldBeOpen) {\n          self.openCalendarPane({\n            target: self.inputElement\n          });\n        } else {\n          self.closeCalendarPane();\n        }\n      });\n    }\n\n    // For Angular 1.4 and older, where there are no lifecycle hooks but bindings are pre-assigned,\n    // manually call the $onInit hook.\n    if (angular.version.major === 1 && angular.version.minor <= 4) {\n      this.$onInit();\n    }\n\n  }\n\n  /**\n   * Angular Lifecycle hook for newer Angular versions.\n   * Bindings are not guaranteed to have been assigned in the controller, but they are in the $onInit hook.\n   */\n  DatePickerCtrl.prototype.$onInit = function() {\n\n    /**\n     * Holds locale-specific formatters, parsers, labels etc. Allows\n     * the user to override specific ones from the $mdDateLocale provider.\n     * @type {!Object}\n     */\n    this.locale = this.dateLocale ? angular.extend({}, this.$mdDateLocale, this.dateLocale) : this.$mdDateLocale;\n\n    this.installPropertyInterceptors();\n    this.attachChangeListeners();\n    this.attachInteractionListeners();\n  };\n\n  /**\n   * Sets up the controller's reference to ngModelController and\n   * applies Angular's `input[type=\"date\"]` directive.\n   * @param {!angular.NgModelController} ngModelCtrl Instance of the ngModel controller.\n   * @param {Object} mdInputContainer Instance of the mdInputContainer controller.\n   * @param {Object} inputDirective Config for Angular's `input` directive.\n   */\n  DatePickerCtrl.prototype.configureNgModel = function(ngModelCtrl, mdInputContainer, inputDirective) {\n    this.ngModelCtrl = ngModelCtrl;\n    this.mdInputContainer = mdInputContainer;\n\n    // The input needs to be [type=\"date\"] in order to be picked up by Angular.\n    this.$attrs.$set('type', 'date');\n\n    // Invoke the `input` directive link function, adding a stub for the element.\n    // This allows us to re-use Angular's logic for setting the timezone via ng-model-options.\n    // It works by calling the link function directly which then adds the proper `$parsers` and\n    // `$formatters` to the ngModel controller.\n    inputDirective[0].link.pre(this.$scope, {\n      on: angular.noop,\n      val: angular.noop,\n      0: {}\n    }, this.$attrs, [ngModelCtrl]);\n\n    var self = this;\n\n    // Responds to external changes to the model value.\n    self.ngModelCtrl.$formatters.push(function(value) {\n      if (value && !(value instanceof Date)) {\n        throw Error('The ng-model for md-datepicker must be a Date instance. ' +\n            'Currently the model is a: ' + (typeof value));\n      }\n\n      self.onExternalChange(value);\n\n      return value;\n    });\n\n    // Responds to external error state changes (e.g. ng-required based on another input).\n    ngModelCtrl.$viewChangeListeners.unshift(angular.bind(this, this.updateErrorState));\n\n    // Forwards any events from the input to the root element. This is necessary to get `updateOn`\n    // working for events that don't bubble (e.g. 'blur') since Angular binds the handlers to\n    // the `<md-datepicker>`.\n    var updateOn = self.$mdUtil.getModelOption(ngModelCtrl, 'updateOn');\n\n    if (updateOn) {\n      this.ngInputElement.on(\n        updateOn,\n        angular.bind(this.$element, this.$element.triggerHandler, updateOn)\n      );\n    }\n  };\n\n  /**\n   * Attach event listeners for both the text input and the md-calendar.\n   * Events are used instead of ng-model so that updates don't infinitely update the other\n   * on a change. This should also be more performant than using a $watch.\n   */\n  DatePickerCtrl.prototype.attachChangeListeners = function() {\n    var self = this;\n\n    self.$scope.$on('md-calendar-change', function(event, date) {\n      self.setModelValue(date);\n      self.onExternalChange(date);\n      self.closeCalendarPane();\n    });\n\n    self.ngInputElement.on('input', angular.bind(self, self.resizeInputElement));\n\n    var debounceInterval = angular.isDefined(this.debounceInterval) ?\n        this.debounceInterval : DEFAULT_DEBOUNCE_INTERVAL;\n    self.ngInputElement.on('input', self.$mdUtil.debounce(self.handleInputEvent,\n        debounceInterval, self));\n  };\n\n  /** Attach event listeners for user interaction. */\n  DatePickerCtrl.prototype.attachInteractionListeners = function() {\n    var self = this;\n    var $scope = this.$scope;\n    var keyCodes = this.$mdConstant.KEY_CODE;\n\n    // Add event listener through angular so that we can triggerHandler in unit tests.\n    self.ngInputElement.on('keydown', function(event) {\n      if (event.altKey && event.keyCode == keyCodes.DOWN_ARROW) {\n        self.openCalendarPane(event);\n        $scope.$digest();\n      }\n    });\n\n    if (self.openOnFocus) {\n      self.ngInputElement.on('focus', angular.bind(self, self.openCalendarPane));\n      angular.element(self.$window).on('blur', self.windowBlurHandler);\n\n      $scope.$on('$destroy', function() {\n        angular.element(self.$window).off('blur', self.windowBlurHandler);\n      });\n    }\n\n    $scope.$on('md-calendar-close', function() {\n      self.closeCalendarPane();\n    });\n  };\n\n  /**\n   * Capture properties set to the date-picker and imperitively handle internal changes.\n   * This is done to avoid setting up additional $watches.\n   */\n  DatePickerCtrl.prototype.installPropertyInterceptors = function() {\n    var self = this;\n\n    if (this.$attrs.ngDisabled) {\n      // The expression is to be evaluated against the directive element's scope and not\n      // the directive's isolate scope.\n      var scope = this.$scope.$parent;\n\n      if (scope) {\n        scope.$watch(this.$attrs.ngDisabled, function(isDisabled) {\n          self.setDisabled(isDisabled);\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'placeholder', {\n      get: function() { return self.inputElement.placeholder; },\n      set: function(value) { self.inputElement.placeholder = value || ''; }\n    });\n  };\n\n  /**\n   * Sets whether the date-picker is disabled.\n   * @param {boolean} isDisabled\n   */\n  DatePickerCtrl.prototype.setDisabled = function(isDisabled) {\n    this.isDisabled = isDisabled;\n    this.inputElement.disabled = isDisabled;\n\n    if (this.calendarButton) {\n      this.calendarButton.disabled = isDisabled;\n    }\n  };\n\n  /**\n   * Sets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n   *   - mindate: whether the selected date is before the minimum date.\n   *   - maxdate: whether the selected flag is after the maximum date.\n   *   - filtered: whether the selected date is allowed by the custom filtering function.\n   *   - valid: whether the entered text input is a valid date\n   *\n   * The 'required' flag is handled automatically by ngModel.\n   *\n   * @param {Date=} opt_date Date to check. If not given, defaults to the datepicker's model value.\n   */\n  DatePickerCtrl.prototype.updateErrorState = function(opt_date) {\n    var date = opt_date || this.date;\n\n    // Clear any existing errors to get rid of anything that's no longer relevant.\n    this.clearErrorState();\n\n    if (this.dateUtil.isValidDate(date)) {\n      // Force all dates to midnight in order to ignore the time portion.\n      date = this.dateUtil.createDateAtMidnight(date);\n\n      if (this.dateUtil.isValidDate(this.minDate)) {\n        var minDate = this.dateUtil.createDateAtMidnight(this.minDate);\n        this.ngModelCtrl.$setValidity('mindate', date >= minDate);\n      }\n\n      if (this.dateUtil.isValidDate(this.maxDate)) {\n        var maxDate = this.dateUtil.createDateAtMidnight(this.maxDate);\n        this.ngModelCtrl.$setValidity('maxdate', date <= maxDate);\n      }\n\n      if (angular.isFunction(this.dateFilter)) {\n        this.ngModelCtrl.$setValidity('filtered', this.dateFilter(date));\n      }\n    } else {\n      // The date is seen as \"not a valid date\" if there is *something* set\n      // (i.e.., not null or undefined), but that something isn't a valid date.\n      this.ngModelCtrl.$setValidity('valid', date == null);\n    }\n\n    angular.element(this.inputContainer).toggleClass(INVALID_CLASS, !this.ngModelCtrl.$valid);\n  };\n\n  /** Clears any error flags set by `updateErrorState`. */\n  DatePickerCtrl.prototype.clearErrorState = function() {\n    this.inputContainer.classList.remove(INVALID_CLASS);\n    ['mindate', 'maxdate', 'filtered', 'valid'].forEach(function(field) {\n      this.ngModelCtrl.$setValidity(field, true);\n    }, this);\n  };\n\n  /** Resizes the input element based on the size of its content. */\n  DatePickerCtrl.prototype.resizeInputElement = function() {\n    this.inputElement.size = this.inputElement.value.length + EXTRA_INPUT_SIZE;\n  };\n\n  /**\n   * Sets the model value if the user input is a valid date.\n   * Adds an invalid class to the input element if not.\n   */\n  DatePickerCtrl.prototype.handleInputEvent = function() {\n    var inputString = this.inputElement.value;\n    var parsedDate = inputString ? this.locale.parseDate(inputString) : null;\n    this.dateUtil.setDateTimeToMidnight(parsedDate);\n\n    // An input string is valid if it is either empty (representing no date)\n    // or if it parses to a valid date that the user is allowed to select.\n    var isValidInput = inputString == '' || (\n      this.dateUtil.isValidDate(parsedDate) &&\n      this.locale.isDateComplete(inputString) &&\n      this.isDateEnabled(parsedDate)\n    );\n\n    // The datepicker's model is only updated when there is a valid input.\n    if (isValidInput) {\n      this.setModelValue(parsedDate);\n      this.date = parsedDate;\n    }\n\n    this.updateErrorState(parsedDate);\n  };\n\n  /**\n   * Check whether date is in range and enabled\n   * @param {Date=} opt_date\n   * @return {boolean} Whether the date is enabled.\n   */\n  DatePickerCtrl.prototype.isDateEnabled = function(opt_date) {\n    return this.dateUtil.isDateWithinRange(opt_date, this.minDate, this.maxDate) &&\n          (!angular.isFunction(this.dateFilter) || this.dateFilter(opt_date));\n  };\n\n  /** Position and attach the floating calendar to the document. */\n  DatePickerCtrl.prototype.attachCalendarPane = function() {\n    var calendarPane = this.calendarPane;\n    var body = document.body;\n\n    calendarPane.style.transform = '';\n    this.$element.addClass(OPEN_CLASS);\n    this.mdInputContainer && this.mdInputContainer.element.addClass(OPEN_CLASS);\n    angular.element(body).addClass('md-datepicker-is-showing');\n\n    var elementRect = this.inputContainer.getBoundingClientRect();\n    var bodyRect = body.getBoundingClientRect();\n\n    if (!this.topMargin || this.topMargin < 0) {\n      this.topMargin = (this.inputMask.parent().prop('clientHeight') - this.ngInputElement.prop('clientHeight')) / 2;\n    }\n\n    // Check to see if the calendar pane would go off the screen. If so, adjust position\n    // accordingly to keep it within the viewport.\n    var paneTop = elementRect.top - bodyRect.top - this.topMargin;\n    var paneLeft = elementRect.left - bodyRect.left - this.leftMargin;\n\n    // If ng-material has disabled body scrolling (for example, if a dialog is open),\n    // then it's possible that the already-scrolled body has a negative top/left. In this case,\n    // we want to treat the \"real\" top as (0 - bodyRect.top). In a normal scrolling situation,\n    // though, the top of the viewport should just be the body's scroll position.\n    var viewportTop = (bodyRect.top < 0 && document.body.scrollTop == 0) ?\n        -bodyRect.top :\n        document.body.scrollTop;\n\n    var viewportLeft = (bodyRect.left < 0 && document.body.scrollLeft == 0) ?\n        -bodyRect.left :\n        document.body.scrollLeft;\n\n    var viewportBottom = viewportTop + this.$window.innerHeight;\n    var viewportRight = viewportLeft + this.$window.innerWidth;\n\n    // Creates an overlay with a hole the same size as element. We remove a pixel or two\n    // on each end to make it overlap slightly. The overlay's background is added in\n    // the theme in the form of a box-shadow with a huge spread.\n    this.inputMask.css({\n      position: 'absolute',\n      left: this.leftMargin + 'px',\n      top: this.topMargin + 'px',\n      width: (elementRect.width - 1) + 'px',\n      height: (elementRect.height - 2) + 'px'\n    });\n\n    // If the right edge of the pane would be off the screen and shifting it left by the\n    // difference would not go past the left edge of the screen. If the calendar pane is too\n    // big to fit on the screen at all, move it to the left of the screen and scale the entire\n    // element down to fit.\n    if (paneLeft + CALENDAR_PANE_WIDTH > viewportRight) {\n      if (viewportRight - CALENDAR_PANE_WIDTH > 0) {\n        paneLeft = viewportRight - CALENDAR_PANE_WIDTH;\n      } else {\n        paneLeft = viewportLeft;\n        var scale = this.$window.innerWidth / CALENDAR_PANE_WIDTH;\n        calendarPane.style.transform = 'scale(' + scale + ')';\n      }\n\n      calendarPane.classList.add('md-datepicker-pos-adjusted');\n    }\n\n    // If the bottom edge of the pane would be off the screen and shifting it up by the\n    // difference would not go past the top edge of the screen.\n    if (paneTop + CALENDAR_PANE_HEIGHT > viewportBottom &&\n        viewportBottom - CALENDAR_PANE_HEIGHT > viewportTop) {\n      paneTop = viewportBottom - CALENDAR_PANE_HEIGHT;\n      calendarPane.classList.add('md-datepicker-pos-adjusted');\n    }\n\n    calendarPane.style.left = paneLeft + 'px';\n    calendarPane.style.top = paneTop + 'px';\n    document.body.appendChild(calendarPane);\n\n    // Add CSS class after one frame to trigger open animation.\n    this.$$rAF(function() {\n      calendarPane.classList.add('md-pane-open');\n    });\n  };\n\n  /** Detach the floating calendar pane from the document. */\n  DatePickerCtrl.prototype.detachCalendarPane = function() {\n    this.$element.removeClass(OPEN_CLASS);\n    this.mdInputContainer && this.mdInputContainer.element.removeClass(OPEN_CLASS);\n    angular.element(document.body).removeClass('md-datepicker-is-showing');\n    this.calendarPane.classList.remove('md-pane-open');\n    this.calendarPane.classList.remove('md-datepicker-pos-adjusted');\n\n    if (this.isCalendarOpen) {\n      this.$mdUtil.enableScrolling();\n    }\n\n    if (this.calendarPane.parentNode) {\n      // Use native DOM removal because we do not want any of the\n      // angular state of this element to be disposed.\n      this.calendarPane.parentNode.removeChild(this.calendarPane);\n    }\n  };\n\n  /**\n   * Open the floating calendar pane.\n   * @param {Event} event\n   */\n  DatePickerCtrl.prototype.openCalendarPane = function(event) {\n    if (!this.isCalendarOpen && !this.isDisabled && !this.inputFocusedOnWindowBlur) {\n      this.isCalendarOpen = this.isOpen = true;\n      this.calendarPaneOpenedFrom = event.target;\n\n      // Because the calendar pane is attached directly to the body, it is possible that the\n      // rest of the component (input, etc) is in a different scrolling container, such as\n      // an md-content. This means that, if the container is scrolled, the pane would remain\n      // stationary. To remedy this, we disable scrolling while the calendar pane is open, which\n      // also matches the native behavior for things like `<select>` on Mac and Windows.\n      this.$mdUtil.disableScrollAround(this.calendarPane);\n\n      this.attachCalendarPane();\n      this.focusCalendar();\n      this.evalAttr('ngFocus');\n\n      // Attach click listener inside of a timeout because, if this open call was triggered by a\n      // click, we don't want it to be immediately propogated up to the body and handled.\n      var self = this;\n      this.$mdUtil.nextTick(function() {\n        // Use 'touchstart` in addition to click in order to work on iOS Safari, where click\n        // events aren't propogated under most circumstances.\n        // See http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n        self.documentElement.on('click touchstart', self.bodyClickHandler);\n      }, false);\n\n      window.addEventListener(this.windowEventName, this.windowEventHandler);\n    }\n  };\n\n  /** Close the floating calendar pane. */\n  DatePickerCtrl.prototype.closeCalendarPane = function() {\n    if (this.isCalendarOpen) {\n      var self = this;\n\n      self.detachCalendarPane();\n      self.ngModelCtrl.$setTouched();\n      self.evalAttr('ngBlur');\n\n      self.documentElement.off('click touchstart', self.bodyClickHandler);\n      window.removeEventListener(self.windowEventName, self.windowEventHandler);\n\n      self.calendarPaneOpenedFrom.focus();\n      self.calendarPaneOpenedFrom = null;\n\n      if (self.openOnFocus) {\n        // Ensures that all focus events have fired before resetting\n        // the calendar. Prevents the calendar from reopening immediately\n        // in IE when md-open-on-focus is set. Also it needs to trigger\n        // a digest, in order to prevent issues where the calendar wasn't\n        // showing up on the next open.\n        self.$mdUtil.nextTick(reset);\n      } else {\n        reset();\n      }\n    }\n\n    function reset(){\n      self.isCalendarOpen = self.isOpen = false;\n    }\n  };\n\n  /** Gets the controller instance for the calendar in the floating pane. */\n  DatePickerCtrl.prototype.getCalendarCtrl = function() {\n    return angular.element(this.calendarPane.querySelector('md-calendar')).controller('mdCalendar');\n  };\n\n  /** Focus the calendar in the floating pane. */\n  DatePickerCtrl.prototype.focusCalendar = function() {\n    // Use a timeout in order to allow the calendar to be rendered, as it is gated behind an ng-if.\n    var self = this;\n    this.$mdUtil.nextTick(function() {\n      self.getCalendarCtrl().focus();\n    }, false);\n  };\n\n  /**\n   * Sets whether the input is currently focused.\n   * @param {boolean} isFocused\n   */\n  DatePickerCtrl.prototype.setFocused = function(isFocused) {\n    if (!isFocused) {\n      this.ngModelCtrl.$setTouched();\n    }\n\n    // The ng* expressions shouldn't be evaluated when mdOpenOnFocus is on,\n    // because they also get called when the calendar is opened/closed.\n    if (!this.openOnFocus) {\n      this.evalAttr(isFocused ? 'ngFocus' : 'ngBlur');\n    }\n\n    this.isFocused = isFocused;\n  };\n\n  /**\n   * Handles a click on the document body when the floating calendar pane is open.\n   * Closes the floating calendar pane if the click is not inside of it.\n   * @param {MouseEvent} event\n   */\n  DatePickerCtrl.prototype.handleBodyClick = function(event) {\n    if (this.isCalendarOpen) {\n      var isInCalendar = this.$mdUtil.getClosest(event.target, 'md-calendar');\n\n      if (!isInCalendar) {\n        this.closeCalendarPane();\n      }\n\n      this.$scope.$digest();\n    }\n  };\n\n  /**\n   * Handles the event when the user navigates away from the current tab. Keeps track of\n   * whether the input was focused when the event happened, in order to prevent the calendar\n   * from re-opening.\n   */\n  DatePickerCtrl.prototype.handleWindowBlur = function() {\n    this.inputFocusedOnWindowBlur = document.activeElement === this.inputElement;\n  };\n\n  /**\n   * Evaluates an attribute expression against the parent scope.\n   * @param {String} attr Name of the attribute to be evaluated.\n   */\n  DatePickerCtrl.prototype.evalAttr = function(attr) {\n    if (this.$attrs[attr]) {\n      this.$scope.$parent.$eval(this.$attrs[attr]);\n    }\n  };\n\n  /**\n   * Sets the ng-model value by first converting the date object into a strng. Converting it\n   * is necessary, in order to pass Angular's `input[type=\"date\"]` validations. Angular turns\n   * the value into a Date object afterwards, before setting it on the model.\n   * @param {Date=} value Date to be set as the model value.\n   */\n  DatePickerCtrl.prototype.setModelValue = function(value) {\n    var timezone = this.$mdUtil.getModelOption(this.ngModelCtrl, 'timezone');\n    this.ngModelCtrl.$setViewValue(this.ngDateFilter(value, 'yyyy-MM-dd', timezone));\n  };\n\n  /**\n   * Updates the datepicker when a model change occurred externally.\n   * @param {Date=} value Value that was set to the model.\n   */\n  DatePickerCtrl.prototype.onExternalChange = function(value) {\n    var timezone = this.$mdUtil.getModelOption(this.ngModelCtrl, 'timezone');\n\n    this.date = value;\n    this.inputElement.value = this.locale.formatDate(value, timezone);\n    this.mdInputContainer && this.mdInputContainer.setHasValue(!!value);\n    this.resizeInputElement();\n    this.updateErrorState();\n  };\n})();\n\nngmaterial.components.datepicker = angular.module(\"material.components.datepicker\");"]}