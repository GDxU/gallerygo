{"version":3,"sources":["button.js"],"names":[],"mappings":"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","file":"button-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.button');\ngoog.require('ngmaterial.core');\n/**\n * @ngdoc module\n * @name material.components.button\n * @description\n *\n * Button\n */\nMdButtonDirective['$inject'] = [\"$mdButtonInkRipple\", \"$mdTheming\", \"$mdAria\", \"$mdInteraction\"];\nMdAnchorDirective['$inject'] = [\"$mdTheming\"];\nangular\n    .module('material.components.button', [ 'material.core' ])\n    .directive('mdButton', MdButtonDirective)\n    .directive('a', MdAnchorDirective);\n\n\n/**\n * @private\n * @restrict E\n *\n * @description\n * `a` is an anchor directive used to inherit theme colors for md-primary, md-accent, etc.\n *\n * @usage\n *\n * <hljs lang=\"html\">\n *  <md-content md-theme=\"myTheme\">\n *    <a href=\"#chapter1\" class=\"md-accent\"></a>\n *  </md-content>\n * </hljs>\n */\nfunction MdAnchorDirective($mdTheming) {\n  return {\n    restrict : 'E',\n    link : function postLink(scope, element) {\n      // Make sure to inherit theme so stand-alone anchors\n      // support theme colors for md-primary, md-accent, etc.\n      $mdTheming(element);\n    }\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name mdButton\n * @module material.components.button\n *\n * @restrict E\n *\n * @description\n * `<md-button>` is a button directive with optional ink ripples (default enabled).\n *\n * If you supply a `href` or `ng-href` attribute, it will become an `<a>` element. Otherwise, it\n * will become a `<button>` element. As per the\n * [Material Design specifications](https://material.google.com/style/color.html#color-color-palette)\n * the FAB button background is filled with the accent color [by default]. The primary color palette\n * may be used with the `md-primary` class.\n *\n * Developers can also change the color palette of the button, by using the following classes\n * - `md-primary`\n * - `md-accent`\n * - `md-warn`\n *\n * See for example\n *\n * <hljs lang=\"html\">\n *   <md-button class=\"md-primary\">Primary Button</md-button>\n * </hljs>\n *\n * Button can be also raised, which means that they will use the current color palette to fill the button.\n *\n * <hljs lang=\"html\">\n *   <md-button class=\"md-accent md-raised\">Raised and Accent Button</md-button>\n * </hljs>\n *\n * It is also possible to disable the focus effect on the button, by using the following markup.\n *\n * <hljs lang=\"html\">\n *   <md-button class=\"md-no-focus\">No Focus Style</md-button>\n * </hljs>\n *\n * @param {boolean=} md-no-ink If present, disable ripple ink effects.\n * @param {expression=} ng-disabled En/Disable based on the expression\n * @param {string=} md-ripple-size Overrides the default ripple size logic. Options: `full`, `partial`, `auto`\n * @param {string=} aria-label Adds alternative text to button for accessibility, useful for icon buttons.\n * If no default text is found, a warning will be logged.\n *\n * @usage\n *\n * Regular buttons:\n *\n * <hljs lang=\"html\">\n *  <md-button> Flat Button </md-button>\n *  <md-button href=\"http://google.com\"> Flat link </md-button>\n *  <md-button class=\"md-raised\"> Raised Button </md-button>\n *  <md-button ng-disabled=\"true\"> Disabled Button </md-button>\n *  <md-button>\n *    <md-icon md-svg-src=\"your/icon.svg\"></md-icon>\n *    Register Now\n *  </md-button>\n * </hljs>\n *\n * FAB buttons:\n *\n * <hljs lang=\"html\">\n *  <md-button class=\"md-fab\" aria-label=\"FAB\">\n *    <md-icon md-svg-src=\"your/icon.svg\"></md-icon>\n *  </md-button>\n *  <!-- mini-FAB -->\n *  <md-button class=\"md-fab md-mini\" aria-label=\"Mini FAB\">\n *    <md-icon md-svg-src=\"your/icon.svg\"></md-icon>\n *  </md-button>\n *  <!-- Button with SVG Icon -->\n *  <md-button class=\"md-icon-button\" aria-label=\"Custom Icon Button\">\n *    <md-icon md-svg-icon=\"path/to/your.svg\"></md-icon>\n *  </md-button>\n * </hljs>\n */\nfunction MdButtonDirective($mdButtonInkRipple, $mdTheming, $mdAria, $mdInteraction) {\n\n  return {\n    restrict: 'EA',\n    replace: true,\n    transclude: true,\n    template: getTemplate,\n    link: postLink\n  };\n\n  function isAnchor(attr) {\n    return angular.isDefined(attr.href) || angular.isDefined(attr.ngHref) || angular.isDefined(attr.ngLink) || angular.isDefined(attr.uiSref);\n  }\n\n  function getTemplate(element, attr) {\n    if (isAnchor(attr)) {\n      return '<a class=\"md-button\" ng-transclude></a>';\n    } else {\n      //If buttons don't have type=\"button\", they will submit forms automatically.\n      var btnType = (typeof attr.type === 'undefined') ? 'button' : attr.type;\n      return '<button class=\"md-button\" type=\"' + btnType + '\" ng-transclude></button>';\n    }\n  }\n\n  function postLink(scope, element, attr) {\n    $mdTheming(element);\n    $mdButtonInkRipple.attach(scope, element);\n\n    // Use async expect to support possible bindings in the button label\n    $mdAria.expectWithoutText(element, 'aria-label');\n\n    // For anchor elements, we have to set tabindex manually when the\n    // element is disabled\n    if (isAnchor(attr) && angular.isDefined(attr.ngDisabled) ) {\n      scope.$watch(attr.ngDisabled, function(isDisabled) {\n        element.attr('tabindex', isDisabled ? -1 : 0);\n      });\n    }\n\n    // disabling click event when disabled is true\n    element.on('click', function(e){\n      if (attr.disabled === true) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    });\n\n    if (!element.hasClass('md-no-focus')) {\n\n      element.on('focus', function() {\n\n        // Only show the focus effect when being focused through keyboard interaction or programmatically\n        if (!$mdInteraction.isUserInvoked() || $mdInteraction.getLastInteractionType() === 'keyboard') {\n          element.addClass('md-focused');\n        }\n\n      });\n\n      element.on('blur', function() {\n        element.removeClass('md-focused');\n      });\n    }\n\n  }\n\n}\n\nngmaterial.components.button = angular.module(\"material.components.button\");"]}