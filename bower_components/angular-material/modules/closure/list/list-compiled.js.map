{"version":3,"sources":["list.js"],"names":[],"mappings":";;AAAA;;;;;;AAMA,KAAK,OAAL,CAAa,4BAAb;AACA,KAAK,OAAL,CAAa,iBAAb;AACA;;;;;;AAMA,iBAAiB,SAAjB,IAA8B,CAAC,QAAD,EAAW,UAAX,EAAuB,kBAAvB,CAA9B;AACA,gBAAgB,SAAhB,IAA6B,CAAC,YAAD,CAA7B;AACA,oBAAoB,SAApB,IAAiC,CAAC,SAAD,EAAY,aAAZ,EAA2B,SAA3B,EAAsC,UAAtC,CAAjC;AACA,QAAQ,MAAR,CAAe,0BAAf,EAA2C,CACzC,eADyC,CAA3C,EAGG,UAHH,CAGc,kBAHd,EAGkC,gBAHlC,EAIG,SAJH,CAIa,QAJb,EAIuB,eAJvB,EAKG,SALH,CAKa,YALb,EAK2B,mBAL3B;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,eAAT,CAAyB,UAAzB,EAAqC;AACnC,SAAO;AACL,cAAU,GADL;AAEL,aAAS,iBAAS,GAAT,EAAc;AACrB,UAAI,CAAJ,EAAO,YAAP,CAAoB,MAApB,EAA4B,MAA5B;AACA,aAAO,UAAP;AACD;AALI,GAAP;AAOD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA,SAAS,mBAAT,CAA6B,OAA7B,EAAsC,WAAtC,EAAmD,OAAnD,EAA4D,QAA5D,EAAsE;AACpE,MAAI,eAAe,CAAC,aAAD,EAAgB,WAAhB,EAA6B,SAA7B,CAAnB;AACA,SAAO;AACL,cAAU,GADL;AAEL,gBAAY,kBAFP;AAGL,aAAS,iBAAS,GAAT,EAAc,MAAd,EAAsB;;AAE7B;AACA,UAAI,iBAAiB,IAAI,CAAJ,EAAO,gBAAP,CAAwB,eAAxB,CAArB;AACA,UAAI,iBAAJ;AACA,UAAI,YAAJ;AACA,UAAI,gBAAgB,GAApB;;AAEA,UAAI,CAAJ,EAAO,YAAP,CAAoB,MAApB,EAA4B,UAA5B;;AAEA,UAAI,OAAO,OAAP,IAAkB,OAAO,UAAzB,IAAwC,OAAO,MAA/C,IAAyD,OAAO,IAAhE,IAAwE,OAAO,MAA/E,IAAyF,OAAO,YAApG,EAAkH;AAChH,eAAO,QAAP;AACD,OAFD,MAEO,IAAI,CAAC,IAAI,QAAJ,CAAa,aAAb,CAAL,EAAkC;;AAEvC,aAAK,IAAI,IAAI,CAAR,EAAW,IAAhB,EAAsB,OAAO,aAAa,CAAb,CAA7B,EAA8C,EAAE,CAAhD,EAAmD;AACjD,cAAI,eAAe,IAAI,CAAJ,EAAO,aAAP,CAAqB,IAArB,CAAnB,EAA+C;AAC7C,gCAAoB,IAApB;AACA;AACD;AACF;;AAED,YAAI,iBAAJ,EAAuB;AACrB,iBAAO,KAAP;AACD,SAFD,MAEO;AACL,cAAI,QAAJ,CAAa,aAAb;AACD;AAEF;;AAED;AACA;;AAEA,UAAI,qBAAqB,aAAa,QAAb,KAA0B,SAAnD,EAA8D;AAC5D;AACD;;AAED,eAAS,eAAT,GAA2B;AACzB,YAAI,cAAc,CAAC,WAAD,EAAc,aAAd,CAAlB;AACA,YAAI,MAAJ;;AAEA,aAAK,IAAI,IAAI,CAAR,EAAW,UAAhB,EAA4B,aAAa,YAAY,CAAZ,CAAzC,EAAyD,EAAE,CAA3D,EAA8D;AAC5D,cAAI,SAAS,IAAI,IAAJ,CAAS,UAAT,EAAqB,CAArB,CAAb,EAAsC;AACpC,gBAAI,CAAC,OAAO,YAAP,CAAoB,YAApB,CAAL,EAAwC;AACtC,kBAAI,IAAI,IAAI,IAAJ,CAAS,GAAT,EAAc,CAAd,CAAR;AACA,kBAAI,CAAC,CAAL,EAAQ;AACR,qBAAO,YAAP,CAAoB,YAApB,EAAkC,YAAY,EAAE,WAAhD;AACD;AACF;AACF;AACF;;AAED,eAAS,gBAAT,GAA4B;AAC1B,YAAI,SAAS,QAAQ,OAAR,CAAgB,YAAhB,CAAb;;AAEA,YAAI,eAAe,OAAO,MAAP,GAAgB,QAAhB,CAAyB,wBAAzB,KACA,aAAa,UAAb,CAAwB,iBAAxB,KAA8C,YADjE;;AAGA,YAAI,gBAAgB,MAApB;;AAEA,YAAI,YAAJ,EAAkB;AAChB;AACA,0BAAgB,OAAhB;AACD;;AAED;AACA,YAAI,CAAC,OAAO,IAAP,CAAY,kBAAZ,CAAL,EAAsC;AACpC,iBAAO,IAAP,CAAY,kBAAZ,EAAgC,gBAAgB,SAAhD;AACD;;AAED;AACA,YAAI,iBAAiB,OAAO,QAAP,GAAkB,EAAlB,CAAqB,CAArB,CAArB;AACA,YAAI,CAAC,cAAc,eAAe,CAAf,CAAd,CAAL,EAAuC;AACrC,yBAAe,IAAf,CAAoB,UAApB,EAAgC,sBAAhC;AACD;;AAED,YAAI,CAAC,eAAe,IAAf,CAAoB,YAApB,CAAL,EAAwC;AACtC,yBAAe,IAAf,CAAoB,YAApB,EAAkC,gBAAlC;AACD;AACF;;AAED,eAAS,MAAT,CAAgB,IAAhB,EAAsB;AACpB,YAAI,QAAQ,KAAZ,EAAmB;AACjB,0BAAgB,QAAQ,OAAR,CAAgB,8CAAhB,CAAhB;AACA,wBAAc,MAAd,CAAqB,IAAI,QAAJ,EAArB;AACA,cAAI,QAAJ,CAAa,gBAAb;AACD,SAJD,MAIO;AACL;AACA,0BAAgB,QAAQ,OAAR,CACd,wCACA,2CADA,GAEA,QAHc,CAAhB;;AAMA;AACA,cAAI,aAAa,QAAQ,OAAR,CACf,6CADe,CAAjB;;AAIA;AACA,kBAAQ,cAAR,CAAuB,GAAvB,EAA4B,YAA5B;;AAEA,yBAAe,IAAI,CAAJ,CAAf,EAAuB,WAAW,CAAX,CAAvB;;AAEA;AACA;AACA;AACA,cAAI,IAAI,QAAJ,CAAa,aAAb,CAAJ,EAAiC;AAC/B,uBAAW,QAAX,CAAoB,aAApB;AACD;;AAED;AACA,wBAAc,OAAd,CAAsB,UAAtB;AACA,wBAAc,QAAd,GAAyB,EAAzB,CAA4B,CAA5B,EAA+B,MAA/B,CAAsC,IAAI,QAAJ,EAAtC;;AAEA,cAAI,QAAJ,CAAa,iBAAb;AACD;;AAED,YAAI,CAAJ,EAAO,YAAP,CAAoB,UAApB,EAAgC,IAAhC;AACA,YAAI,MAAJ,CAAW,aAAX;AACD;;AAED,eAAS,kBAAT,GAA8B;AAC5B,YAAI,wBAAwB,QAAQ,OAAR,CAAgB,sCAAhB,CAA5B;;AAEA,gBAAQ,OAAR,CAAgB,cAAhB,EAAgC,UAAS,aAAT,EAAwB;AACtD,4BAAkB,aAAlB,EAAiC,qBAAjC;AACD,SAFD;;AAIA,sBAAc,MAAd,CAAqB,qBAArB;AACD;;AAED,eAAS,iBAAT,CAA2B,aAA3B,EAA0C,SAA1C,EAAqD;AACnD;AACA;AACA,YAAI,iBAAiB,CAAC,SAAS,aAAT,CAAlB,IAA6C,cAAc,YAAd,CAA2B,UAA3B,CAAjD,EAAyF;;AAEvF,kBAAQ,MAAR,CAAe,aAAf,EAA8B,YAA9B;AACA,cAAI,gBAAgB,QAAQ,OAAR,CAAgB,iDAAhB,CAApB;;AAEA;AACA;AACA;AACA,yBAAe,aAAf,EAA8B,cAAc,CAAd,CAA9B,EAAgD,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,CAAhD;;AAEA,wBAAc,YAAd,CAA2B,UAA3B,EAAuC,IAAvC;AACA,wBAAc,MAAd,CAAqB,aAArB;;AAEA,0BAAgB,cAAc,CAAd,CAAhB;AACD;;AAED,YAAI,kBAAkB,CAAC,cAAc,aAAd,CAAD,IAAkC,CAAC,OAAO,OAAR,IAAmB,iBAAiB,aAAjB,CAAvE,CAAJ,EAA8G;AAC5G;AACA;AACA,kBAAQ,OAAR,CAAgB,aAAhB,EAA+B,WAA/B,CAA2C,cAA3C;AACD;;AAED,YAAI,QAAJ,CAAa,mBAAb;AACA,kBAAU,MAAV,CAAiB,aAAjB;AACD;;AAED;;;;;;;;AAQA,eAAS,cAAT,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD;AACvD,YAAI,cAAc,QAAQ,QAAR,CAAiB,CACjC,OADiC,EACxB,UADwB,EACZ,aADY,EACG,YADH,EACiB,aADjB,EACgC,SADhC,EAEjC,MAFiC,EAEzB,SAFyB,EAEd,QAFc,EAEJ,iBAFI,EAEe,cAFf,CAAjB,CAAlB;;AAKA,YAAI,UAAJ,EAAgB;AACd,wBAAc,YAAY,MAAZ,CAAmB,QAAQ,QAAR,CAAiB,UAAjB,CAAnB,CAAd;AACD;;AAED,gBAAQ,OAAR,CAAgB,WAAhB,EAA6B,UAAS,IAAT,EAAe;AAC1C,cAAI,OAAO,YAAP,CAAoB,IAApB,CAAJ,EAA+B;AAC7B,wBAAY,YAAZ,CAAyB,IAAzB,EAA+B,OAAO,YAAP,CAAoB,IAApB,CAA/B;AACA,mBAAO,eAAP,CAAuB,IAAvB;AACD;AACF,SALD;AAMD;;AAED,eAAS,gBAAT,CAA0B,EAA1B,EAA8B;AAC5B,eAAO,aAAa,OAAb,CAAqB,GAAG,QAAH,CAAY,WAAZ,EAArB,KAAmD,CAAC,CAA3D;AACD;;AAED,eAAS,QAAT,CAAkB,EAAlB,EAAsB;AACpB,YAAI,WAAW,GAAG,QAAH,CAAY,WAAZ,EAAf;;AAEA,eAAO,YAAY,WAAZ,IAA2B,YAAY,QAA9C;AACD;;AAED,eAAS,aAAT,CAAwB,OAAxB,EAAiC;AAC/B,YAAI,OAAO,QAAQ,UAAnB;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,cAAI,OAAO,UAAP,CAAkB,KAAK,CAAL,EAAQ,IAA1B,MAAoC,SAAxC,EAAmD,OAAO,IAAP;AACpD;AACD,eAAO,KAAP;AACD;;AAED,aAAO,QAAP;;AAEA,eAAS,QAAT,CAAkB,MAAlB,EAA0B,QAA1B,EAAoC,KAApC,EAA2C,IAA3C,EAAiD;AAC/C,iBAAS,QAAT,CAAkB,KAAlB,EAD+C,CACjB;;AAE9B,YAAI,UAAgB,EAApB;AAAA,YACI,eAAgB,SAAS,CAAT,EAAY,iBADhC;AAAA,YAEI,eAAgB,SAAS,QAAT,CAAkB,iBAAlB,CAFpB;AAAA,YAGI,aAAgB,eAAe,aAAa,iBAA5B,GAAgD,YAHpE;AAAA,YAII,WAAgB,cAAc,cAAc,UAAd,CAJlC;AAAA,YAKI,YAAgB,SAAS,QAAT,CAAkB,aAAlB,CALpB;;AAOA;AACA;;AAEA,YAAI,QAAQ,MAAZ,EAAoB;AAClB,kBAAQ,OAAR,CAAgB,OAAhB,EAAyB,UAAS,KAAT,EAAgB;AACvC,oBAAQ,QAAQ,OAAR,CAAgB,KAAhB,CAAR;;AAEA,mBAAO,WAAP,GAAqB,KAArB;AACA,kBAAM,EAAN,CAAS,WAAT,EAAsB,YAAW;AAC/B,qBAAO,WAAP,GAAqB,IAArB;AACA,uBAAS,YAAU;AACjB,uBAAO,WAAP,GAAqB,KAArB;AACD,eAFD,EAEG,GAFH;AAGD,aALD,EAMC,EAND,CAMI,OANJ,EAMa,YAAW;AACtB,kBAAI,OAAO,WAAP,KAAuB,KAA3B,EAAkC;AAAE,yBAAS,QAAT,CAAkB,YAAlB;AAAkC;AACtE,oBAAM,EAAN,CAAS,MAAT,EAAiB,SAAS,WAAT,GAAuB;AACtC,yBAAS,WAAT,CAAqB,YAArB;AACA,sBAAM,GAAN,CAAU,MAAV,EAAkB,WAAlB;AACD,eAHD;AAID,aAZD;AAaD,WAjBD;AAkBD;;AAGD,iBAAS,cAAT,GAA0B;;AAExB,cAAI,gBAAgB,aAAa,QAA7B,IAAyC,CAAC,QAA1C,IAAsD,CAAC,SAA3D,EAAsE;;AAEpE,oBAAQ,OAAR,CAAgB,YAAhB,EAA8B,UAAS,IAAT,EAAe;;AAE3C;AACA;AACA,sBAAQ,OAAR,CAAgB,aAAa,gBAAb,CAA8B,OAAO,qBAArC,CAAhB,EAA6E,UAAS,KAAT,EAAgB;AAC3F,wBAAQ,IAAR,CAAa,KAAb;AACD,eAFD;AAGD,aAPD;AASD;AACF;;AAED,iBAAS,gBAAT,GAA4B;AAC1B,cAAI,QAAQ,MAAR,IAAkB,CAAlB,IAAuB,QAA3B,EAAqC;AACnC,qBAAS,QAAT,CAAkB,cAAlB;;AAEA,gBAAI,CAAC,QAAL,EAAe;AACb,mBAAK,YAAL,CAAkB,MAAlB,EAA0B,QAAQ,OAAR,CAAgB,SAAS,CAAT,EAAY,aAAZ,CAA0B,cAA1B,CAAhB,CAA1B;AACD;AACF;AACF;;AAED,iBAAS,kBAAT,CAA4B,KAA5B,EAAmC;AACjC,cAAI,oBAAoB,CAAC,WAAD,CAAxB;;AAEA;AACA,cAAI,CAAC,MAAM,IAAX,EAAiB;AACf,mBAAO,kBAAkB,OAAlB,CAA0B,MAAM,MAAN,CAAa,OAAb,CAAqB,WAArB,EAA1B,MAAkE,CAAC,CAA1E;AACD;;AAED;AACA;AACA,cAAI,UAAU,MAAM,IAAN,CAAW,OAAX,CAAmB,SAAS,QAAT,GAAoB,CAApB,CAAnB,CAAd;;AAEA,eAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAApB,EAA6B,GAA7B,EAAkC;AAChC,gBAAI,kBAAkB,OAAlB,CAA0B,MAAM,IAAN,CAAW,CAAX,EAAc,OAAd,CAAsB,WAAtB,EAA1B,MAAmE,CAAC,CAAxE,EAA2E;AACzE,qBAAO,IAAP;AACD;AACF;AACF;;AAED,YAAI,6BAA6B,SAA7B,0BAA6B,CAAS,CAAT,EAAY;AAC3C,cAAI,EAAE,MAAF,CAAS,QAAT,IAAqB,OAArB,IAAgC,EAAE,MAAF,CAAS,QAAT,IAAqB,UAArD,IAAmE,CAAC,EAAE,MAAF,CAAS,iBAAjF,EAAoG;AAClG,gBAAI,UAAU,EAAE,KAAF,IAAW,EAAE,OAA3B;AACA,gBAAI,WAAW,YAAY,QAAZ,CAAqB,KAApC,EAA2C;AACzC,kBAAI,UAAJ,EAAgB;AACd,2BAAW,KAAX;AACA,kBAAE,cAAF;AACA,kBAAE,eAAF;AACD;AACF;AACF;AACF,SAXD;;AAaA,YAAI,CAAC,QAAD,IAAa,CAAC,QAAQ,MAA1B,EAAkC;AAChC,wBAAc,WAAW,gBAAX,CAA4B,UAA5B,EAAwC,0BAAxC,CAAd;AACD;;AAED,iBAAS,GAAT,CAAa,OAAb;AACA,iBAAS,GAAT,CAAa,UAAb;;AAEA,YAAI,QAAQ,MAAR,IAAkB,CAAlB,IAAuB,UAA3B,EAAuC;AACrC,mBAAS,QAAT,GAAoB,EAApB,CAAuB,CAAvB,EAA0B,EAA1B,CAA6B,OAA7B,EAAsC,UAAS,CAAT,EAAY;AAChD;AACA;AACA,gBAAI,mBAAmB,CAAnB,CAAJ,EAA2B;;AAE3B,gBAAI,eAAe,QAAQ,UAAR,CAAmB,EAAE,MAArB,EAA6B,QAA7B,CAAnB;AACA,gBAAI,CAAC,YAAD,IAAiB,WAAW,QAAX,CAAoB,EAAE,MAAtB,CAArB,EAAoD;AAClD,sBAAQ,OAAR,CAAgB,OAAhB,EAAyB,UAAS,KAAT,EAAgB;AACvC,oBAAI,EAAE,MAAF,KAAa,KAAb,IAAsB,CAAC,MAAM,QAAN,CAAe,EAAE,MAAjB,CAA3B,EAAqD;AACnD,sBAAI,MAAM,QAAN,KAAmB,SAAvB,EAAkC;AAChC,4BAAQ,MAAM,QAAN,CAAe,CAAf,CAAR;AACD;AACD,0BAAQ,OAAR,CAAgB,KAAhB,EAAuB,cAAvB,CAAsC,OAAtC;AACD;AACF,eAPD;AAQD;AACF,WAhBD;AAiBD;;AAED,eAAO,GAAP,CAAW,UAAX,EAAuB,YAAY;AACjC,wBAAc,WAAW,mBAAX,CAA+B,UAA/B,EAA2C,0BAA3C,CAAd;AACD,SAFD;AAGD;AACF;AA7UI,GAAP;AA+UD;;AAED;;;;;;;AAOA,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,QAAlC,EAA4C,gBAA5C,EAA8D;AAC5D,MAAI,OAAO,IAAX;AACA,OAAK,YAAL,GAAoB,YAApB;;AAEA,WAAS,YAAT,CAAuB,KAAvB,EAA8B,OAA9B,EAAuC;AACrC,QAAI,UAAU,EAAd;AACA,qBAAiB,MAAjB,CAAwB,KAAxB,EAA+B,OAA/B,EAAwC,OAAxC;AACD;AACF;;AAED,WAAW,UAAX,CAAsB,IAAtB,GAA6B,QAAQ,MAAR,CAAe,0BAAf,CAA7B","file":"list-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\ngoog.provide('ngmaterial.components.list');\ngoog.require('ngmaterial.core');\n/**\n * @ngdoc module\n * @name material.components.list\n * @description\n * List module\n */\nMdListController['$inject'] = [\"$scope\", \"$element\", \"$mdListInkRipple\"];\nmdListDirective['$inject'] = [\"$mdTheming\"];\nmdListItemDirective['$inject'] = [\"$mdAria\", \"$mdConstant\", \"$mdUtil\", \"$timeout\"];\nangular.module('material.components.list', [\n  'material.core'\n])\n  .controller('MdListController', MdListController)\n  .directive('mdList', mdListDirective)\n  .directive('mdListItem', mdListItemDirective);\n\n/**\n * @ngdoc directive\n * @name mdList\n * @module material.components.list\n *\n * @restrict E\n *\n * @description\n * The `<md-list>` directive is a list container for 1..n `<md-list-item>` tags.\n *\n * @usage\n * <hljs lang=\"html\">\n * <md-list>\n *   <md-list-item class=\"md-2-line\" ng-repeat=\"item in todos\">\n *     <md-checkbox ng-model=\"item.done\"></md-checkbox>\n *     <div class=\"md-list-item-text\">\n *       <h3>{{item.title}}</h3>\n *       <p>{{item.description}}</p>\n *     </div>\n *   </md-list-item>\n * </md-list>\n * </hljs>\n */\n\nfunction mdListDirective($mdTheming) {\n  return {\n    restrict: 'E',\n    compile: function(tEl) {\n      tEl[0].setAttribute('role', 'list');\n      return $mdTheming;\n    }\n  };\n}\n/**\n * @ngdoc directive\n * @name mdListItem\n * @module material.components.list\n *\n * @restrict E\n *\n * @description\n * A `md-list-item` element can be used to represent some information in a row.<br/>\n *\n * @usage\n * ### Single Row Item\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <span>Single Row Item</span>\n *   </md-list-item>\n * </hljs>\n *\n * ### Multiple Lines\n * By using the following markup, you will be able to have two lines inside of one `md-list-item`.\n *\n * <hljs lang=\"html\">\n *   <md-list-item class=\"md-2-line\">\n *     <div class=\"md-list-item-text\" layout=\"column\">\n *       <p>First Line</p>\n *       <p>Second Line</p>\n *     </div>\n *   </md-list-item>\n * </hljs>\n *\n * It is also possible to have three lines inside of one list item.\n *\n * <hljs lang=\"html\">\n *   <md-list-item class=\"md-3-line\">\n *     <div class=\"md-list-item-text\" layout=\"column\">\n *       <p>First Line</p>\n *       <p>Second Line</p>\n *       <p>Third Line</p>\n *     </div>\n *   </md-list-item>\n * </hljs>\n *\n * ### Secondary Items\n * Secondary items are elements which will be aligned at the end of the `md-list-item`.\n *\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <span>Single Row Item</span>\n *     <md-button class=\"md-secondary\">\n *       Secondary Button\n *     </md-button>\n *   </md-list-item>\n * </hljs>\n *\n * It also possible to have multiple secondary items inside of one `md-list-item`.\n *\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <span>Single Row Item</span>\n *     <md-button class=\"md-secondary\">First Button</md-button>\n *     <md-button class=\"md-secondary\">Second Button</md-button>\n *   </md-list-item>\n * </hljs>\n *\n * ### Proxy Item\n * Proxies are elements, which will execute their specific action on click<br/>\n * Currently supported proxy items are\n * - `md-checkbox` (Toggle)\n * - `md-switch` (Toggle)\n * - `md-menu` (Open)\n *\n * This means, when using a supported proxy item inside of `md-list-item`, the list item will\n * automatically become clickable and executes the associated action of the proxy element on click.\n *\n * It is possible to disable this behavior by applying the `md-no-proxy` class to the list item.\n *\n * <hljs lang=\"html\">\n *   <md-list-item class=\"md-no-proxy\">\n *     <span>No Proxy List</span>\n *     <md-checkbox class=\"md-secondary\"></md-checkbox>\n *   </md-list-item>\n * </hljs>\n *\n * Here are a few examples of proxy elements inside of a list item.\n *\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <span>First Line</span>\n *     <md-checkbox class=\"md-secondary\"></md-checkbox>\n *   </md-list-item>\n * </hljs>\n *\n * The `md-checkbox` element will be automatically detected as a proxy element and will toggle on click.\n *\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <span>First Line</span>\n *     <md-switch class=\"md-secondary\"></md-switch>\n *   </md-list-item>\n * </hljs>\n *\n * The recognized `md-switch` will toggle its state, when the user clicks on the `md-list-item`.\n *\n * It is also possible to have a `md-menu` inside of a `md-list-item`.\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <p>Click anywhere to fire the secondary action</p>\n *     <md-menu class=\"md-secondary\">\n *       <md-button class=\"md-icon-button\">\n *         <md-icon md-svg-icon=\"communication:message\"></md-icon>\n *       </md-button>\n *       <md-menu-content width=\"4\">\n *         <md-menu-item>\n *           <md-button>\n *             Redial\n *           </md-button>\n *         </md-menu-item>\n *         <md-menu-item>\n *           <md-button>\n *             Check voicemail\n *           </md-button>\n *         </md-menu-item>\n *         <md-menu-divider></md-menu-divider>\n *         <md-menu-item>\n *           <md-button>\n *             Notifications\n *           </md-button>\n *         </md-menu-item>\n *       </md-menu-content>\n *     </md-menu>\n *   </md-list-item>\n * </hljs>\n *\n * The menu will automatically open, when the users clicks on the `md-list-item`.<br/>\n *\n * If the developer didn't specify any position mode on the menu, the `md-list-item` will automatically detect the\n * position mode and applies it to the `md-menu`.\n *\n * ### Avatars\n * Sometimes you may want to have some avatars inside of the `md-list-item `.<br/>\n * You are able to create a optimized icon for the list item, by applying the `.md-avatar` class on the `<img>` element.\n *\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <img src=\"my-avatar.png\" class=\"md-avatar\">\n *     <span>Alan Turing</span>\n * </hljs>\n *\n * When using `<md-icon>` for an avatar, you have to use the `.md-avatar-icon` class.\n * <hljs lang=\"html\">\n *   <md-list-item>\n *     <md-icon class=\"md-avatar-icon\" md-svg-icon=\"avatars:timothy\"></md-icon>\n *     <span>Timothy Kopra</span>\n *   </md-list-item>\n * </hljs>\n *\n * In cases, you have a `md-list-item`, which doesn't have any avatar,\n * but you want to align it with the other avatar items, you have to use the `.md-offset` class.\n *\n * <hljs lang=\"html\">\n *   <md-list-item class=\"md-offset\">\n *     <span>Jon Doe</span>\n *   </md-list-item>\n * </hljs>\n *\n * ### DOM modification\n * The `md-list-item` component automatically detects if the list item should be clickable.\n *\n * ---\n * If the `md-list-item` is clickable, we wrap all content inside of a `<div>` and create\n * an overlaying button, which will will execute the given actions (like `ng-href`, `ng-click`)\n *\n * We create an overlaying button, instead of wrapping all content inside of the button,\n * because otherwise some elements may not be clickable inside of the button.\n *\n * ---\n * When using a secondary item inside of your list item, the `md-list-item` component will automatically create\n * a secondary container at the end of the `md-list-item`, which contains all secondary items.\n *\n * The secondary item container is not static, because otherwise the overflow will not work properly on the\n * list item.\n *\n */\nfunction mdListItemDirective($mdAria, $mdConstant, $mdUtil, $timeout) {\n  var proxiedTypes = ['md-checkbox', 'md-switch', 'md-menu'];\n  return {\n    restrict: 'E',\n    controller: 'MdListController',\n    compile: function(tEl, tAttrs) {\n\n      // Check for proxy controls (no ng-click on parent, and a control inside)\n      var secondaryItems = tEl[0].querySelectorAll('.md-secondary');\n      var hasProxiedElement;\n      var proxyElement;\n      var itemContainer = tEl;\n\n      tEl[0].setAttribute('role', 'listitem');\n\n      if (tAttrs.ngClick || tAttrs.ngDblclick ||  tAttrs.ngHref || tAttrs.href || tAttrs.uiSref || tAttrs.ngAttrUiSref) {\n        wrapIn('button');\n      } else if (!tEl.hasClass('md-no-proxy')) {\n\n        for (var i = 0, type; type = proxiedTypes[i]; ++i) {\n          if (proxyElement = tEl[0].querySelector(type)) {\n            hasProxiedElement = true;\n            break;\n          }\n        }\n\n        if (hasProxiedElement) {\n          wrapIn('div');\n        } else {\n          tEl.addClass('md-no-proxy');\n        }\n\n      }\n\n      wrapSecondaryItems();\n      setupToggleAria();\n\n      if (hasProxiedElement && proxyElement.nodeName === \"MD-MENU\") {\n        setupProxiedMenu();\n      }\n\n      function setupToggleAria() {\n        var toggleTypes = ['md-switch', 'md-checkbox'];\n        var toggle;\n\n        for (var i = 0, toggleType; toggleType = toggleTypes[i]; ++i) {\n          if (toggle = tEl.find(toggleType)[0]) {\n            if (!toggle.hasAttribute('aria-label')) {\n              var p = tEl.find('p')[0];\n              if (!p) return;\n              toggle.setAttribute('aria-label', 'Toggle ' + p.textContent);\n            }\n          }\n        }\n      }\n\n      function setupProxiedMenu() {\n        var menuEl = angular.element(proxyElement);\n\n        var isEndAligned = menuEl.parent().hasClass('md-secondary-container') ||\n                           proxyElement.parentNode.firstElementChild !== proxyElement;\n\n        var xAxisPosition = 'left';\n\n        if (isEndAligned) {\n          // When the proxy item is aligned at the end of the list, we have to set the origin to the end.\n          xAxisPosition = 'right';\n        }\n\n        // Set the position mode / origin of the proxied menu.\n        if (!menuEl.attr('md-position-mode')) {\n          menuEl.attr('md-position-mode', xAxisPosition + ' target');\n        }\n\n        // Apply menu open binding to menu button\n        var menuOpenButton = menuEl.children().eq(0);\n        if (!hasClickEvent(menuOpenButton[0])) {\n          menuOpenButton.attr('ng-click', '$mdMenu.open($event)');\n        }\n\n        if (!menuOpenButton.attr('aria-label')) {\n          menuOpenButton.attr('aria-label', 'Open List Menu');\n        }\n      }\n\n      function wrapIn(type) {\n        if (type == 'div') {\n          itemContainer = angular.element('<div class=\"md-no-style md-list-item-inner\">');\n          itemContainer.append(tEl.contents());\n          tEl.addClass('md-proxy-focus');\n        } else {\n          // Element which holds the default list-item content.\n          itemContainer = angular.element(\n            '<div class=\"md-button md-no-style\">'+\n            '   <div class=\"md-list-item-inner\"></div>'+\n            '</div>'\n          );\n\n          // Button which shows ripple and executes primary action.\n          var buttonWrap = angular.element(\n            '<md-button class=\"md-no-style\"></md-button>'\n          );\n\n          // Expect the root element to have a label set. If not set, determine the label from the text content.\n          $mdAria.expectWithText(tEl, 'aria-label');\n\n          copyAttributes(tEl[0], buttonWrap[0]);\n\n          // We allow developers to specify the `md-no-focus` class, to disable the focus style\n          // on the button executor. Once more classes should be forwarded, we should probably make the\n          // class forward more generic.\n          if (tEl.hasClass('md-no-focus')) {\n            buttonWrap.addClass('md-no-focus');\n          }\n\n          // Append the button wrap before our list-item content, because it will overlay in relative.\n          itemContainer.prepend(buttonWrap);\n          itemContainer.children().eq(1).append(tEl.contents());\n\n          tEl.addClass('_md-button-wrap');\n        }\n\n        tEl[0].setAttribute('tabindex', '-1');\n        tEl.append(itemContainer);\n      }\n\n      function wrapSecondaryItems() {\n        var secondaryItemsWrapper = angular.element('<div class=\"md-secondary-container\">');\n\n        angular.forEach(secondaryItems, function(secondaryItem) {\n          wrapSecondaryItem(secondaryItem, secondaryItemsWrapper);\n        });\n\n        itemContainer.append(secondaryItemsWrapper);\n      }\n\n      function wrapSecondaryItem(secondaryItem, container) {\n        // If the current secondary item is not a button, but contains a ng-click attribute,\n        // the secondary item will be automatically wrapped inside of a button.\n        if (secondaryItem && !isButton(secondaryItem) && secondaryItem.hasAttribute('ng-click')) {\n\n          $mdAria.expect(secondaryItem, 'aria-label');\n          var buttonWrapper = angular.element('<md-button class=\"md-secondary md-icon-button\">');\n\n          // Copy the attributes from the secondary item to the generated button.\n          // We also support some additional attributes from the secondary item,\n          // because some developers may use a ngIf, ngHide, ngShow on their item.\n          copyAttributes(secondaryItem, buttonWrapper[0], ['ng-if', 'ng-hide', 'ng-show']);\n\n          secondaryItem.setAttribute('tabindex', '-1');\n          buttonWrapper.append(secondaryItem);\n\n          secondaryItem = buttonWrapper[0];\n        }\n\n        if (secondaryItem && (!hasClickEvent(secondaryItem) || (!tAttrs.ngClick && isProxiedElement(secondaryItem)))) {\n          // In this case we remove the secondary class, so we can identify it later, when we searching for the\n          // proxy items.\n          angular.element(secondaryItem).removeClass('md-secondary');\n        }\n\n        tEl.addClass('md-with-secondary');\n        container.append(secondaryItem);\n      }\n\n      /**\n       * Copies attributes from a source element to the destination element\n       * By default the function will copy the most necessary attributes, supported\n       * by the button executor for clickable list items.\n       * @param source Element with the specified attributes\n       * @param destination Element which will retrieve the attributes\n       * @param extraAttrs Additional attributes, which will be copied over.\n       */\n      function copyAttributes(source, destination, extraAttrs) {\n        var copiedAttrs = $mdUtil.prefixer([\n          'ng-if', 'ng-click', 'ng-dblclick', 'aria-label', 'ng-disabled', 'ui-sref',\n          'href', 'ng-href', 'target', 'ng-attr-ui-sref', 'ui-sref-opts'\n        ]);\n\n        if (extraAttrs) {\n          copiedAttrs = copiedAttrs.concat($mdUtil.prefixer(extraAttrs));\n        }\n\n        angular.forEach(copiedAttrs, function(attr) {\n          if (source.hasAttribute(attr)) {\n            destination.setAttribute(attr, source.getAttribute(attr));\n            source.removeAttribute(attr);\n          }\n        });\n      }\n\n      function isProxiedElement(el) {\n        return proxiedTypes.indexOf(el.nodeName.toLowerCase()) != -1;\n      }\n\n      function isButton(el) {\n        var nodeName = el.nodeName.toUpperCase();\n\n        return nodeName == \"MD-BUTTON\" || nodeName == \"BUTTON\";\n      }\n\n      function hasClickEvent (element) {\n        var attr = element.attributes;\n        for (var i = 0; i < attr.length; i++) {\n          if (tAttrs.$normalize(attr[i].name) === 'ngClick') return true;\n        }\n        return false;\n      }\n\n      return postLink;\n\n      function postLink($scope, $element, $attr, ctrl) {\n        $element.addClass('_md');     // private md component indicator for styling\n\n        var proxies       = [],\n            firstElement  = $element[0].firstElementChild,\n            isButtonWrap  = $element.hasClass('_md-button-wrap'),\n            clickChild    = isButtonWrap ? firstElement.firstElementChild : firstElement,\n            hasClick      = clickChild && hasClickEvent(clickChild),\n            noProxies     = $element.hasClass('md-no-proxy');\n\n        computeProxies();\n        computeClickable();\n\n        if (proxies.length) {\n          angular.forEach(proxies, function(proxy) {\n            proxy = angular.element(proxy);\n\n            $scope.mouseActive = false;\n            proxy.on('mousedown', function() {\n              $scope.mouseActive = true;\n              $timeout(function(){\n                $scope.mouseActive = false;\n              }, 100);\n            })\n            .on('focus', function() {\n              if ($scope.mouseActive === false) { $element.addClass('md-focused'); }\n              proxy.on('blur', function proxyOnBlur() {\n                $element.removeClass('md-focused');\n                proxy.off('blur', proxyOnBlur);\n              });\n            });\n          });\n        }\n\n\n        function computeProxies() {\n\n          if (firstElement && firstElement.children && !hasClick && !noProxies) {\n\n            angular.forEach(proxiedTypes, function(type) {\n\n              // All elements which are not capable for being used a proxy have the .md-secondary class\n              // applied. These items had been sorted out in the secondary wrap function.\n              angular.forEach(firstElement.querySelectorAll(type + ':not(.md-secondary)'), function(child) {\n                proxies.push(child);\n              });\n            });\n\n          }\n        }\n\n        function computeClickable() {\n          if (proxies.length == 1 || hasClick) {\n            $element.addClass('md-clickable');\n\n            if (!hasClick) {\n              ctrl.attachRipple($scope, angular.element($element[0].querySelector('.md-no-style')));\n            }\n          }\n        }\n\n        function isEventFromControl(event) {\n          var forbiddenControls = ['md-slider'];\n\n          // If there is no path property in the event, then we can assume that the event was not bubbled.\n          if (!event.path) {\n            return forbiddenControls.indexOf(event.target.tagName.toLowerCase()) !== -1;\n          }\n\n          // We iterate the event path up and check for a possible component.\n          // Our maximum index to search, is the list item root.\n          var maxPath = event.path.indexOf($element.children()[0]);\n\n          for (var i = 0; i < maxPath; i++) {\n            if (forbiddenControls.indexOf(event.path[i].tagName.toLowerCase()) !== -1) {\n              return true;\n            }\n          }\n        }\n\n        var clickChildKeypressListener = function(e) {\n          if (e.target.nodeName != 'INPUT' && e.target.nodeName != 'TEXTAREA' && !e.target.isContentEditable) {\n            var keyCode = e.which || e.keyCode;\n            if (keyCode == $mdConstant.KEY_CODE.SPACE) {\n              if (clickChild) {\n                clickChild.click();\n                e.preventDefault();\n                e.stopPropagation();\n              }\n            }\n          }\n        };\n\n        if (!hasClick && !proxies.length) {\n          clickChild && clickChild.addEventListener('keypress', clickChildKeypressListener);\n        }\n\n        $element.off('click');\n        $element.off('keypress');\n\n        if (proxies.length == 1 && clickChild) {\n          $element.children().eq(0).on('click', function(e) {\n            // When the event is coming from an control and it should not trigger the proxied element\n            // then we are skipping.\n            if (isEventFromControl(e)) return;\n\n            var parentButton = $mdUtil.getClosest(e.target, 'BUTTON');\n            if (!parentButton && clickChild.contains(e.target)) {\n              angular.forEach(proxies, function(proxy) {\n                if (e.target !== proxy && !proxy.contains(e.target)) {\n                  if (proxy.nodeName === 'MD-MENU') {\n                    proxy = proxy.children[0];\n                  }\n                  angular.element(proxy).triggerHandler('click');\n                }\n              });\n            }\n          });\n        }\n\n        $scope.$on('$destroy', function () {\n          clickChild && clickChild.removeEventListener('keypress', clickChildKeypressListener);\n        });\n      }\n    }\n  };\n}\n\n/*\n * @private\n * @ngdoc controller\n * @name MdListController\n * @module material.components.list\n *\n */\nfunction MdListController($scope, $element, $mdListInkRipple) {\n  var ctrl = this;\n  ctrl.attachRipple = attachRipple;\n\n  function attachRipple (scope, element) {\n    var options = {};\n    $mdListInkRipple.attach(scope, element, options);\n  }\n}\n\nngmaterial.components.list = angular.module(\"material.components.list\");"]}