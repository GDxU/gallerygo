{"version":3,"sources":["menuBar.js"],"names":[],"mappings":";;AAAA;;;;;;AAMA,CAAC,UAAU,MAAV,EAAkB,OAAlB,EAA2B,SAA3B,EAAsC;AACvC;;AAEA;;;;;AAKA,UAAQ,MAAR,CAAe,6BAAf,EAA8C,CAC5C,eAD4C,EAE5C,0BAF4C,EAG5C,0BAH4C,CAA9C;;AAOA,oBAAkB,SAAlB,IAA+B,CAAC,QAAD,EAAW,YAAX,EAAyB,UAAzB,EAAqC,QAArC,EAA+C,aAA/C,EAA8D,WAA9D,EAA2E,SAA3E,EAAsF,UAAtF,CAA/B;AACA,UACG,MADH,CACU,6BADV,EAEG,UAFH,CAEc,mBAFd,EAEmC,iBAFnC;;AAIA,MAAI,qBAAqB,CAAC,eAAD,EAAkB,iBAAlB,EAAqC,yBAArC,EAAgE,qBAAhE,CAAzB;;AAEA;;;AAGA,WAAS,iBAAT,CAA2B,MAA3B,EAAmC,UAAnC,EAA+C,QAA/C,EAAyD,MAAzD,EAAiE,WAAjE,EAA8E,SAA9E,EAAyF,OAAzF,EAAkG,QAAlG,EAA4G;AAC1G,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,QAAL,GAAgB,QAAhB;;AAEA,QAAI,OAAO,IAAX;AACA,YAAQ,OAAR,CAAgB,kBAAhB,EAAoC,UAAS,UAAT,EAAqB;AACvD,WAAK,UAAL,IAAmB,QAAQ,IAAR,CAAa,IAAb,EAAmB,KAAK,UAAL,CAAnB,CAAnB;AACD,KAFD;AAGD;;AAED,oBAAkB,SAAlB,CAA4B,IAA5B,GAAmC,YAAW;AAC5C,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,UAAU,KAAK,OAAnB;AACA,QAAI,SAAS,KAAK,MAAlB;;AAEA,QAAI,OAAO,IAAX;AACA,QAAI,gBAAgB,EAApB;AACA,aAAS,EAAT,CAAY,SAAZ,EAAuB,KAAK,aAA5B;AACA,SAAK,aAAL,GAAqB,QAAQ,UAAR,CAAmB,QAAnB,EAA6B,YAA7B,CAArB;;AAEA,kBAAc,IAAd,CAAmB,KAAK,UAAL,CAAgB,GAAhB,CAAoB,aAApB,EAAmC,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACxE,UAAI,KAAK,QAAL,GAAgB,OAAhB,CAAwB,GAAG,CAAH,CAAxB,KAAkC,CAAC,CAAvC,EAA0C;AACxC,iBAAS,CAAT,EAAY,SAAZ,CAAsB,GAAtB,CAA0B,SAA1B;AACA,WAAG,CAAH,EAAM,SAAN,CAAgB,GAAhB,CAAoB,SAApB;AACA,aAAK,iBAAL,GAAyB,GAAG,UAAH,CAAc,QAAd,CAAzB;AACA,aAAK,iBAAL,CAAuB,sBAAvB,CAA8C,KAAK,aAAnD;AACA,aAAK,iBAAL;AACD;AACF,KARkB,CAAnB;;AAUA,kBAAc,IAAd,CAAmB,KAAK,UAAL,CAAgB,GAAhB,CAAoB,cAApB,EAAoC,UAAS,KAAT,EAAgB,EAAhB,EAAoB,IAApB,EAA0B;AAC/E,UAAI,YAAY,KAAK,QAAL,EAAhB;AACA,UAAI,UAAU,OAAV,CAAkB,GAAG,CAAH,CAAlB,KAA4B,CAAC,CAAjC,EAAoC;AAClC,iBAAS,CAAT,EAAY,SAAZ,CAAsB,MAAtB,CAA6B,SAA7B;AACA,WAAG,CAAH,EAAM,SAAN,CAAgB,MAAhB,CAAuB,SAAvB;AACD;;AAED,UAAI,SAAS,CAAT,EAAY,QAAZ,CAAqB,GAAG,CAAH,CAArB,CAAJ,EAAiC;AAC/B,YAAI,aAAa,GAAG,CAAH,CAAjB;AACA,eAAO,cAAc,UAAU,OAAV,CAAkB,UAAlB,KAAiC,CAAC,CAAvD,EAA0D;AACxD,uBAAa,QAAQ,UAAR,CAAmB,UAAnB,EAA+B,SAA/B,EAA0C,IAA1C,CAAb;AACD;AACD,YAAI,UAAJ,EAAgB;AACd,cAAI,CAAC,KAAK,SAAV,EAAqB,WAAW,aAAX,CAAyB,wBAAzB,EAAmD,KAAnD;AACrB,eAAK,iBAAL,GAAyB,SAAzB;AACA,eAAK,kBAAL;AACA,eAAK,eAAL,CAAqB,IAArB;AACD;AACF;AACF,KAnBkB,CAAnB;;AAqBA,WAAO,GAAP,CAAW,UAAX,EAAuB,YAAW;AAChC,WAAK,kBAAL;AACA,aAAO,cAAc,MAArB,EAA6B;AAC3B,sBAAc,KAAd;AACD;AACF,KALD;;AAQA,SAAK,eAAL,CAAqB,IAArB;AACD,GAlDD;;AAoDA,oBAAkB,SAAlB,CAA4B,eAA5B,GAA8C,UAAS,OAAT,EAAkB;AAC9D,QAAI,OAAJ,EAAa,KAAK,QAAL,CAAc,CAAd,EAAiB,SAAjB,CAA2B,GAA3B,CAA+B,kBAA/B,EAAb,KACK,KAAK,QAAL,CAAc,CAAd,EAAiB,SAAjB,CAA2B,MAA3B,CAAkC,kBAAlC;AACN,GAHD;;AAKA,oBAAkB,SAAlB,CAA4B,iBAA5B,GAAgD,YAAW;AACzD,QAAI,KAAK,kBAAT,EAA6B;;AAE7B,QAAI,OAAO,IAAX;;AAEA,SAAK,kBAAL,GAA0B,IAA1B;;AAEA,QAAI,KAAK,aAAT,EAAwB;AACtB,WAAK,aAAL,CAAmB,SAAnB,CAA6B,GAA7B,CAAiC,kBAAjC;;AAEA;AACA,WAAK,OAAL,CAAa,QAAb,CAAsB,YAAW;AAC/B,gBAAQ,OAAR,CAAgB,KAAK,aAArB,EAAoC,EAApC,CAAuC,OAAvC,EAAgD,KAAK,iBAArD;AACD,OAFD,EAEG,KAFH;AAGD;;AAED,YACG,OADH,CACW,KAAK,QAAL,EADX,EAEG,EAFH,CAEM,YAFN,EAEoB,KAAK,eAFzB;AAGD,GAnBD;;AAqBA,oBAAkB,SAAlB,CAA4B,eAA5B,GAA8C,UAAS,CAAT,EAAY;AACxD,SAAK,eAAL,CAAqB,KAArB;AACA,QAAI,KAAK,kBAAT,EAA6B;AAC3B,WAAK,uBAAL,CAA6B,CAA7B;AACD;AACF,GALD;;AAOA,oBAAkB,SAAlB,CAA4B,kBAA5B,GAAiD,YAAW;AAC1D,QAAI,CAAC,KAAK,kBAAV,EAA8B;;AAE9B,SAAK,kBAAL,GAA0B,KAA1B;;AAEA,QAAI,KAAK,aAAT,EAAwB;AACtB,WAAK,aAAL,CAAmB,SAAnB,CAA6B,MAA7B,CAAoC,kBAApC;AACA,cAAQ,OAAR,CAAgB,KAAK,aAArB,EAAoC,GAApC,CAAwC,OAAxC,EAAiD,KAAK,iBAAtD;AACD;;AAED,YACG,OADH,CACW,KAAK,QAAL,EADX,EAEG,GAFH,CAEO,YAFP,EAEqB,KAAK,eAF1B;AAGD,GAbD;;AAeA,oBAAkB,SAAlB,CAA4B,uBAA5B,GAAsD,UAAS,CAAT,EAAY;AAChE,QAAI,SAAS,QAAQ,OAAR,CAAgB,EAAE,aAAlB,CAAb;AACA,QAAI,WAAW,OAAO,UAAP,CAAkB,QAAlB,CAAf;AACA,SAAK,eAAL,CAAqB,KAArB;AACA,SAAK,gBAAL,CAAsB,QAAtB;AACD,GALD;;AAOA,oBAAkB,SAAlB,CAA4B,gBAA5B,GAA+C,UAAS,QAAT,EAAmB;AAChE,QAAI,OAAO,IAAX;AACA,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,YAAY,KAAK,iBAArB,EAAwC;AACtC,eAAS,MAAT,CAAgB,KAAK,eAArB;AACA,WAAK,eAAL,GAAuB,SAAS,YAAW;AACzC,aAAK,eAAL,GAAuB,SAAvB;AACA,YAAI,KAAK,iBAAT,EAA4B;AAC1B,eAAK,iBAAL,CAAuB,KAAvB,CAA6B,IAA7B,EAAmC,EAAE,UAAU,IAAZ,EAAnC;AACD;AACD,iBAAS,IAAT;AACD,OANsB,EAMpB,GANoB,EAMf,KANe,CAAvB;AAOD;AACF,GAbD;;AAeA,oBAAkB,SAAlB,CAA4B,aAA5B,GAA4C,UAAS,CAAT,EAAY;AACtD,QAAI,WAAW,KAAK,WAAL,CAAiB,QAAhC;AACA,QAAI,cAAc,KAAK,iBAAvB;AACA,QAAI,UAAU,eAAe,YAAY,MAAzC;AACA,SAAK,eAAL,CAAqB,IAArB;AACA,QAAI,OAAJ,EAAa,OAAb,EAAsB,WAAtB;AACA,YAAQ,EAAE,OAAV;AACE,WAAK,SAAS,UAAd;AACE,YAAI,WAAJ,EAAiB;AACf,sBAAY,kBAAZ;AACD,SAFD,MAEO;AACL,eAAK,eAAL;AACD;AACD,kBAAU,IAAV;AACA;AACF,WAAK,SAAS,QAAd;AACE,uBAAe,YAAY,KAAZ,EAAf;AACA,kBAAU,IAAV;AACA;AACF,WAAK,SAAS,UAAd;AACE,kBAAU,KAAK,SAAL,CAAe,CAAC,CAAhB,CAAV;AACA,YAAI,OAAJ,EAAa;AACX,wBAAc,QAAQ,OAAR,CAAgB,OAAhB,EAAyB,UAAzB,CAAoC,QAApC,CAAd;AACA,eAAK,gBAAL,CAAsB,WAAtB;AACD;AACD,kBAAU,IAAV;AACA;AACF,WAAK,SAAS,WAAd;AACE,kBAAU,KAAK,SAAL,CAAe,CAAC,CAAhB,CAAV;AACA,YAAI,OAAJ,EAAa;AACX,wBAAc,QAAQ,OAAR,CAAgB,OAAhB,EAAyB,UAAzB,CAAoC,QAApC,CAAd;AACA,eAAK,gBAAL,CAAsB,WAAtB;AACD;AACD,kBAAU,IAAV;AACA;AA5BJ;AA8BA,QAAI,OAAJ,EAAa;AACX,WAAK,EAAE,cAAP,IAAyB,EAAE,cAAF,EAAzB;AACA,WAAK,EAAE,wBAAP,IAAmC,EAAE,wBAAF,EAAnC;AACD;AACF,GAxCD;;AA0CA,oBAAkB,SAAlB,CAA4B,SAA5B,GAAwC,UAAS,SAAT,EAAoB;AAC1D,QAAI,QAAQ,KAAK,QAAL,EAAZ;AACA,QAAI,eAAe,KAAK,mBAAL,EAAnB;;AAEA,QAAI,gBAAgB,CAAC,CAArB,EAAwB;AAAE,qBAAe,KAAK,gBAAL,EAAf;AAAyC;;AAEnE,QAAI,UAAU,KAAd;;AAEA,QAAI,gBAAgB,CAAC,CAArB,EAAwB;AAAE,qBAAe,CAAf,CAAkB,UAAU,IAAV;AAAiB,KAA7D,MACK,IACH,YAAY,CAAZ,IAAiB,eAAe,CAAhC,IACA,YAAY,CAAZ,IAAiB,eAAe,MAAM,MAAN,GAAe,SAF5C,EAGH;AACA,sBAAgB,SAAhB;AACA,gBAAU,IAAV;AACD;AACD,QAAI,OAAJ,EAAa;AACX,YAAM,YAAN,EAAoB,aAApB,CAAkC,QAAlC,EAA4C,KAA5C;AACA,aAAO,MAAM,YAAN,CAAP;AACD;AACF,GApBD;;AAsBA,oBAAkB,SAAlB,CAA4B,eAA5B,GAA8C,YAAW;AACvD,QAAI,OAAO,KAAK,cAAL,EAAX;AACA,YAAQ,QAAQ,OAAR,CAAgB,IAAhB,EAAsB,UAAtB,CAAiC,QAAjC,EAA2C,IAA3C,EAAR;AACD,GAHD;;AAKA,oBAAkB,SAAlB,CAA4B,QAA5B,GAAuC,YAAW;AAChD,QAAI,WAAW,KAAK,QAApB;AACA,WAAO,KAAK,OAAL,CAAa,YAAb,CAA0B,SAAS,CAAT,EAAY,QAAtC,EACJ,MADI,CACG,UAAS,EAAT,EAAa;AAAE,aAAO,GAAG,QAAH,IAAe,SAAtB;AAAkC,KADpD,CAAP;AAED,GAJD;;AAMA,oBAAkB,SAAlB,CAA4B,cAA5B,GAA6C,YAAW;AACtD,WAAO,KAAK,QAAL,GAAgB,KAAK,mBAAL,EAAhB,CAAP;AACD,GAFD;;AAIA,oBAAkB,SAAlB,CAA4B,mBAA5B,GAAkD,YAAW;AAC3D,QAAI,UAAU,KAAK,OAAnB;AACA,QAAI,YAAY,QAAQ,UAAR,CACd,KAAK,SAAL,CAAe,CAAf,EAAkB,aADJ,EAEd,SAFc,CAAhB;AAIA,QAAI,CAAC,SAAL,EAAgB,OAAO,CAAC,CAAR;;AAEhB,QAAI,eAAe,KAAK,QAAL,GAAgB,OAAhB,CAAwB,SAAxB,CAAnB;AACA,WAAO,YAAP;AACD,GAVD;;AAYA,oBAAkB,SAAlB,CAA4B,gBAA5B,GAA+C,YAAW;AACxD,QAAI,QAAQ,KAAK,QAAL,EAAZ;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,EAAE,CAApC,EAAuC;AACrC,UAAI,MAAM,CAAN,EAAS,SAAT,CAAmB,QAAnB,CAA4B,SAA5B,CAAJ,EAA4C,OAAO,CAAP;AAC7C;AACD,WAAO,CAAC,CAAR;AACD,GAND;;AAQA,oBAAkB,SAAlB,CAA4B,iBAA5B,GAAgD,UAAS,KAAT,EAAgB;AAC9D,QAAI,WAAW,KAAK,aAAL,CAAmB,iBAAnB,CAAf;;AAEA,QAAI,YAAY,CAAC,SAAS,QAAT,CAAkB,MAAM,MAAxB,CAAjB,EAAkD;AAChD,cAAQ,OAAR,CAAgB,QAAhB,EAA0B,UAA1B,CAAqC,QAArC,EAA+C,KAA/C,CAAqD,IAArD,EAA2D;AACzD,kBAAU;AAD+C,OAA3D;AAGD;AACF,GARD;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA,mBAAiB,SAAjB,IAA8B,CAAC,SAAD,EAAY,YAAZ,CAA9B;AACA,UACG,MADH,CACU,6BADV,EAEG,SAFH,CAEa,WAFb,EAE0B,gBAF1B;;AAIA;AACA,WAAS,gBAAT,CAA0B,OAA1B,EAAmC,UAAnC,EAA+C;AAC7C,WAAO;AACL,gBAAU,GADL;AAEL,eAAS,WAFJ;AAGL,kBAAY,mBAHP;;AAKL,eAAS,SAAS,OAAT,CAAiB,UAAjB,EAA6B,aAA7B,EAA4C;AACnD,YAAI,CAAC,cAAc,QAAnB,EAA6B;AAC3B,qBAAW,CAAX,EAAc,YAAd,CAA2B,MAA3B,EAAmC,SAAnC;AACD;AACD,gBAAQ,OAAR,CAAgB,WAAW,CAAX,EAAc,QAA9B,EAAwC,UAAS,MAAT,EAAiB;AACvD,cAAI,OAAO,QAAP,IAAmB,SAAvB,EAAkC;AAChC,gBAAI,CAAC,OAAO,YAAP,CAAoB,kBAApB,CAAL,EAA8C;AAC5C,qBAAO,YAAP,CAAoB,kBAApB,EAAwC,aAAxC;;AAEA;AACA;AACA,qBAAO,aAAP,CAAqB,sBAArB,EAA6C,YAA7C,CAA0D,MAA1D,EAAkE,UAAlE;AACD;AACD,gBAAI,aAAa,QAAQ,YAAR,CAAqB,OAAO,gBAAP,CAAwB,iBAAxB,CAArB,CAAjB;AACA,oBAAQ,OAAR,CAAgB,UAAhB,EAA4B,UAAS,SAAT,EAAoB;AAC9C,wBAAU,SAAV,CAAoB,GAApB,CAAwB,kBAAxB;AACA,wBAAU,SAAV,CAAoB,GAApB,CAAwB,UAAxB;AACA,kBAAI,CAAC,UAAU,YAAV,CAAuB,OAAvB,CAAL,EAAsC;AACpC,0BAAU,YAAV,CAAuB,OAAvB,EAAgC,CAAhC;AACD;AACF,aAND;AAOD;AACF,SAlBD;;AAoBA;AACA;AACA;AACA;AACA;AACA,mBAAW,IAAX,CAAgB,cAAhB,EAAgC,QAAhC,CAAyC,gBAAzC;;AAEA,eAAO,SAAS,QAAT,CAAkB,KAAlB,EAAyB,EAAzB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC;AAC9C,aAAG,QAAH,CAAY,KAAZ,EAD8C,CACtB;AACxB,qBAAW,KAAX,EAAkB,EAAlB;AACA,eAAK,IAAL;AACD,SAJD;AAKD;AAzCI,KAAP;AA4CD;;AAGD,UACG,MADH,CACU,6BADV,EAEG,SAFH,CAEa,eAFb,EAE8B,oBAF9B;;AAKA,WAAS,oBAAT,GAAgC;AAC9B,WAAO;AACL,gBAAU,GADL;AAEL,eAAS,iBAAS,UAAT,EAAqB,aAArB,EAAoC;AAC3C,YAAI,CAAC,cAAc,IAAnB,EAAyB;AACvB,qBAAW,CAAX,EAAc,YAAd,CAA2B,MAA3B,EAAmC,WAAnC;AACD;AACF;AANI,KAAP;AAQD;;AAGD,qBAAmB,SAAnB,IAAgC,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAAhC;AACA,UACG,MADH,CACU,6BADV,EAEG,UAFH,CAEc,oBAFd,EAEoC,kBAFpC;;AAKA;;;AAGA,WAAS,kBAAT,CAA4B,MAA5B,EAAoC,QAApC,EAA8C,MAA9C,EAAsD;AACpD,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACD;;AAED,qBAAmB,SAAnB,CAA6B,IAA7B,GAAoC,UAAS,OAAT,EAAkB;AACpD,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,SAAS,KAAK,MAAlB;;AAEA,SAAK,OAAL,GAAe,OAAf;AACA,QAAI,OAAO,IAAP,IAAe,UAAf,IAA6B,OAAO,IAAP,IAAe,OAAhD,EAAyD;AACvD,WAAK,IAAL,GAAa,OAAO,IAApB;AACA,WAAK,MAAL,GAAc,SAAS,CAAT,EAAY,QAAZ,CAAqB,CAArB,CAAd;AACA,WAAK,QAAL,GAAgB,SAAS,CAAT,EAAY,QAAZ,CAAqB,CAArB,CAAhB;AACA,UAAI,OAAJ,EAAa;AACX;AACA,aAAK,kBAAL;AACD;AACF;AACF,GAdD;;AAgBA;AACA;AACA;AACA;AACA,qBAAmB,SAAnB,CAA6B,WAA7B,GAA2C,YAAW;AACpD,QAAI,KAAK,KAAK,QAAL,CAAc,CAAd,CAAT;AACA,QAAI,aAAa,CAAC,MAAD,EAAS,UAAT,EAAqB,cAArB,EAAqC,cAArC,CAAjB;AACA,YAAQ,OAAR,CAAgB,UAAhB,EAA4B,UAAS,IAAT,EAAe;AACzC,SAAG,eAAH,CAAmB,IAAnB;AACD,KAFD;AAGD,GAND;;AAQA,qBAAmB,SAAnB,CAA6B,kBAA7B,GAAkD,YAAW;AAC3D,QAAI,OAAO,IAAX;AACA,QAAI,UAAU,KAAK,OAAnB;AACA,QAAI,SAAS,KAAK,MAAlB;AACA,QAAI,SAAS,KAAK,MAAlB;AACA,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,OAAO,KAAK,IAAhB;;AAEA,SAAK,WAAL,GAAmB,QAAQ,IAAR,CAAa,IAAb,EAAmB,KAAK,WAAxB,CAAnB;;AAEA,QAAI,OAAO,KAAK,MAAhB;AACA,QAAI,SAAS,QAAQ,OAAR,CAAgB,KAAK,QAArB,CAAb;AACA,QAAI,cAAc,KAAK,WAAvB;;AAEA,WAAO,QAAP,CAAgB,UAAhB,EAA4B,WAA5B;AACA,gBAAY,OAAO,QAAnB;;AAEA,YAAQ,OAAR,GAAkB,SAAS,MAAT,GAAkB;AAClC,WAAK,WAAL;AACA,UAAI,YAAJ,EAAkB;AAChB,aAAK,KAAL,CAAW,OAAX,GAAqB,EAArB;AACA,eAAO,IAAP,CAAY,cAAZ,EAA4B,MAA5B;AACD,OAHD,MAGO;AACL,aAAK,KAAL,CAAW,OAAX,GAAqB,MAArB;AACA,eAAO,IAAP,CAAY,cAAZ,EAA4B,OAA5B;AACD;AACF,KATD;;AAWA,WAAO,YAAP,CAAoB,QAAQ,OAA5B;;AAEA,aAAS,UAAT,GAAsB;AACpB,UAAI,QAAQ,OAAZ,EAAqB;AACnB,YAAI,MAAM,OAAO,OAAP,GAAiB,OAAO,KAAP,CAAa,OAAO,OAApB,CAAjB,GAAgD,OAAO,KAAjE;AACA,eAAO,QAAQ,WAAR,IAAuB,GAA9B;AACD,OAHD,MAGO;AACL,eAAO,QAAQ,WAAf;AACD;AACF;;AAED,aAAS,WAAT,CAAqB,QAArB,EAA+B;AAC7B,UAAI,QAAJ,EAAc;AACZ,eAAO,GAAP,CAAW,OAAX,EAAoB,WAApB;AACD,OAFD,MAEO;AACL,eAAO,EAAP,CAAU,OAAV,EAAmB,WAAnB;AACD;AACF;AACF,GA9CD;;AAgDA,qBAAmB,SAAnB,CAA6B,WAA7B,GAA2C,UAAS,CAAT,EAAY;AACrD,QAAI,OAAO,KAAK,IAAhB;AACA,QAAI,UAAU,KAAK,OAAnB;AACA,QAAI,SAAS,KAAK,MAAlB;AACA,QAAI,MAAJ;AACA,QAAI,QAAQ,UAAZ,EAAwB;AACtB,eAAS,CAAC,QAAQ,WAAlB;AACD,KAFD,MAEO,IAAI,QAAQ,OAAZ,EAAqB;AAC1B,eAAS,OAAO,OAAP,GAAiB,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAO,OAAzB,CAAjB,GAAqD,OAAO,KAArE;AACD;AACD,YAAQ,aAAR,CAAsB,MAAtB;AACA,YAAQ,OAAR;AACD,GAZD;;AAeA,oBAAkB,SAAlB,IAA+B,CAAC,SAAD,EAAY,aAAZ,EAA2B,iBAA3B,CAA/B;AACA,UACG,MADH,CACU,6BADV,EAEG,SAFH,CAEa,YAFb,EAE2B,iBAF3B;;AAIC;AACD,WAAS,iBAAT,CAA2B,OAA3B,EAAoC,WAApC,EAAiD,eAAjD,EAAkE;AAChE,WAAO;AACL,kBAAY,oBADP;AAEL,eAAS,CAAC,YAAD,EAAe,UAAf,CAFJ;AAGL,gBAAU,YAAY,cAHjB;AAIL,eAAS,iBAAS,UAAT,EAAqB,aAArB,EAAoC;AAC3C,YAAI,OAAO,cAAc,IAAzB;AACA,YAAI,iBAAiB,gBAArB;;AAEA;AACA;AACA,YAAI,CAAC,QAAQ,UAAR,IAAsB,QAAQ,OAA/B,KAA2C,WAAW,QAAX,CAAoB,cAApB,CAA/C,EAAoF;AAClF,cAAI,OAAO,WAAW,CAAX,EAAc,WAAzB;AACA,cAAI,WAAW,QAAQ,OAAR,CAAgB,uCAAhB,CAAf;AACA,cAAI,eAAe,0BAA0B,gBAAgB,SAA1C,GAAsD,cAAzE;;AAEA,mBAAS,IAAT,CAAc,IAAd;AACA,mBAAS,IAAT,CAAc,UAAd,EAA0B,GAA1B;;AAEA,qBAAW,IAAX,CAAgB,EAAhB;AACA,qBAAW,MAAX,CAAkB,QAAQ,OAAR,CAAgB,YAAhB,CAAlB;AACA,qBAAW,MAAX,CAAkB,QAAlB;AACA,qBAAW,QAAX,CAAoB,WAApB,EAAiC,WAAjC,CAA6C,cAA7C;;AAEA,qBAAW,MAAX,EAAmB,QAAQ,UAAR,GAAqB,kBAArB,GAA0C,eAA7D,EAA8E,QAA9E;AACA,2BAAiB,aAAjB;AAED,SAhBD,MAgBO;AACL,qBAAW,MAAX,EAAmB,UAAnB,EAA+B,WAAW,CAAX,EAAc,aAAd,CAA4B,sBAA5B,CAA/B;AACD;;AAGD,eAAO,UAAS,KAAT,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,KAA3B,EAAkC;AACvC,cAAI,OAAO,MAAM,CAAN,CAAX;AACA,cAAI,UAAU,MAAM,CAAN,CAAd;AACA,eAAK,IAAL,CAAU,OAAV;AACD,SAJD;;AAMA,iBAAS,UAAT,CAAoB,IAApB,EAA0B,GAA1B,EAA+B,EAA/B,EAAmC;AACjC,eAAK,MAAM,UAAX;AACA,cAAI,cAAc,QAAQ,OAA1B,EAAmC;AACjC,iBAAK,GAAG,CAAH,CAAL;AACD;AACD,cAAI,CAAC,GAAG,YAAH,CAAgB,IAAhB,CAAL,EAA4B;AAC1B,eAAG,YAAH,CAAgB,IAAhB,EAAsB,GAAtB;AACD;AACF;;AAED,iBAAS,gBAAT,CAA0B,SAA1B,EAAqC;AACnC,cAAI,aAAa,QAAQ,QAAR,CAAiB,SAAjB,CAAjB;;AAEA,kBAAQ,OAAR,CAAgB,UAAhB,EAA4B,UAAS,IAAT,EAAe;AACzC,gBAAI,WAAW,CAAX,EAAc,YAAd,CAA2B,IAA3B,CAAJ,EAAsC;AACpC,kBAAI,MAAM,WAAW,CAAX,EAAc,YAAd,CAA2B,IAA3B,CAAV;AACA,uBAAS,CAAT,EAAY,YAAZ,CAAyB,IAAzB,EAA+B,GAA/B;AACA,yBAAW,CAAX,EAAc,eAAd,CAA8B,IAA9B;AACD;AACF,WAND;AAOD;AACF;AA1DI,KAAP;AA4DD;AAEA,CAhmBD,EAgmBG,MAhmBH,EAgmBW,OAAO,OAhmBlB","file":"menuBar-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\n(function( window, angular, undefined ){\n\"use strict\";\n\n/**\n * @ngdoc module\n * @name material.components.menuBar\n */\n\nangular.module('material.components.menuBar', [\n  'material.core',\n  'material.components.icon',\n  'material.components.menu'\n]);\n\n\nMenuBarController['$inject'] = [\"$scope\", \"$rootScope\", \"$element\", \"$attrs\", \"$mdConstant\", \"$document\", \"$mdUtil\", \"$timeout\"];\nangular\n  .module('material.components.menuBar')\n  .controller('MenuBarController', MenuBarController);\n\nvar BOUND_MENU_METHODS = ['handleKeyDown', 'handleMenuHover', 'scheduleOpenHoveredMenu', 'cancelScheduledOpen'];\n\n/**\n * ngInject\n */\nfunction MenuBarController($scope, $rootScope, $element, $attrs, $mdConstant, $document, $mdUtil, $timeout) {\n  this.$element = $element;\n  this.$attrs = $attrs;\n  this.$mdConstant = $mdConstant;\n  this.$mdUtil = $mdUtil;\n  this.$document = $document;\n  this.$scope = $scope;\n  this.$rootScope = $rootScope;\n  this.$timeout = $timeout;\n\n  var self = this;\n  angular.forEach(BOUND_MENU_METHODS, function(methodName) {\n    self[methodName] = angular.bind(self, self[methodName]);\n  });\n}\n\nMenuBarController.prototype.init = function() {\n  var $element = this.$element;\n  var $mdUtil = this.$mdUtil;\n  var $scope = this.$scope;\n\n  var self = this;\n  var deregisterFns = [];\n  $element.on('keydown', this.handleKeyDown);\n  this.parentToolbar = $mdUtil.getClosest($element, 'MD-TOOLBAR');\n\n  deregisterFns.push(this.$rootScope.$on('$mdMenuOpen', function(event, el) {\n    if (self.getMenus().indexOf(el[0]) != -1) {\n      $element[0].classList.add('md-open');\n      el[0].classList.add('md-open');\n      self.currentlyOpenMenu = el.controller('mdMenu');\n      self.currentlyOpenMenu.registerContainerProxy(self.handleKeyDown);\n      self.enableOpenOnHover();\n    }\n  }));\n\n  deregisterFns.push(this.$rootScope.$on('$mdMenuClose', function(event, el, opts) {\n    var rootMenus = self.getMenus();\n    if (rootMenus.indexOf(el[0]) != -1) {\n      $element[0].classList.remove('md-open');\n      el[0].classList.remove('md-open');\n    }\n\n    if ($element[0].contains(el[0])) {\n      var parentMenu = el[0];\n      while (parentMenu && rootMenus.indexOf(parentMenu) == -1) {\n        parentMenu = $mdUtil.getClosest(parentMenu, 'MD-MENU', true);\n      }\n      if (parentMenu) {\n        if (!opts.skipFocus) parentMenu.querySelector('button:not([disabled])').focus();\n        self.currentlyOpenMenu = undefined;\n        self.disableOpenOnHover();\n        self.setKeyboardMode(true);\n      }\n    }\n  }));\n\n  $scope.$on('$destroy', function() {\n    self.disableOpenOnHover();\n    while (deregisterFns.length) {\n      deregisterFns.shift()();\n    }\n  });\n\n\n  this.setKeyboardMode(true);\n};\n\nMenuBarController.prototype.setKeyboardMode = function(enabled) {\n  if (enabled) this.$element[0].classList.add('md-keyboard-mode');\n  else this.$element[0].classList.remove('md-keyboard-mode');\n};\n\nMenuBarController.prototype.enableOpenOnHover = function() {\n  if (this.openOnHoverEnabled) return;\n\n  var self = this;\n\n  self.openOnHoverEnabled = true;\n\n  if (self.parentToolbar) {\n    self.parentToolbar.classList.add('md-has-open-menu');\n\n    // Needs to be on the next tick so it doesn't close immediately.\n    self.$mdUtil.nextTick(function() {\n      angular.element(self.parentToolbar).on('click', self.handleParentClick);\n    }, false);\n  }\n\n  angular\n    .element(self.getMenus())\n    .on('mouseenter', self.handleMenuHover);\n};\n\nMenuBarController.prototype.handleMenuHover = function(e) {\n  this.setKeyboardMode(false);\n  if (this.openOnHoverEnabled) {\n    this.scheduleOpenHoveredMenu(e);\n  }\n};\n\nMenuBarController.prototype.disableOpenOnHover = function() {\n  if (!this.openOnHoverEnabled) return;\n\n  this.openOnHoverEnabled = false;\n\n  if (this.parentToolbar) {\n    this.parentToolbar.classList.remove('md-has-open-menu');\n    angular.element(this.parentToolbar).off('click', this.handleParentClick);\n  }\n\n  angular\n    .element(this.getMenus())\n    .off('mouseenter', this.handleMenuHover);\n};\n\nMenuBarController.prototype.scheduleOpenHoveredMenu = function(e) {\n  var menuEl = angular.element(e.currentTarget);\n  var menuCtrl = menuEl.controller('mdMenu');\n  this.setKeyboardMode(false);\n  this.scheduleOpenMenu(menuCtrl);\n};\n\nMenuBarController.prototype.scheduleOpenMenu = function(menuCtrl) {\n  var self = this;\n  var $timeout = this.$timeout;\n  if (menuCtrl != self.currentlyOpenMenu) {\n    $timeout.cancel(self.pendingMenuOpen);\n    self.pendingMenuOpen = $timeout(function() {\n      self.pendingMenuOpen = undefined;\n      if (self.currentlyOpenMenu) {\n        self.currentlyOpenMenu.close(true, { closeAll: true });\n      }\n      menuCtrl.open();\n    }, 200, false);\n  }\n};\n\nMenuBarController.prototype.handleKeyDown = function(e) {\n  var keyCodes = this.$mdConstant.KEY_CODE;\n  var currentMenu = this.currentlyOpenMenu;\n  var wasOpen = currentMenu && currentMenu.isOpen;\n  this.setKeyboardMode(true);\n  var handled, newMenu, newMenuCtrl;\n  switch (e.keyCode) {\n    case keyCodes.DOWN_ARROW:\n      if (currentMenu) {\n        currentMenu.focusMenuContainer();\n      } else {\n        this.openFocusedMenu();\n      }\n      handled = true;\n      break;\n    case keyCodes.UP_ARROW:\n      currentMenu && currentMenu.close();\n      handled = true;\n      break;\n    case keyCodes.LEFT_ARROW:\n      newMenu = this.focusMenu(-1);\n      if (wasOpen) {\n        newMenuCtrl = angular.element(newMenu).controller('mdMenu');\n        this.scheduleOpenMenu(newMenuCtrl);\n      }\n      handled = true;\n      break;\n    case keyCodes.RIGHT_ARROW:\n      newMenu = this.focusMenu(+1);\n      if (wasOpen) {\n        newMenuCtrl = angular.element(newMenu).controller('mdMenu');\n        this.scheduleOpenMenu(newMenuCtrl);\n      }\n      handled = true;\n      break;\n  }\n  if (handled) {\n    e && e.preventDefault && e.preventDefault();\n    e && e.stopImmediatePropagation && e.stopImmediatePropagation();\n  }\n};\n\nMenuBarController.prototype.focusMenu = function(direction) {\n  var menus = this.getMenus();\n  var focusedIndex = this.getFocusedMenuIndex();\n\n  if (focusedIndex == -1) { focusedIndex = this.getOpenMenuIndex(); }\n\n  var changed = false;\n\n  if (focusedIndex == -1) { focusedIndex = 0; changed = true; }\n  else if (\n    direction < 0 && focusedIndex > 0 ||\n    direction > 0 && focusedIndex < menus.length - direction\n  ) {\n    focusedIndex += direction;\n    changed = true;\n  }\n  if (changed) {\n    menus[focusedIndex].querySelector('button').focus();\n    return menus[focusedIndex];\n  }\n};\n\nMenuBarController.prototype.openFocusedMenu = function() {\n  var menu = this.getFocusedMenu();\n  menu && angular.element(menu).controller('mdMenu').open();\n};\n\nMenuBarController.prototype.getMenus = function() {\n  var $element = this.$element;\n  return this.$mdUtil.nodesToArray($element[0].children)\n    .filter(function(el) { return el.nodeName == 'MD-MENU'; });\n};\n\nMenuBarController.prototype.getFocusedMenu = function() {\n  return this.getMenus()[this.getFocusedMenuIndex()];\n};\n\nMenuBarController.prototype.getFocusedMenuIndex = function() {\n  var $mdUtil = this.$mdUtil;\n  var focusedEl = $mdUtil.getClosest(\n    this.$document[0].activeElement,\n    'MD-MENU'\n  );\n  if (!focusedEl) return -1;\n\n  var focusedIndex = this.getMenus().indexOf(focusedEl);\n  return focusedIndex;\n};\n\nMenuBarController.prototype.getOpenMenuIndex = function() {\n  var menus = this.getMenus();\n  for (var i = 0; i < menus.length; ++i) {\n    if (menus[i].classList.contains('md-open')) return i;\n  }\n  return -1;\n};\n\nMenuBarController.prototype.handleParentClick = function(event) {\n  var openMenu = this.querySelector('md-menu.md-open');\n\n  if (openMenu && !openMenu.contains(event.target)) {\n    angular.element(openMenu).controller('mdMenu').close(true, {\n      closeAll: true\n    });\n  }\n};\n\n/**\n * @ngdoc directive\n * @name mdMenuBar\n * @module material.components.menuBar\n * @restrict E\n * @description\n *\n * Menu bars are containers that hold multiple menus. They change the behavior and appearence\n * of the `md-menu` directive to behave similar to an operating system provided menu.\n *\n * @usage\n * <hljs lang=\"html\">\n * <md-menu-bar>\n *   <md-menu>\n *     <button ng-click=\"$mdMenu.open()\">\n *       File\n *     </button>\n *     <md-menu-content>\n *       <md-menu-item>\n *         <md-button ng-click=\"ctrl.sampleAction('share', $event)\">\n *           Share...\n *         </md-button>\n *       </md-menu-item>\n *       <md-menu-divider></md-menu-divider>\n *       <md-menu-item>\n *       <md-menu-item>\n *         <md-menu>\n *           <md-button ng-click=\"$mdMenu.open()\">New</md-button>\n *           <md-menu-content>\n *             <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Document', $event)\">Document</md-button></md-menu-item>\n *             <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Spreadsheet', $event)\">Spreadsheet</md-button></md-menu-item>\n *             <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Presentation', $event)\">Presentation</md-button></md-menu-item>\n *             <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Form', $event)\">Form</md-button></md-menu-item>\n *             <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Drawing', $event)\">Drawing</md-button></md-menu-item>\n *           </md-menu-content>\n *         </md-menu>\n *       </md-menu-item>\n *     </md-menu-content>\n *   </md-menu>\n * </md-menu-bar>\n * </hljs>\n *\n * ## Menu Bar Controls\n *\n * You may place `md-menu-items` that function as controls within menu bars.\n * There are two modes that are exposed via the `type` attribute of the `md-menu-item`.\n * `type=\"checkbox\"` will function as a boolean control for the `ng-model` attribute of the\n * `md-menu-item`. `type=\"radio\"` will function like a radio button, setting the `ngModel`\n * to the `string` value of the `value` attribute. If you need non-string values, you can use\n * `ng-value` to provide an expression (this is similar to how angular's native `input[type=radio]` works.\n *\n * <hljs lang=\"html\">\n * <md-menu-bar>\n *  <md-menu>\n *    <button ng-click=\"$mdMenu.open()\">\n *      Sample Menu\n *    </button>\n *    <md-menu-content>\n *      <md-menu-item type=\"checkbox\" ng-model=\"settings.allowChanges\">Allow changes</md-menu-item>\n *      <md-menu-divider></md-menu-divider>\n *      <md-menu-item type=\"radio\" ng-model=\"settings.mode\" ng-value=\"1\">Mode 1</md-menu-item>\n *      <md-menu-item type=\"radio\" ng-model=\"settings.mode\" ng-value=\"1\">Mode 2</md-menu-item>\n *      <md-menu-item type=\"radio\" ng-model=\"settings.mode\" ng-value=\"1\">Mode 3</md-menu-item>\n *    </md-menu-content>\n *  </md-menu>\n * </md-menu-bar>\n * </hljs>\n *\n *\n * ### Nesting Menus\n *\n * Menus may be nested within menu bars. This is commonly called cascading menus.\n * To nest a menu place the nested menu inside the content of the `md-menu-item`.\n * <hljs lang=\"html\">\n * <md-menu-item>\n *   <md-menu>\n *     <button ng-click=\"$mdMenu.open()\">New</md-button>\n *     <md-menu-content>\n *       <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Document', $event)\">Document</md-button></md-menu-item>\n *       <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Spreadsheet', $event)\">Spreadsheet</md-button></md-menu-item>\n *       <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Presentation', $event)\">Presentation</md-button></md-menu-item>\n *       <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Form', $event)\">Form</md-button></md-menu-item>\n *       <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Drawing', $event)\">Drawing</md-button></md-menu-item>\n *     </md-menu-content>\n *   </md-menu>\n * </md-menu-item>\n * </hljs>\n *\n */\n\nMenuBarDirective['$inject'] = [\"$mdUtil\", \"$mdTheming\"];\nangular\n  .module('material.components.menuBar')\n  .directive('mdMenuBar', MenuBarDirective);\n\n/* ngInject */\nfunction MenuBarDirective($mdUtil, $mdTheming) {\n  return {\n    restrict: 'E',\n    require: 'mdMenuBar',\n    controller: 'MenuBarController',\n\n    compile: function compile(templateEl, templateAttrs) {\n      if (!templateAttrs.ariaRole) {\n        templateEl[0].setAttribute('role', 'menubar');\n      }\n      angular.forEach(templateEl[0].children, function(menuEl) {\n        if (menuEl.nodeName == 'MD-MENU') {\n          if (!menuEl.hasAttribute('md-position-mode')) {\n            menuEl.setAttribute('md-position-mode', 'left bottom');\n\n            // Since we're in the compile function and actual `md-buttons` are not compiled yet,\n            // we need to query for possible `md-buttons` as well.\n            menuEl.querySelector('button, a, md-button').setAttribute('role', 'menuitem');\n          }\n          var contentEls = $mdUtil.nodesToArray(menuEl.querySelectorAll('md-menu-content'));\n          angular.forEach(contentEls, function(contentEl) {\n            contentEl.classList.add('md-menu-bar-menu');\n            contentEl.classList.add('md-dense');\n            if (!contentEl.hasAttribute('width')) {\n              contentEl.setAttribute('width', 5);\n            }\n          });\n        }\n      });\n\n      // Mark the child menu items that they're inside a menu bar. This is necessary,\n      // because mnMenuItem has special behaviour during compilation, depending on\n      // whether it is inside a mdMenuBar. We can usually figure this out via the DOM,\n      // however if a directive that uses documentFragment is applied to the child (e.g. ngRepeat),\n      // the element won't have a parent and won't compile properly.\n      templateEl.find('md-menu-item').addClass('md-in-menu-bar');\n\n      return function postLink(scope, el, attr, ctrl) {\n        el.addClass('_md');     // private md component indicator for styling\n        $mdTheming(scope, el);\n        ctrl.init();\n      };\n    }\n  };\n\n}\n\n\nangular\n  .module('material.components.menuBar')\n  .directive('mdMenuDivider', MenuDividerDirective);\n\n\nfunction MenuDividerDirective() {\n  return {\n    restrict: 'E',\n    compile: function(templateEl, templateAttrs) {\n      if (!templateAttrs.role) {\n        templateEl[0].setAttribute('role', 'separator');\n      }\n    }\n  };\n}\n\n\nMenuItemController['$inject'] = [\"$scope\", \"$element\", \"$attrs\"];\nangular\n  .module('material.components.menuBar')\n  .controller('MenuItemController', MenuItemController);\n\n\n/**\n * ngInject\n */\nfunction MenuItemController($scope, $element, $attrs) {\n  this.$element = $element;\n  this.$attrs = $attrs;\n  this.$scope = $scope;\n}\n\nMenuItemController.prototype.init = function(ngModel) {\n  var $element = this.$element;\n  var $attrs = this.$attrs;\n\n  this.ngModel = ngModel;\n  if ($attrs.type == 'checkbox' || $attrs.type == 'radio') {\n    this.mode  = $attrs.type;\n    this.iconEl = $element[0].children[0];\n    this.buttonEl = $element[0].children[1];\n    if (ngModel) {\n      // Clear ngAria set attributes\n      this.initClickListeners();\n    }\n  }\n};\n\n// ngAria auto sets attributes on a menu-item with a ngModel.\n// We don't want this because our content (buttons) get the focus\n// and set their own aria attributes appropritately. Having both\n// breaks NVDA / JAWS. This undeoes ngAria's attrs.\nMenuItemController.prototype.clearNgAria = function() {\n  var el = this.$element[0];\n  var clearAttrs = ['role', 'tabindex', 'aria-invalid', 'aria-checked'];\n  angular.forEach(clearAttrs, function(attr) {\n    el.removeAttribute(attr);\n  });\n};\n\nMenuItemController.prototype.initClickListeners = function() {\n  var self = this;\n  var ngModel = this.ngModel;\n  var $scope = this.$scope;\n  var $attrs = this.$attrs;\n  var $element = this.$element;\n  var mode = this.mode;\n\n  this.handleClick = angular.bind(this, this.handleClick);\n\n  var icon = this.iconEl;\n  var button = angular.element(this.buttonEl);\n  var handleClick = this.handleClick;\n\n  $attrs.$observe('disabled', setDisabled);\n  setDisabled($attrs.disabled);\n\n  ngModel.$render = function render() {\n    self.clearNgAria();\n    if (isSelected()) {\n      icon.style.display = '';\n      button.attr('aria-checked', 'true');\n    } else {\n      icon.style.display = 'none';\n      button.attr('aria-checked', 'false');\n    }\n  };\n\n  $scope.$$postDigest(ngModel.$render);\n\n  function isSelected() {\n    if (mode == 'radio') {\n      var val = $attrs.ngValue ? $scope.$eval($attrs.ngValue) : $attrs.value;\n      return ngModel.$modelValue == val;\n    } else {\n      return ngModel.$modelValue;\n    }\n  }\n\n  function setDisabled(disabled) {\n    if (disabled) {\n      button.off('click', handleClick);\n    } else {\n      button.on('click', handleClick);\n    }\n  }\n};\n\nMenuItemController.prototype.handleClick = function(e) {\n  var mode = this.mode;\n  var ngModel = this.ngModel;\n  var $attrs = this.$attrs;\n  var newVal;\n  if (mode == 'checkbox') {\n    newVal = !ngModel.$modelValue;\n  } else if (mode == 'radio') {\n    newVal = $attrs.ngValue ? this.$scope.$eval($attrs.ngValue) : $attrs.value;\n  }\n  ngModel.$setViewValue(newVal);\n  ngModel.$render();\n};\n\n\nMenuItemDirective['$inject'] = [\"$mdUtil\", \"$mdConstant\", \"$$mdSvgRegistry\"];\nangular\n  .module('material.components.menuBar')\n  .directive('mdMenuItem', MenuItemDirective);\n\n /* ngInject */\nfunction MenuItemDirective($mdUtil, $mdConstant, $$mdSvgRegistry) {\n  return {\n    controller: 'MenuItemController',\n    require: ['mdMenuItem', '?ngModel'],\n    priority: $mdConstant.BEFORE_NG_ARIA,\n    compile: function(templateEl, templateAttrs) {\n      var type = templateAttrs.type;\n      var inMenuBarClass = 'md-in-menu-bar';\n\n      // Note: This allows us to show the `check` icon for the md-menu-bar items.\n      // The `md-in-menu-bar` class is set by the mdMenuBar directive.\n      if ((type == 'checkbox' || type == 'radio') && templateEl.hasClass(inMenuBarClass)) {\n        var text = templateEl[0].textContent;\n        var buttonEl = angular.element('<md-button type=\"button\"></md-button>');\n        var iconTemplate = '<md-icon md-svg-src=\"' + $$mdSvgRegistry.mdChecked + '\"></md-icon>';\n\n        buttonEl.html(text);\n        buttonEl.attr('tabindex', '0');\n\n        templateEl.html('');\n        templateEl.append(angular.element(iconTemplate));\n        templateEl.append(buttonEl);\n        templateEl.addClass('md-indent').removeClass(inMenuBarClass);\n\n        setDefault('role', type == 'checkbox' ? 'menuitemcheckbox' : 'menuitemradio', buttonEl);\n        moveAttrToButton('ng-disabled');\n\n      } else {\n        setDefault('role', 'menuitem', templateEl[0].querySelector('md-button, button, a'));\n      }\n\n\n      return function(scope, el, attrs, ctrls) {\n        var ctrl = ctrls[0];\n        var ngModel = ctrls[1];\n        ctrl.init(ngModel);\n      };\n\n      function setDefault(attr, val, el) {\n        el = el || templateEl;\n        if (el instanceof angular.element) {\n          el = el[0];\n        }\n        if (!el.hasAttribute(attr)) {\n          el.setAttribute(attr, val);\n        }\n      }\n\n      function moveAttrToButton(attribute) {\n        var attributes = $mdUtil.prefixer(attribute);\n\n        angular.forEach(attributes, function(attr) {\n          if (templateEl[0].hasAttribute(attr)) {\n            var val = templateEl[0].getAttribute(attr);\n            buttonEl[0].setAttribute(attr, val);\n            templateEl[0].removeAttribute(attr);\n          }\n        });\n      }\n    }\n  };\n}\n\n})(window, window.angular);"]}