{"version":3,"sources":["toolbar.js"],"names":[],"mappings":"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","file":"toolbar-compiled.js","sourcesContent":["/*!\n * Angular Material Design\n * https://github.com/angular/material\n * @license MIT\n * v1.1.1-master-f7ecb4f\n */\n(function( window, angular, undefined ){\n\"use strict\";\n\n/**\n * @ngdoc module\n * @name material.components.toolbar\n */\nmdToolbarDirective['$inject'] = [\"$$rAF\", \"$mdConstant\", \"$mdUtil\", \"$mdTheming\", \"$animate\"];\nangular.module('material.components.toolbar', [\n  'material.core',\n  'material.components.content'\n])\n  .directive('mdToolbar', mdToolbarDirective);\n\n/**\n * @ngdoc directive\n * @name mdToolbar\n * @module material.components.toolbar\n * @restrict E\n * @description\n * `md-toolbar` is used to place a toolbar in your app.\n *\n * Toolbars are usually used above a content area to display the title of the\n * current page, and show relevant action buttons for that page.\n *\n * You can change the height of the toolbar by adding either the\n * `md-medium-tall` or `md-tall` class to the toolbar.\n *\n * @usage\n * <hljs lang=\"html\">\n * <div layout=\"column\" layout-fill>\n *   <md-toolbar>\n *\n *     <div class=\"md-toolbar-tools\">\n *       <h2 md-truncate flex>My App's Title</h2>\n *\n *       <md-button>\n *         Right Bar Button\n *       </md-button>\n *     </div>\n *\n *   </md-toolbar>\n *   <md-content>\n *     Hello!\n *   </md-content>\n * </div>\n * </hljs>\n *\n * <i><b>Note:</b> The code above shows usage with the `md-truncate` component which provides an\n * ellipsis if the title is longer than the width of the Toolbar.</i>\n *\n * ## CSS & Styles\n *\n * The `<md-toolbar>` provides a few custom CSS classes that you may use to enhance the\n * functionality of your toolbar.\n *\n * <div>\n * <docs-css-api-table>\n *\n *   <docs-css-selector code=\"md-toolbar .md-toolbar-tools\">\n *     The `md-toolbar-tools` class provides quite a bit of automatic styling for your toolbar\n *     buttons and text. When applied, it will center the buttons and text vertically for you.\n *   </docs-css-selector>\n *\n * </docs-css-api-table>\n * </div>\n *\n * ### Private Classes\n *\n * Currently, the only private class is the `md-toolbar-transitions` class. All other classes are\n * considered public.\n *\n * @param {boolean=} md-scroll-shrink Whether the header should shrink away as\n * the user scrolls down, and reveal itself as the user scrolls up.\n *\n * _**Note (1):** for scrollShrink to work, the toolbar must be a sibling of a\n * `md-content` element, placed before it. See the scroll shrink demo._\n *\n * _**Note (2):** The `md-scroll-shrink` attribute is only parsed on component\n * initialization, it does not watch for scope changes._\n *\n *\n * @param {number=} md-shrink-speed-factor How much to change the speed of the toolbar's\n * shrinking by. For example, if 0.25 is given then the toolbar will shrink\n * at one fourth the rate at which the user scrolls down. Default 0.5.\n *\n */\n\nfunction mdToolbarDirective($$rAF, $mdConstant, $mdUtil, $mdTheming, $animate) {\n  var translateY = angular.bind(null, $mdUtil.supplant, 'translate3d(0,{0}px,0)');\n\n  return {\n    template: '',\n    restrict: 'E',\n\n    link: function(scope, element, attr) {\n\n      element.addClass('_md');     // private md component indicator for styling\n      $mdTheming(element);\n\n      $mdUtil.nextTick(function () {\n        element.addClass('_md-toolbar-transitions');     // adding toolbar transitions after digest\n      }, false);\n\n      if (angular.isDefined(attr.mdScrollShrink)) {\n        setupScrollShrink();\n      }\n\n      function setupScrollShrink() {\n\n        var toolbarHeight;\n        var contentElement;\n        var disableScrollShrink = angular.noop;\n\n        // Current \"y\" position of scroll\n        // Store the last scroll top position\n        var y = 0;\n        var prevScrollTop = 0;\n        var shrinkSpeedFactor = attr.mdShrinkSpeedFactor || 0.5;\n\n        var debouncedContentScroll = $$rAF.throttle(onContentScroll);\n        var debouncedUpdateHeight = $mdUtil.debounce(updateToolbarHeight, 5 * 1000);\n\n        // Wait for $mdContentLoaded event from mdContent directive.\n        // If the mdContent element is a sibling of our toolbar, hook it up\n        // to scroll events.\n\n        scope.$on('$mdContentLoaded', onMdContentLoad);\n\n        // If the toolbar is used inside an ng-if statement, we may miss the\n        // $mdContentLoaded event, so we attempt to fake it if we have a\n        // md-content close enough.\n\n        attr.$observe('mdScrollShrink', onChangeScrollShrink);\n\n        // If the toolbar has ngShow or ngHide we need to update height immediately as it changed\n        // and not wait for $mdUtil.debounce to happen\n\n        if (attr.ngShow) { scope.$watch(attr.ngShow, updateToolbarHeight); }\n        if (attr.ngHide) { scope.$watch(attr.ngHide, updateToolbarHeight); }\n\n        // If the scope is destroyed (which could happen with ng-if), make sure\n        // to disable scroll shrinking again\n\n        scope.$on('$destroy', disableScrollShrink);\n\n        /**\n         *\n         */\n        function onChangeScrollShrink(shrinkWithScroll) {\n          var closestContent = element.parent().find('md-content');\n\n          // If we have a content element, fake the call; this might still fail\n          // if the content element isn't a sibling of the toolbar\n\n          if (!contentElement && closestContent.length) {\n            onMdContentLoad(null, closestContent);\n          }\n\n          // Evaluate the expression\n          shrinkWithScroll = scope.$eval(shrinkWithScroll);\n\n          // Disable only if the attribute's expression evaluates to false\n          if (shrinkWithScroll === false) {\n            disableScrollShrink();\n          } else {\n            disableScrollShrink = enableScrollShrink();\n          }\n        }\n\n        /**\n         *\n         */\n        function onMdContentLoad($event, newContentEl) {\n          // Toolbar and content must be siblings\n          if (newContentEl && element.parent()[0] === newContentEl.parent()[0]) {\n            // unhook old content event listener if exists\n            if (contentElement) {\n              contentElement.off('scroll', debouncedContentScroll);\n            }\n\n            contentElement = newContentEl;\n            disableScrollShrink = enableScrollShrink();\n          }\n        }\n\n        /**\n         *\n         */\n        function onContentScroll(e) {\n          var scrollTop = e ? e.target.scrollTop : prevScrollTop;\n\n          debouncedUpdateHeight();\n\n          y = Math.min(\n            toolbarHeight / shrinkSpeedFactor,\n            Math.max(0, y + scrollTop - prevScrollTop)\n          );\n\n          element.css($mdConstant.CSS.TRANSFORM, translateY([-y * shrinkSpeedFactor]));\n          contentElement.css($mdConstant.CSS.TRANSFORM, translateY([(toolbarHeight - y) * shrinkSpeedFactor]));\n\n          prevScrollTop = scrollTop;\n\n          $mdUtil.nextTick(function() {\n            var hasWhiteFrame = element.hasClass('md-whiteframe-z1');\n\n            if (hasWhiteFrame && !y) {\n              $animate.removeClass(element, 'md-whiteframe-z1');\n            } else if (!hasWhiteFrame && y) {\n              $animate.addClass(element, 'md-whiteframe-z1');\n            }\n          });\n\n        }\n\n        /**\n         *\n         */\n        function enableScrollShrink() {\n          if (!contentElement)     return angular.noop;           // no md-content\n\n          contentElement.on('scroll', debouncedContentScroll);\n          contentElement.attr('scroll-shrink', 'true');\n\n          $mdUtil.nextTick(updateToolbarHeight, false);\n\n          return function disableScrollShrink() {\n            contentElement.off('scroll', debouncedContentScroll);\n            contentElement.attr('scroll-shrink', 'false');\n\n            updateToolbarHeight();\n          };\n        }\n\n        /**\n         *\n         */\n        function updateToolbarHeight() {\n          toolbarHeight = element.prop('offsetHeight');\n          // Add a negative margin-top the size of the toolbar to the content el.\n          // The content will start transformed down the toolbarHeight amount,\n          // so everything looks normal.\n          //\n          // As the user scrolls down, the content will be transformed up slowly\n          // to put the content underneath where the toolbar was.\n          var margin = (-toolbarHeight * shrinkSpeedFactor) + 'px';\n\n          contentElement.css({\n            \"margin-top\": margin,\n            \"margin-bottom\": margin\n          });\n\n          onContentScroll();\n        }\n\n      }\n\n    }\n  };\n\n}\n\n})(window, window.angular);"]}