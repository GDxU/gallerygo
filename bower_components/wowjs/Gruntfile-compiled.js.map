{"version":3,"sources":["Gruntfile.js"],"names":[],"mappings":";;AAAA;AACA,OAAO,OAAP,GAAiB,UAAS,KAAT,EAAgB;AAC/B,cAAY,CAAC,QAAD,EAAW,cAAX,EAA2B,SAA3B,EAAsC,eAAtC,EAAuD,QAAvD,CAAZ;;AAEA;AACA,QAAM,UAAN,CAAiB;AACf,SAAK,MAAM,IAAN,CAAW,QAAX,CAAoB,cAApB,CADU;AAEf,YAAQ;AACN,YAAM;AACJ,eAAO;AACL,yCAA+B;AAD1B;AADH,OADA;AAMN,eAAS;AACP,gBAAS,8DACP,6CADO,GAEP,wDAFO,GAGP,6EAHO,GAIP,8DALK;AAMP,gBAAQ;AAND;AANH,KAFO;AAiBf,YAAS;AACP,cAAS;AACP,eAAO,CAAC;AACN,kBAAQ,IADF;AAEN,eAAK,MAFC;AAGN,eAAK,UAHC;AAIN,gBAAM,OAJA;AAKN,eAAK;AALC,SAAD;AADA,OADF;AAUP,aAAQ;AACN,eAAO,CAAC;AACN,kBAAQ,IADF;AAEN,eAAK,qBAFC;AAGN,eAAK,UAHC;AAIN,gBAAM,mBAJA;AAKN,eAAK;AALC,SAAD;AADD,OAVD;AAmBP,eAAU;AACR,eAAO,CAAC;AACN,kBAAQ,IADF;AAEN,eAAK,6BAFC;AAGN,eAAK,UAHC;AAIN,gBAAM,2BAJA;AAKN,eAAK;AALC,SAAD;AADC;AAnBH,KAjBM;AA8Cf,aAAU;AACR,WAAU,CAAC,4BAAD,EAA+B,yBAA/B,CADF;AAER,eAAU;AACR,eAAU,0BADF;AAER,iBAAU;AAFF;AAFF,KA9CK;AAqDf,WAAQ;AACN,aAAO,CACL,OADK,EAEL,gCAFK,CADD;AAKN,aAAO;AALD,KArDO;AA4Df,WAAQ;AACN,cAAS;AACP,eAAU,cADH;AAEP,iBAAU;AAFH,OADH;AAKN,eAAU;AACR,eAAU,SADF;AAER,iBAAU;AAFF;AALJ;AA5DO,GAAjB;;AAwEA;AACA,QAAM,YAAN,CAAmB,aAAnB;AACA,QAAM,YAAN,CAAmB,uBAAnB;AACA,QAAM,YAAN,CAAmB,sBAAnB;AACA,QAAM,YAAN,CAAmB,qBAAnB;AACA,QAAM,YAAN,CAAmB,sBAAnB;;AAEA,QAAM,YAAN,CAAmB,SAAnB,EAA8B,SAA9B;;AAEA;AACA,QAAM,YAAN,CAAmB,QAAnB,EAA6B,CAAC,QAAD,EAAW,SAAX,CAA7B;AACD,CAvFD","file":"Gruntfile-compiled.js","sourcesContent":["/*global module:false*/\nmodule.exports = function(grunt) {\n  mainTasks = ['coffee', 'growl:coffee', 'jasmine', 'growl:jasmine', 'uglify']\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    uglify: {\n      dist: {\n        files: {\n          'dist/<%= pkg.name %>.min.js': 'dist/<%= pkg.name %>.js'\n        }\n      },\n      options: {\n        banner : '/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - ' +\n          '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n          '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\\\n\" : \"\" %>' +\n          '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +\n          ' Licensed <%= _.pluck(pkg.licenses, \"type\").join(\", \") %> */',\n        report: 'gzip'\n      }\n    },\n    coffee : {\n      plugin : {\n        files: [{\n          expand: true,\n          cwd: 'src/',\n          src: '*.coffee',\n          dest: 'dist/',\n          ext: '.js'\n        }]\n      },\n      specs : {\n        files: [{\n          expand: true,\n          cwd: 'spec/coffeescripts/',\n          src: '*.coffee',\n          dest: 'spec/javascripts/',\n          ext: '.js'\n        }]\n      },\n      helpers : {\n        files: [{\n          expand: true,\n          cwd: 'spec/coffeescripts/helpers/',\n          src: '*.coffee',\n          dest: 'spec/javascripts/helpers/',\n          ext: '.js'\n        }]\n      }\n    },\n    jasmine : {\n      src     : ['spec/javascripts/libs/*.js', 'dist/<%= pkg.name %>.js'],\n      options : {\n        specs   : 'spec/javascripts/**/*.js',\n        helpers : 'spec/javascripts/helpers/**/*.js'\n      }\n    },\n    watch : {\n      files: [\n        'src/*',\n        'spec/coffeescripts/**/*.coffee'\n      ],\n      tasks: mainTasks\n    },\n    growl : {\n      coffee : {\n        title   : 'CoffeeScript',\n        message : 'Compiled successfully'\n      },\n      jasmine : {\n        title   : 'Jasmine',\n        message : 'Tests passed successfully'\n      }\n    }\n  });\n\n  // Lib tasks.\n  grunt.loadNpmTasks('grunt-growl');\n  grunt.loadNpmTasks('grunt-contrib-jasmine');\n  grunt.loadNpmTasks('grunt-contrib-coffee');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n\n  grunt.registerTask('default', mainTasks);\n\n  // Travis CI task.\n  grunt.registerTask('travis', ['coffee', 'jasmine']);\n};\n"]}