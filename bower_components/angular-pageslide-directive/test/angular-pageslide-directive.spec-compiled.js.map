{"version":3,"sources":["angular-pageslide-directive.spec.js"],"names":[],"mappings":"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","file":"angular-pageslide-directive.spec-compiled.js","sourcesContent":["describe('ng-pageslide: ', function() {\n  'use strict';\n\n  var $compile;\n  var $timeout;\n  var $document = jasmine.createSpyObj('$document', ['on', 'off']);\n  var scope;\n  var isolateScope;\n  var element;\n  var compilePageslide;\n\n  beforeEach(function (done) {\n    module('pageslide-directive', [\n      '$provide',\n      function ($provide) {\n        $provide.value('$document', $document);\n      }\n    ]);\n    compilePageslide = function (html) {\n      inject([\n        '$compile',\n        '$rootScope',\n        '$document',\n        '$timeout',\n        function(_$compile_, $rootScope, $document, _$timeout_){\n          $compile = _$compile_;\n          $timeout = _$timeout_;\n          scope = $rootScope.$new();\n          element = angular.element(html);\n          $compile(element)(scope);\n          scope.$digest();\n          isolateScope = element.isolateScope();\n        }\n      ]);\n    };\n    done();\n  });\n\n\n  afterEach(function(){\n    // try to clean Dom\n    var slider = document.querySelector('.ng-pageslide');\n    var pageslide = document.querySelector('#test-pageslide');\n    document.body.innerHTML = '';\n  });\n\n  describe('initialization', function () {\n    describe('when the element is invalid', function () {\n      describe('because there is no content inside of the root element', function () {\n        it('should throw an exception for no content', function (done) {\n          expect(function () {compilePageslide('<pageslide></pageslide>');}).toThrow();\n          done();\n        });\n      });\n      describe('because the root element is not a div', function () {\n        it('should throw an exception for no content', function (done) {\n          expect(function () {compilePageslide('<p pageslide></p>');}).toThrow();\n          done();\n        });\n      });\n    });\n\n    describe('when the element is valid', function () {\n      describe('and has defined the container', function () {\n        beforeEach(function (done) {\n          angular.element(document.body).append('<div id=\"customContainer\">custom container text</div>');\n          compilePageslide([\n            '<div pageslide ps-container=\"customContainer\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        afterEach(function (done) {\n          var customContainer = document.querySelector('#customContainer');\n          document.body.removeChild(customContainer);\n          done();\n        });\n\n        it('should contain the pageslide with the custom defined container', function (done) {\n            expect(angular.element(document.querySelector('#customContainer')).html())\n                .toContain('pageslide');\n            done();\n        });\n\n        it('should set the position to relative', function (done) {\n            var slider = document.querySelector('#customContainer');\n            expect(angular.element(slider).css('position')).toEqual('relative');\n            done();\n        });\n      });\n\n      describe('and has defined the body class', function () {\n        //TODO: right now, it looks like there is a mixup between className and bodyClass, most likely a bug\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div pageslide ps-body-class=\"customBodyClass\" ps-class=\"customBodyClass\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        it('should add the class to the pageslide element', function (done) {\n          expect(angular.element(document.querySelector('.customBodyClass')).html()).toBeDefined();\n          done();\n        });\n      });\n\n      describe('and has set push to true', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div pageslide ps-push=\"true\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        it('should set the width ', function (done) {\n          var body = angular.element(document.body);\n          scope.is_open = true;\n          scope.$digest();\n          scope.is_open = false;\n          scope.$digest();\n          expect(body.css('right')).toEqual('0px');\n          expect(body.css('left')).toEqual('0px');\n          done();\n        });\n      });\n\n      /*\n      describe('when the psSize is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<pageslide ps-size=\"{{size}}\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</pageslide>'\n          ].join(''));\n          done();\n        });\n        it('should set the size accordingly without opening the pageslide', function (done) {\n          scope.is_open = false;\n          scope.$digest();\n          expect(isolateScope.psOpen).toEqual(false);\n          scope.size = '150px';\n          scope.$digest();\n          expect(isolateScope.psOpen).toEqual(false);\n          scope.is_open = true;\n          scope.$digest();\n          var body = angular.element(document.body);\n          expect(body.html()).toContain('width: 150px;');\n          done();\n        });\n        });\n        */\n\n      describe('when psAutoClose is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<pageslide ps-auto-close=\"true\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</pageslide>'\n          ].join(''));\n          done();\n        });\n        it('should open on $locationChangeStart', function (done) {\n          isolateScope.psOpen = true;\n          scope.$broadcast('$locationChangeStart');\n          expect(isolateScope.psOpen).toEqual(false);\n          isolateScope.$digest();\n          isolateScope.psOpen = true;\n          scope.$broadcast('$stateChangeStart');\n          expect(isolateScope.psOpen).toEqual(false);\n          done();\n        });\n      });\n\n      describe('when onopen is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<pageslide onopen=\"callback\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</pageslide>'\n          ].join(''));\n          done();\n        });\n        it('should call onopen callback after transition', function (done) {\n          scope.is_open = true;\n          scope.callback = jasmine.createSpy('callback');\n          scope.$digest();\n          element[0].dispatchEvent(new Event('transitionend'));\n          expect(scope.callback).toHaveBeenCalled();\n          done();\n        });\n      });\n\n      describe('when onclose is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<pageslide onclose=\"callback\" ps-open=\"is_open\">',\n            '<div>test</div>',\n            '</pageslide>'\n          ].join(''));\n          done();\n        });\n        it('should call onOpen callback after transition', function (done) {\n          scope.is_open = false;\n          scope.callback = jasmine.createSpy('callback');\n          scope.$digest();\n          element[0].dispatchEvent(new Event('transitionend'));\n          expect(scope.callback).toHaveBeenCalled();\n          done();\n        });\n      });\n\n    });\n  });\n\n  describe('functionality', function () {\n    describe('default/right pageslide', function () {\n      it('Should attach the pageslide panel to <body>', function(done) {\n        // Create template DOM for directive\n        compilePageslide([\n          '<div>',\n          '<div pageslide ps-open=\"is_open\" ps-speed=\"-1.5\">',\n          '<div id=\"target\">',\n          '<p>some random content...</p>',\n          '<a id=\"target-close\" href=\"#\">Click to close</a>',\n          '</div>',\n          '</div>',\n          '</div>'\n        ].join(''));\n\n        // Check for DOM Manipulation\n        var el = document.querySelector('.ng-pageslide');\n        var attached_to = el.parentElement.tagName;\n        expect(attached_to).toBe('BODY');\n        done();\n      });\n\n      it('Should open and close watching for ps-open', function (done) {\n        // Create template DOM for directive\n        compilePageslide([\n          '<div>',\n          '<div pageslide ps-open=\"is_open\" ps-speed=\"0.5\" href=\"#target\">',\n          '<div id=\"target\">',\n          '<p>some random content...</p>',\n          '<a id=\"target-close\" href=\"#\">Click to close</a>',\n          '</div>',\n          '</div>',\n          '</div>'\n        ].join(''));\n\n        var right;\n\n        scope.is_open = true;\n        scope.$digest();\n        right = document.querySelector('.ng-pageslide').style.right;\n        expect(right).toBe('0px');\n\n        scope.is_open = false;\n        scope.$digest();\n        right = document.querySelector('.ng-pageslide').style.right;\n        expect(right).toBe('-300px');\n        done();\n      });\n\n      it('Should attach the pageslide inner content to <body>', function (done) {\n        // Create template DOM for directive\n        compilePageslide([\n          '<pageslide ps-open=\"is_open\">',\n          '<div>',\n          '<p>some random content...</p>',\n          '</div>',\n          '</pageslide>'\n        ].join(''));\n\n        // Check for DOM Manipulation\n        var el = document.querySelector('.ng-pageslide');\n        var attached_to = el.parentNode.localName;\n        expect(attached_to).toBe('body');\n        done();\n      });\n\n      it('Should remove slider when pageslide\\'s scope be destroyed', function (done) {\n        // Create template DOM for directive\n        compilePageslide([\n          '<div>',\n          '<div pageslide ps-open=\"is_open\" ps-speed=\"0.5\" href=\"#target\">',\n          '<div id=\"target\">',\n          '<p>some random content...</p>',\n          '<a id=\"target-close\" href=\"#\">Click to close</a>',\n          '</div>',\n          '</div>',\n          '</div>'\n        ].join(''));\n        scope.is_open = true;\n        scope.$digest();\n        scope.$destroy();\n        expect(isolateScope).toBeUndefined();\n        done();\n      });\n\n      describe('when binding the key listener', function () {\n        beforeEach(function (done) {\n          // Create template DOM for directive\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-key-listener=\"true\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n        describe('and the user presses the escape key', function () {\n          describe('and the keyCode is populated', function () {\n            it('should close the slider', function (done) {\n              $document.on.and.callFake(function (actionType, callback) {\n                callback({\n                  keyCode: 27 //same as ESC_KEY\n                });\n              });\n              scope.is_open = true;\n              scope.$digest();\n              expect($document.on).toHaveBeenCalled();\n              expect(scope.is_open).toEqual(false);\n              done();\n            });\n          });\n\n          describe('and the \"which\" property is populated', function () {\n            it('should close the slider', function (done) {\n              $document.on.and.callFake(function (actionType, callback) {\n                callback({\n                  which: 27 //same as ESC_KEY\n                });\n              });\n              scope.is_open = true;\n              scope.$digest();\n              expect($document.on).toHaveBeenCalled();\n              expect(scope.is_open).toEqual(false);\n              done();\n            });\n          });\n        });\n\n        describe('and the user presses a key thats not the escape key', function () {\n          describe('and the keyCode is populated', function () {\n            it('should close the slider', function (done) {\n              $document.on.and.callFake(function (actionType, callback) {\n                callback({\n                  keyCode: 99 //random key\n                });\n              });\n              scope.is_open = true;\n              scope.$digest();\n              expect($document.on).toHaveBeenCalled();\n              expect(scope.is_open).toEqual(true);\n              done();\n            });\n          });\n\n          describe('and the \"which\" property is populated', function () {\n            it('should close the slider', function (done) {\n              $document.on.and.callFake(function (actionType, callback) {\n                callback({\n                  which: 99 //random key\n                });\n              });\n              scope.is_open = true;\n              scope.$digest();\n              expect($document.on).toHaveBeenCalled();\n              expect(scope.is_open).toEqual(true);\n              done();\n            });\n          });\n        });\n      });\n    });\n\n    describe('left pageslide', function () {\n      describe('by default', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-side=\"left\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        it('should set the appropriate styles', function (done) {\n          // Check for DOM Manipulation\n          var slider = angular.element(document.body);\n          expect(slider.html()).toContain('height: 100%;');\n          expect(slider.html()).toContain('top: 0px;');\n          expect(slider.html()).toContain('bottom: 0px;');\n          //when opening the slider\n          scope.is_open = true;\n          scope.$digest();\n          expect(slider.html()).toContain('left: 0px;');\n          //when closing the slider\n          scope.is_open = false;\n          scope.$digest();\n          expect(slider.html()).toContain('left: -300px;');\n          done();\n        });\n      });\n\n      describe('when push is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-side=\"left\" ps-push=\"true\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        // TODO this should check the body as well\n        it('should set the appropriate styles', function (done) {\n          // Check for DOM Manipulation\n          var slider = angular.element(document.body);\n          expect(slider.html()).toContain('height: 100%;');\n          expect(slider.html()).toContain('top: 0px;');\n          expect(slider.html()).toContain('bottom: 0px;');\n          //when opening the slider\n          scope.is_open = true;\n          scope.$digest();\n          expect(slider.html()).toContain('left: 0px;');\n          //TODO: find out why these are not being set in the test\n          // expect(slider.html()).toContain('left: 300px;');\n          // expect(slider.html()).toContain('right: -300px;');\n          //when closing the slider\n          scope.is_open = false;\n          scope.$digest();\n          expect(slider.html()).toContain('left: -300px;');\n          done();\n        });\n      });\n    });\n\n    describe('top pageslide', function () {\n      describe('by default', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-side=\"top\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        it('should set the appropriate styles', function (done) {\n          // Check for DOM Manipulation\n          var slider = angular.element(document.body);\n          expect(slider.html()).toContain('width: 100%;');\n          expect(slider.html()).toContain('left: 0px;');\n          expect(slider.html()).toContain('right: 0px;');\n          //when opening the slider\n          scope.is_open = true;\n          scope.$digest();\n          expect(slider.html()).toContain('top: 0px;');\n          //when closing the slider\n          scope.is_open = false;\n          scope.$digest();\n          expect(slider.html()).toContain('top: -300px;');\n          done();\n        });\n      });\n\n      describe('when push is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-side=\"top\" ps-push=\"true\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        // TODO this should check the body as well\n        it('should set the appropriate styles', function (done) {\n          // Check for DOM Manipulation\n          var slider = angular.element(document.body);\n          expect(slider.html()).toContain('width: 100%;');\n          expect(slider.html()).toContain('left: 0px;');\n          expect(slider.html()).toContain('right: 0px;');\n          //when opening the slider\n          scope.is_open = true;\n          scope.$digest();\n          expect(slider.html()).toContain('top: 0px;');\n          //TODO: find out why these are not being set in the test\n          // expect(slider.html()).toContain('top: 300px;');\n          // expect(slider.html()).toContain('bottom: -300px;');\n          //when closing the slider\n          scope.is_open = false;\n          scope.$digest();\n          expect(slider.html()).toContain('top: -300px;');\n          done();\n        });\n      });\n    });\n\n    describe('bottom pageslide', function () {\n      describe('by default', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-side=\"bottom\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        it('should set the appropriate styles', function (done) {\n          // Check for DOM Manipulation\n          var slider = angular.element(document.body);\n          expect(slider.html()).toContain('width: 100%;');\n          expect(slider.html()).toContain('left: 0px;');\n          expect(slider.html()).toContain('right: 0px;');\n          //when opening the slider\n          scope.is_open = true;\n          scope.$digest();\n          expect(slider.html()).toContain('bottom: 0px;');\n          //when closing the slider\n          scope.is_open = false;\n          scope.$digest();\n          expect(slider.html()).toContain('bottom: -300px;');\n          done();\n        });\n      });\n\n      // TODO this hsould check the body as well\n      describe('when push is set', function () {\n        beforeEach(function (done) {\n          compilePageslide([\n            '<div>',\n            '<div pageslide ps-open=\"is_open\" ps-side=\"bottom\" ps-push=\"true\">',\n            '<div id=\"target\">',\n            '<p>some random content...</p>',\n            '<a id=\"target-close\" href=\"#\">Click to close</a>',\n            '</div>',\n            '</div>',\n            '</div>'\n          ].join(''));\n          done();\n        });\n\n        it('should set the appropriate styles', function (done) {\n          // Check for DOM Manipulation\n          var slider = angular.element(document.body);\n          expect(slider.html()).toContain('width: 100%;');\n          expect(slider.html()).toContain('left: 0px;');\n          expect(slider.html()).toContain('right: 0px;');\n          //when opening the slider\n          scope.is_open = true;\n          scope.$digest();\n          expect(slider.html()).toContain('bottom: 0px;');\n          //TODO: find out why these are not being set in the test\n          // expect(slider.html()).toContain('bottom: 300px;');\n          // expect(slider.html()).toContain('top: -300px;');\n          //when closing the slider\n          scope.is_open = false;\n          scope.$digest();\n          expect(slider.html()).toContain('bottom: -300px;');\n          done();\n        });\n      });\n    });\n\n    xit('Should sync ps-open state between pageslide\\'s scope and parent scope', function () {\n      //TODO: refactor code to properly assign isolateScope\n      // Create template DOM for directive\n      compilePageslide([\n        '<div>',\n        '<div pageslide=\"right\" ps-open=\"is_open\" ps-speed=\"0.5\" href=\"#target\">',\n        '<div id=\"target\">',\n        '<p>some random content...</p>',\n        '<a id=\"target-close\" href=\"#\">Click to close</a>',\n        '</div>',\n        '</div>',\n        '</div>'\n      ].join(''));\n\n      scope.is_open = true;\n      scope.$digest();\n\n      expect(isolateScope.psOpen).toBe(true);\n\n      scope.is_open = false;\n      scope.$digest();\n\n      expect(isolateScope.psOpen).toBe(false);\n    });\n  });\n});\n"]}