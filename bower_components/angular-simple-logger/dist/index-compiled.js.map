{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n *  angular-simple-logger\n *\n * @version: 0.1.7\n * @author: Nicholas McCready\n * @date: Tue Jan 26 2016 10:15:01 GMT-0500 (EST)\n * @license: MIT\n */\nvar angular = require('angular');\n\nangular.module('nemLogging', []);\n\nangular.module('nemLogging').provider('nemDebug', function (){\n  var ourDebug = null;\n  ourDebug = require('debug');\n\n  this.$get =  function(){\n    //avail as service\n    return ourDebug;\n  };\n\n  //avail at provider, config time\n  this.debug = ourDebug;\n\n  return this;\n});\nvar bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  slice = [].slice;\n\nangular.module('nemLogging').provider('nemSimpleLogger', [\n  'nemDebugProvider', function(nemDebugProvider) {\n    var LEVELS, Logger, _debugCache, _fns, _isValidLogObject, _maybeExecLevel, _wrapDebug, i, key, len, nemDebug, val;\n    nemDebug = nemDebugProvider.debug;\n    _debugCache = {};\n    _fns = ['debug', 'info', 'warn', 'error', 'log'];\n    LEVELS = {};\n    for (key = i = 0, len = _fns.length; i < len; key = ++i) {\n      val = _fns[key];\n      LEVELS[val] = key;\n    }\n    _maybeExecLevel = function(level, current, fn) {\n      if (level >= current) {\n        return fn();\n      }\n    };\n    _isValidLogObject = function(logObject) {\n      var isValid, j, len1;\n      isValid = false;\n      if (!logObject) {\n        return isValid;\n      }\n      for (j = 0, len1 = _fns.length; j < len1; j++) {\n        val = _fns[j];\n        isValid = (logObject[val] != null) && typeof logObject[val] === 'function';\n        if (!isValid) {\n          break;\n        }\n      }\n      return isValid;\n    };\n\n    /*\n      Overide logeObject.debug with a nemDebug instance\n      see: https://github.com/visionmedia/debug/blob/master/Readme.md\n     */\n    _wrapDebug = function(namespace, logObject) {\n      var debugInstance, j, len1, newLogger;\n      if (_debugCache[namespace] == null) {\n        _debugCache[namespace] = nemDebug(namespace);\n      }\n      debugInstance = _debugCache[namespace];\n      newLogger = {};\n      for (j = 0, len1 = _fns.length; j < len1; j++) {\n        val = _fns[j];\n        newLogger[val] = val === 'debug' ? debugInstance : logObject[val];\n      }\n      return newLogger;\n    };\n    Logger = (function() {\n      function Logger($log1) {\n        var fn1, j, len1, level, logFns;\n        this.$log = $log1;\n        this.spawn = bind(this.spawn, this);\n        if (!this.$log) {\n          throw 'internalLogger undefined';\n        }\n        if (!_isValidLogObject(this.$log)) {\n          throw '@$log is invalid';\n        }\n        this.doLog = true;\n        logFns = {};\n        fn1 = (function(_this) {\n          return function(level) {\n            logFns[level] = function() {\n              var args;\n              args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n              if (_this.doLog) {\n                return _maybeExecLevel(LEVELS[level], _this.currentLevel, function() {\n                  var ref;\n                  return (ref = _this.$log)[level].apply(ref, args);\n                });\n              }\n            };\n            return _this[level] = logFns[level];\n          };\n        })(this);\n        for (j = 0, len1 = _fns.length; j < len1; j++) {\n          level = _fns[j];\n          fn1(level);\n        }\n        this.LEVELS = LEVELS;\n        this.currentLevel = LEVELS.error;\n      }\n\n      Logger.prototype.spawn = function(newInternalLogger) {\n        if (typeof newInternalLogger === 'string') {\n          if (!_isValidLogObject(this.$log)) {\n            throw '@$log is invalid';\n          }\n          if (!nemDebug) {\n            throw 'nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!';\n          }\n          return _wrapDebug(newInternalLogger, this.$log);\n        }\n        return new Logger(newInternalLogger || this.$log);\n      };\n\n      return Logger;\n\n    })();\n    this.decorator = [\n      '$log', function($delegate) {\n        var log;\n        log = new Logger($delegate);\n        log.currentLevel = LEVELS.debug;\n        return log;\n      }\n    ];\n    this.$get = [\n      '$log', function($log) {\n        return new Logger($log);\n      }\n    ];\n    return this;\n  }\n]);\n"]}