{"version":3,"sources":["Jakefile.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;AAcA,IAAI,QAAQ,QAAQ,kBAAR,CAAZ;;AAEA,SAAS,IAAT,CAAc,GAAd,EAAmB,KAAnB,EAA0B;AACzB,QAAO,YAAY;AAClB,UAAQ,GAAR,CAAY,GAAZ;AACA,OAAK,IAAL,CAAU,4CAA4C,KAAtD,EACE,EAAC,aAAa,IAAd,EADF,EACuB,YAAY;AAClC,WAAQ,GAAR,CAAY,mBAAZ;AACA;AACA,GAJD;AAKA,EAPD;AAQA;;AAED,KAAK,6CAAL;AACA,KAAK,MAAL,EAAa,EAAC,OAAO,IAAR,EAAb,EAA4B,KAAK,2BAAL,EAAkC,qBAAlC,CAA5B;;AAEA,KAAK,mDAAL;AACA,KAAK,UAAL,EAAiB,EAAC,OAAO,IAAR,EAAjB,EAAgC,KAAK,iCAAL,EAAwC,iCAAxC,CAAhC;;AAEA,KAAK,2CAAL;AACA,KAAK,OAAL,EAAc,EAAC,OAAO,IAAR,EAAd,EAA6B,YAAY;AACxC,OAAM,KAAN,CAAY,QAAZ;AACA,CAFD;;AAIA,KAAK,qBAAL;AACA,KAAK,MAAL,EAAa,CAAC,MAAD,EAAS,UAAT,CAAb,EAAmC,EAAC,OAAO,IAAR,EAAnC,EAAkD,YAAY;AAC7D,OAAM,IAAN,CAAW,QAAX;AACA,CAFD;;AAIA,KAAK,SAAL,EAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB;;AAEA,KAAK,WAAL,CAAiB,UAAjB,EAA6B,YAAY;AACvC,SAAQ,IAAR;AACD,CAFD","file":"Jakefile-compiled.js","sourcesContent":["/*\nLeaflet building, testing and linting scripts.\n\nTo use, install Node, then run the following commands in the project root:\n\n    npm install -g jake\n    npm install\n\nTo check the code for errors and build Leaflet from source, run \"jake\".\nTo run the tests, run \"jake test\".\n\nFor a custom build, open build/build.html in the browser and follow the instructions.\n*/\n\nvar build = require('./build/build.js');\n\nfunction hint(msg, paths) {\n\treturn function () {\n\t\tconsole.log(msg);\n\t\tjake.exec('node node_modules/jshint/bin/jshint -c ' + paths,\n\t\t\t\t{printStdout: true}, function () {\n\t\t\tconsole.log('\\tCheck passed.\\n');\n\t\t\tcomplete();\n\t\t});\n\t}\n}\n\ndesc('Check Leaflet source for errors with JSHint');\ntask('lint', {async: true}, hint('Checking for JS errors...', 'build/hintrc.js src'));\n\ndesc('Check Leaflet specs source for errors with JSHint');\ntask('lintspec', {async: true}, hint('Checking for specs JS errors...', 'spec/spec.hintrc.js spec/suites'));\n\ndesc('Combine and compress Leaflet source files');\ntask('build', {async: true}, function () {\n\tbuild.build(complete);\n});\n\ndesc('Run PhantomJS tests');\ntask('test', ['lint', 'lintspec'], {async: true}, function () {\n\tbuild.test(complete);\n});\n\ntask('default', ['test', 'build']);\n\njake.addListener('complete', function () {\n  process.exit();\n});\n"]}