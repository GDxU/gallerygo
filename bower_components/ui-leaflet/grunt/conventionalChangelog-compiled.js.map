{"version":3,"sources":["conventionalChangelog.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,OAAO,QAAQ,iBAAR,CAAX;AACA,IAAI,OAAO,QAAQ,OAAR,EAAiB,IAA5B;;AAEA;;;;;;;;;;;AAWA,OAAO,OAAP,GAAiB,UAAU,KAAV,EAAiB,OAAjB,EAA0B;AACvC,YAAQ,GAAR,CAAY,UAAZ,EAAwB,KAAK,cAAL,IAAuB,KAAK,OAApD;AACA,WAAO;AACH,iBAAS;AACL,2BAAe;AACX;AACA,wBAAQ,SAFG;AAGX,8BAAc;AAHH,aADV;AAML,qBAAS;AACL,4BAAY,OAAO,KAAK,cAAL,IAAuB,KAAK,OAAnC;AADP;AANJ,SADN;AAWH,iBAAS;AACL,iBAAK;AADA;AAXN,KAAP;AAeH,CAjBD","file":"conventionalChangelog-compiled.js","sourcesContent":["'use strict';\nvar _pkg = require('../package.json');\nvar argv = require('yargs').argv;\n\n/*\n _pkg.nextVersion only works for patch updates\n\n Using changelog in the workflow is not really recommended right now as changelog is not really able to be modified until\n a new tag is released.\n\n Using Yargs as a workaround which grunt should be used in this way:\n\n `grunt changelog --ui_leaflet_ver SOME_TAG_NUMBER`\n */\n\nmodule.exports = function (grunt, options) {\n    console.log('version:', argv.ui_leaflet_ver || _pkg.version);\n    return {\n        options: {\n            changelogOpts: {\n                // conventional-changelog options go here\n                preset: 'angular',\n                releaseCount: 0\n            },\n            context: {\n                currentTag: 'v' + (argv.ui_leaflet_ver || _pkg.version)\n            }\n        },\n        release: {\n            src: 'CHANGELOG.md'\n        }\n    };\n};\n"]}